<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://synrst.de</id>
    <title>自强不息 厚德载物 • Posts by &#34;3. 处理工具&#34; category</title>
    <link href="https://synrst.de" />
    <updated>1970-01-01T00:00:00.000Z</updated>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/IDE/</id>
        <title>IDE</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/IDE/"/>
        <content type="html">&lt;h1 id=&#34;1-Clion&#34;&gt;&lt;a href=&#34;#1-Clion&#34; class=&#34;headerlink&#34; title=&#34;1 Clion&#34;&gt;&lt;/a&gt;1 Clion&lt;/h1&gt;&lt;h2 id=&#34;1-1-linux&#34;&gt;&lt;a href=&#34;#1-1-linux&#34; class=&#34;headerlink&#34; title=&#34;1.1 linux&#34;&gt;&lt;/a&gt;1.1 linux&lt;/h2&gt;&lt;p&gt;有两种 linux 远程方式，包含编译的&lt;a href=&#34;https://www.jetbrains.com/help/clion/remote-projects-support.html&#34;&gt; Full remote mode&lt;/a&gt; 和仅调试 &lt;a href=&#34;https://www.jetbrains.com/help/clion/remote-debug-via-gdb-gdbserver.html&#34;&gt;Remote debug&lt;/a&gt; 模式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Full 模式涉及编译因此要写 CMakeLists.txt&lt;/li&gt;
&lt;li&gt;Full 模式要在 Deployment 选择 mounted folder，否则每次都要用 SFTP 上传源码，要配置 Folder 和 Mappings&lt;ul&gt;
&lt;li&gt;cmake 设置选项 &lt;code&gt;-v -- -j 3&lt;/code&gt; 打印具体的编译命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Debug 模式只需要添加一个配置，指定执行文件的目录，设置 Path mappings。用 Remote GDB Server 或 Remote Debug 都可以&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-1-1-相关问题&#34;&gt;&lt;a href=&#34;#1-1-1-相关问题&#34; class=&#34;headerlink&#34; title=&#34;1.1.1 相关问题&#34;&gt;&lt;/a&gt;1.1.1 相关问题&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;clangd 内存占用过多，限制成 500MB，&lt;a href=&#34;https://stackoverflow.com/questions/61346400/clion-clangd-how-to-limit-memory-usage&#34;&gt;Clion clangd, how to limit memory usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jetbrains.com/help/clion/performance-tuning-tips.html#increase-heap&#34;&gt;堆内存占用过多和其它性能问题&lt;/a&gt;，Help | Change Memory Settings 改成 1000MB&lt;/li&gt;
&lt;li&gt;cmake 输出引号乱码，参考&lt;a href=&#34;https://youtrack.jetbrains.com/issue/CPP-11641&#34;&gt;这个&lt;/a&gt;将 Default encoding 改为 UTF-8，&lt;code&gt;Settings / Preferences | Editor | General | Console_ settings&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;要出现点击函数后卡在 “Resolving References” 上，把 Use navigation via clangd 关了&lt;/li&gt;
&lt;li&gt;ubuntu 20.04 remote debug 开启 sudo 运行后无法 debug（18.04 没这个问题，gdb 版本？），程序退出 &lt;a href=&#34;https://youtrack.jetbrains.com/issue/CPP-23810&#34;&gt;CPP-23810&lt;/a&gt; 和 &lt;a href=&#34;https://youtrack.jetbrains.com/issue/CPP-25441&#34;&gt;CPP-25441&lt;/a&gt;。暂时通过开始 ssh 的 root 登录绕过&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://youtrack.jetbrains.com/issue/CPP-14177&#34;&gt;pretty printers 设置失败&lt;/a&gt;  中 Andrew Brownsword 的回答&lt;ul&gt;
&lt;li&gt;把 Windows clion 下的 &lt;code&gt;bin\gdb\renderers&lt;/code&gt;  拷到 linux&lt;/li&gt;
&lt;li&gt;打开 &lt;code&gt;#com.jetbrains.cidr.execution.debugger&lt;/code&gt; 调试，找到 idea.log 中的 WARN &lt;code&gt;python import sys ... sys.path.insert(0, ...&lt;/code&gt; 开始的这一行，改为 renders 路径，如 &lt;code&gt;sys.path.insert(0, &amp;quot;/home/zack/code/install/renderers&amp;quot;)&lt;/code&gt;。把整个这一行加到 linux 的 gdbinit 文件中，路径在 &lt;code&gt;~/.gdbinit&lt;/code&gt; 或系统配置 &lt;code&gt;/etc/gdb/gdbinit&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;设置断点后 printf 没有输出，&lt;a href=&#34;https://youtrack.jetbrains.com/issue/CPP-10733&#34;&gt;解决方法&lt;/a&gt; 是在程序开始处添加 &lt;code&gt;setbuf(stdout, 0);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-Keil&#34;&gt;&lt;a href=&#34;#2-Keil&#34; class=&#34;headerlink&#34; title=&#34;2 Keil&#34;&gt;&lt;/a&gt;2 Keil&lt;/h1&gt;&lt;h1 id=&#34;3-QT&#34;&gt;&lt;a href=&#34;#3-QT&#34; class=&#34;headerlink&#34; title=&#34;3 QT&#34;&gt;&lt;/a&gt;3 QT&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/yanchenyu365/article/details/110949727&#34;&gt;参考&lt;/a&gt; 从清华镜像下载在线安装工具，QT 账号登录，自定义安装，按参考中截图选择&lt;/p&gt;
&lt;h1 id=&#34;4-VSCode&#34;&gt;&lt;a href=&#34;#4-VSCode&#34; class=&#34;headerlink&#34; title=&#34;4 VSCode&#34;&gt;&lt;/a&gt;4 VSCode&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;解压缩 zip 后，创建 data 文件夹，开启 &lt;a href=&#34;https://code.visualstudio.com/docs/editor/portable&#34;&gt;portable mode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;liveserver 提升端口占用，因为防火墙没放开&lt;/li&gt;
&lt;li&gt;下载 gtags，将 bin 路径添加到系统环境变量，要重启&lt;/li&gt;
&lt;li&gt;要是工程大为了快速查引用，则关 C&amp;#x2F;C++ 扩展，开启 C&amp;#x2F;C++ GNU Global 扩展，&lt;a href=&#34;https://www.jianshu.com/p/df3a8ca739b0&#34;&gt;扩展选择参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-1-快捷键&#34;&gt;&lt;a href=&#34;#4-1-快捷键&#34; class=&#34;headerlink&#34; title=&#34;4.1 快捷键&#34;&gt;&lt;/a&gt;4.1 快捷键&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;ctrl+k, ctrl+s&lt;/td&gt;
&lt;td&gt;查看、设置快捷键&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl + o&lt;/td&gt;
&lt;td&gt;当前符号&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl + shift + o&lt;/td&gt;
&lt;td&gt;模糊全局符号搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alt + t&lt;/td&gt;
&lt;td&gt;全局符号搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;alt + f&lt;/td&gt;
&lt;td&gt;文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F1 &amp;#x2F; ctrl + shift + p&lt;/td&gt;
&lt;td&gt;配置命令&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ctrl + shift + f8 &amp;#x2F; shift + f8&lt;/td&gt;
&lt;td&gt;高亮&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;h2 id=&#34;4-2-自定义编译&#34;&gt;&lt;a href=&#34;#4-2-自定义编译&#34; class=&#34;headerlink&#34; title=&#34;4.2 自定义编译&#34;&gt;&lt;/a&gt;4.2 自定义编译&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;比如 cool 的编译和运行添加两个 task，一个属于 build group，一个是 test。示例 json 如下&lt;/p&gt;
  &lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// See https://go.microsoft.com/fwlink/?LinkId=733558&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// for the documentation about the tasks.json format&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2.0.0&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;tasks&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;编译当前目录&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;coolc&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;$&amp;#123;fileDirname&amp;#125;/*.cl&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;-o&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;$&amp;#123;fileDirname&amp;#125;/$&amp;#123;fileBasenameNoExtension&amp;#125;.s&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;problemMatcher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;build&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;&amp;quot;isDefault&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;spim 运行&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;shell&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;spim&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;$&amp;#123;fileDirname&amp;#125;/$&amp;#123;fileBasenameNoExtension&amp;#125;.s&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;problemMatcher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;attr&#34;&gt;&amp;quot;group&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;attr&#34;&gt;&amp;quot;isDefault&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-3-远程开发&#34;&gt;&lt;a href=&#34;#4-3-远程开发&#34; class=&#34;headerlink&#34; title=&#34;4.3 远程开发&#34;&gt;&lt;/a&gt;4.3 远程开发&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;参考&lt;a href=&#34;https://code.visualstudio.com/docs/remote/ssh&#34;&gt;官方文档&lt;/a&gt; 设置要连接的设备，连上后要设置远程设备的代理的话（如安装插件），在设置的 remote 中 ，设置好后重连&lt;ul&gt;
&lt;li&gt;其它如编译和调试都和&lt;a href=&#34;https://code.visualstudio.com/docs/cpp/config-linux&#34;&gt;本地&lt;/a&gt;一样，由 3 个文件管理，看&lt;a href=&#34;https://code.visualstudio.com/docs/cpp/introvideos-cpp&#34;&gt;介绍视频&lt;/a&gt;更快上手&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tasks.json&lt;/code&gt; (compiler build settings)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;launch.json&lt;/code&gt; (debugger settings)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;c_cpp_properties.json&lt;/code&gt; (compiler path and IntelliSense settings)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;免密码验证，生成 rsa key，&lt;code&gt;C:\Users\XXX\.ssh\config&lt;/code&gt; 文件增加一行 &lt;code&gt;IdentityFile C:\Users\XXX\.ssh\id_rsa&lt;/code&gt; 并把私钥拷贝到这里，公钥放在远程设备的 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 中（没有新建、有则追加）&lt;ul&gt;
&lt;li&gt;参考&lt;a href=&#34;https://code.visualstudio.com/docs/remote/troubleshooting#_configuring-key-based-authentication&#34;&gt;官方文档&lt;/a&gt; 和 &lt;a href=&#34;https://stackoverflow.com/questions/66113731/how-to-save-ssh-password-to-vscode&#34;&gt;stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于改本地 mount 的驱动器，远程执行编译命令的情况，可用 &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=Kelvin.vscode-sshfs&#34;&gt;SSH FS&lt;/a&gt; 的 &lt;code&gt;ssh-shell&lt;/code&gt; task&lt;ul&gt;
&lt;li&gt;host 指定用的配置文件，workingDirectory 指定目录，command 远程执行的命令，注意只打印 stderr 没有 stdout，可 &lt;a href=&#34;https://stackoverflow.com/questions/30542501/on-a-linux-system-how-would-i-redirect-stdout-to-stderr&#34;&gt;redirect stdout to stderr&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;command&amp;quot;: &amp;quot;bash -c \&amp;quot;/usr/class/cs143/cool/bin/coolc ${fileBasenameNoExtension}.cl -o ${fileBasenameNoExtension}.s &amp;amp;&amp;amp; printf &amp;#39;\nCompile Success!\n&amp;#39; \&amp;quot; &amp;quot;,&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-VIM&#34;&gt;&lt;a href=&#34;#5-VIM&#34; class=&#34;headerlink&#34; title=&#34;5 VIM&#34;&gt;&lt;/a&gt;5 VIM&lt;/h1&gt;&lt;h2 id=&#34;5-1-安装&#34;&gt;&lt;a href=&#34;#5-1-安装&#34; class=&#34;headerlink&#34; title=&#34;5.1 安装&#34;&gt;&lt;/a&gt;5.1 安装&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;源码编译方法可以重新查找，目前参考 &lt;a href=&#34;https://github.com/Valloric/YouCompleteMe/wiki/Building-Vim-from-source&#34;&gt;Building-Vim-from-source&lt;/a&gt;，要额外开启 clipboard 和 xterm_clipboard 特性编译时加 –with-x ， &lt;a href=&#34;https://stackoverflow.com/questions/11416069/compile-vim-with-clipboard-and-xterm&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./configure --with-features=huge \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            --enable-multibyte \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --enable-rubyinterp=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --enable-pythoninterp=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --enable-python3interp=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --with-python3-config-dir=/usr/lib/python3.7/config \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --enable-perlinterp=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    --enable-luainterp=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            --enable-gui=gtk2 \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            --enable-cscope \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			--with-x \&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	   --prefix=/usr/local&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make VIMRUNTIMEDIR=/usr/local/share/vim/vim81 -j8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 checkinstall 安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo checkinstall&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 替换默认 vi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;update-alternatives --display vi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo update-alternatives --install /usr/bin/vi vi /usr/local/bin/vim 51 --slave /usr/share/man/man1/vi.1.gz vi.1.gz /usr/local/share/man/man1/vim.1.gz&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 卸载&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dpkg -r vim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可 apt 安装 vim-gome，安装前确定一下版本是 vim8&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-2-TAG-数据库&#34;&gt;&lt;a href=&#34;#5-2-TAG-数据库&#34; class=&#34;headerlink&#34; title=&#34;5.2 TAG 数据库&#34;&gt;&lt;/a&gt;5.2 TAG 数据库&lt;/h2&gt;&lt;h3 id=&#34;5-2-1-内核-tag-生成&#34;&gt;&lt;a href=&#34;#5-2-1-内核-tag-生成&#34; class=&#34;headerlink&#34; title=&#34;5.2.1 内核 tag 生成&#34;&gt;&lt;/a&gt;5.2.1 内核 tag 生成&lt;/h3&gt;&lt;p&gt;tag 生成参考 &lt;a href=&#34;https://stackoverflow.com/questions/33676829/vim-configuration-for-linux-kernel-development&#34;&gt;内核代码生成tag&lt;/a&gt;、&lt;a href=&#34;http://cscope.sourceforge.net/large_projects.html&#34;&gt;cscope 大型项目用法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考第一篇使用 &lt;code&gt;make O=. ARCH=arm SUBARCH=exynos COMPILED_SOURCE=1 cscope tags&lt;/code&gt; 生成&lt;/p&gt;
&lt;p&gt;后续考虑能否生成 gtags 数据库&lt;/p&gt;
&lt;h3 id=&#34;5-2-2-universal-ctags&#34;&gt;&lt;a href=&#34;#5-2-2-universal-ctags&#34; class=&#34;headerlink&#34; title=&#34;5.2.2 universal-ctags&#34;&gt;&lt;/a&gt;5.2.2 universal-ctags&lt;/h3&gt;&lt;p&gt;ubuntu 自带的 ctag 版本太老，源码安装参考 &lt;a href=&#34;https://www.cnblogs.com/zjutzz/p/9393397.html&#34;&gt;Ubuntu16.04安装配置和使用 universal-ctags&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;5-2-3-GTags&#34;&gt;&lt;a href=&#34;#5-2-3-GTags&#34; class=&#34;headerlink&#34; title=&#34;5.2.3 GTags&#34;&gt;&lt;/a&gt;5.2.3 GTags&lt;/h3&gt;&lt;p&gt;下载源码编译安装 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/36279445&#34;&gt;Vim 8 中 C&amp;#x2F;C++ 符号索引：GTags 篇&lt;/a&gt;、&lt;a href=&#34;https://zhuanlan.zhihu.com/p/64842373&#34;&gt;LeaderF 支持 GTags&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于需要跳过的目录 &lt;a href=&#34;https://stackoverflow.com/questions/42315741/how-gtags-exclude-some-specific-subdirectories&#34;&gt;修改配置文件&lt;/a&gt; ，参考 man gtags，如 &lt;code&gt;/src_comm/lib/:&lt;/code&gt;，然后在 vimrc 中设置 &lt;code&gt;let g:Lf_Gtagsconf = &amp;#39;/home/xxx/.vim/gtags.conf&amp;#39;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-3-配置&#34;&gt;&lt;a href=&#34;#5-3-配置&#34; class=&#34;headerlink&#34; title=&#34;5.3 配置&#34;&gt;&lt;/a&gt;5.3 配置&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;按键&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;F2&lt;/td&gt;
&lt;td&gt;paste toggle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F3&lt;/td&gt;
&lt;td&gt;set list toggle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;F4&lt;/td&gt;
&lt;td&gt;highlight toggle&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tab&lt;/td&gt;
&lt;td&gt;insert 切换到 normal&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + leader&lt;/td&gt;
&lt;td&gt;noraml 切换窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;c - k &amp;#x2F; c - j&lt;/td&gt;
&lt;td&gt;上下滚动，set scroll&amp;#x3D;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + q&lt;/td&gt;
&lt;td&gt;关闭窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + w&lt;/td&gt;
&lt;td&gt;删除 buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + e&lt;/td&gt;
&lt;td&gt;[except]删除自己以外的 buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + r&lt;/td&gt;
&lt;td&gt;查找存在定义的引用，不存在定义输命令查&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + t&lt;/td&gt;
&lt;td&gt;[tag] 全局 tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + o&lt;/td&gt;
&lt;td&gt;打开查找结果窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + p&lt;/td&gt;
&lt;td&gt;上一条结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + a&lt;/td&gt;
&lt;td&gt;[alternative buffer] buffer 切换&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + s&lt;/td&gt;
&lt;td&gt;[search]查询字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + d&lt;/td&gt;
&lt;td&gt;查询定义&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + f&lt;/td&gt;
&lt;td&gt;[file] 搜索文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + g&lt;/td&gt;
&lt;td&gt;[tag] 本地 tag&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + j&lt;/td&gt;
&lt;td&gt;[j 与文件 f 键位对应] 最近打开文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + l&lt;/td&gt;
&lt;td&gt;[list] 显示 tag 列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + b&lt;/td&gt;
&lt;td&gt;[buffer] 搜索buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + n&lt;/td&gt;
&lt;td&gt;下一条结果&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + m&lt;/td&gt;
&lt;td&gt;[max]只留下当前窗口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leader + 1-9&lt;/td&gt;
&lt;td&gt;buffer 切换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;插件名称&lt;/th&gt;
&lt;th&gt;介绍&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;LeaderF&lt;/td&gt;
&lt;td&gt;文件、符号、buffer 模糊查找，需要 python 支持&lt;br /&gt;执行 install.sh 提高速度&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;tagbar&lt;/td&gt;
&lt;td&gt;使用 ctag 动态解析 buffer 的 tag，形成 tag 列表，配合 airline 在状态栏显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-airline&lt;/td&gt;
&lt;td&gt;状态栏美化，还带很多插件，tabline 用于 buffer 和 tab 管理。需要的字体在 vi.assets 文件夹里，配置 securecrt 即可&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-airline-themes&lt;/td&gt;
&lt;td&gt;airline 主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;vim-dirvish&lt;/td&gt;
&lt;td&gt;模仿 netrw 不占用侧边栏的文件管理方式，使用当前窗口打开文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;asyncrun&lt;/td&gt;
&lt;td&gt;异步执行 shell 命令，输出到 quickfix&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;BufOnly&lt;/td&gt;
&lt;td&gt;关闭除当前外其它 buffer&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;插件以 help 文档及 github 页面为主，其次看别人的典型用法，英文优先。不排除某些插件的功能就是不完善的可能，因此为了将 vi 用的更好，我认为学习编写插件是必须的。vi 的配置与插件以精简和全面熟悉为原则，只选择少数成熟的插件&lt;/p&gt;
&lt;h2 id=&#34;5-4-配置备份&#34;&gt;&lt;a href=&#34;#5-4-配置备份&#34; class=&#34;headerlink&#34; title=&#34;5.4 配置备份&#34;&gt;&lt;/a&gt;5.4 配置备份&lt;/h2&gt;&lt;p&gt;optionally-loaded 的插件需要把 start 文件夹替换为 opt，相关 &lt;a href=&#34;https://shapeshed.com/vim-packages/&#34;&gt;vim-packages&lt;/a&gt;、&lt;a href=&#34;https://gist.github.com/manasthakur/d4dc9a610884c60d944a4dd97f0b3560&#34;&gt;Using git-submodules to version-control Vim plugins&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 配置放到 .vim&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;mv&lt;/span&gt; .vimrc .vim/vimrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;ln&lt;/span&gt; -s .vim/vimrc .vimrc&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; .vim&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule init&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule add https://github.com/vim-airline/vim-airline.git pack/plugins/start/vim-airline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 安装完后可能需要生成 help tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;:helptags ALL&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 备份到远端&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit -m &lt;span class=&#34;string&#34;&gt;&amp;quot;Initial commit.&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 还原&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;clone&lt;/span&gt; --recurse-submodules -j8 git://github.com/foo/bar.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 或只还原、更新插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule update --init --recursive --remote&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# git checkout 时也更新 submodule 的内容&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule update --recursive&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git checkout master --recurse-submodules&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 删除插件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule deinit pack/plugins/start/vim-airline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; pack/plugins/start/vim-airline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;rm&lt;/span&gt; -Rf pack/plugins/start/vim-airline&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git commit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;5-5-修改别人的插件&#34;&gt;&lt;a href=&#34;#5-5-修改别人的插件&#34; class=&#34;headerlink&#34; title=&#34;5.5 修改别人的插件&#34;&gt;&lt;/a&gt;5.5 修改别人的插件&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在 submodule 中新建 branch，并添加自己的 remote。目前使用的是和 vim 配置备份相同的 repo，分支名称以插件名称命名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;基于这个 branch 修改，并 push -u&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;更新插件的 url 和 branch 为自己的，这样 git push 就可以将插件修改推送到自己的 repo 来备份&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 参考 https://stackoverflow.com/questions/913701/how-to-change-the-remote-repository-for-a-git-submodule&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 列出目前的&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --file=.gitmodules -l&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 改 .gitmodules&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --file=.gitmodules submodule.pack/plugins/start/BufOnly.vim.url git@github.com:Jianfeng-Du/vim-config.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git config --file=.gitmodules submodule.pack/plugins/start/BufOnly.vim.branch BufOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 更新 .git 和 submodule 文件夹中的 config&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;git submodule &lt;span class=&#34;built_in&#34;&gt;sync&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要更新远端的修改，就要切换到原来的 branch pull，然后再把这个 branch merge 到自己修改的 branch 中，然后 push 到自己的 repo。更新了插件需要分别在 submodule 和 主目录提交也可以。&lt;code&gt;git push --recurse-submodules=check&lt;/code&gt;，&lt;code&gt;git push --recurse-submodules=on-demand&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;5-6-操作技巧&#34;&gt;&lt;a href=&#34;#5-6-操作技巧&#34; class=&#34;headerlink&#34; title=&#34;5.6 操作技巧&#34;&gt;&lt;/a&gt;5.6 操作技巧&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;*&lt;/code&gt; 查找指针所在单词的下一个位置，&lt;code&gt;#&lt;/code&gt; 查找上一个，配合高亮开关使用&lt;/li&gt;
&lt;li&gt;移除行尾空格 &lt;code&gt;:%s/\s\+$//e&lt;/code&gt;，&lt;a href=&#34;https://vim.fandom.com/wiki/Search_and_replace&#34;&gt;Search and replace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;wbef 在行中定位，也有大写版本，0^$&lt;/li&gt;
&lt;li&gt;m + 小写字母 buffer 中 mark，大写字母全局 mark。’ 或 &amp;#96; 加字母跳转到 mark，’’ 恢复到跳转前（只能 buffer 内用）&lt;/li&gt;
&lt;li&gt;% 转到匹配的条目&lt;/li&gt;
&lt;li&gt;滚动首字母 up、down、forward、back、Home、Middle、Last &lt;a href=&#34;https://medium.com/usevim/vim-101-quick-movement-c12889e759e0&#34;&gt;Quick Movement&lt;/a&gt;，zz 将光标内容放入总间，zt、zb&lt;/li&gt;
&lt;li&gt;c-r 是重做，redo&lt;/li&gt;
&lt;li&gt;c-d、c-t 调整缩进，插入真正的 tab  &lt;code&gt;&amp;lt;c-v&amp;gt; &amp;lt;tab&amp;gt;&lt;/code&gt; ，&lt;a href=&#34;https://vi.stackexchange.com/questions/704/insert-tabs-in-insert-mode-when-expandtab-is-set&#34;&gt;Insert tabs in INSERT mode when expandtab is set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;获取某项设置的值加 ?，如 set list?&lt;/li&gt;
&lt;li&gt;重新载入配置比如 vimrc，:so %，&lt;a href=&#34;https://superuser.com/questions/132029/how-do-you-reload-your-vimrc-file-without-restarting-vim&#34;&gt;How do you reload your .vimrc file without restarting vim?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;操作字符，yl、r、x&lt;/li&gt;
&lt;li&gt;在 change list 中跳转，&lt;code&gt;&amp;#39;.&lt;/code&gt; &lt;code&gt;g;&lt;/code&gt; &lt;code&gt;g,&lt;/code&gt;，&lt;a href=&#34;https://stackoverflow.com/questions/1722681/how-to-go-back-to-lines-edited-before-the-last-one-in-vim&#34;&gt;How to go back to lines edited before the last one in Vim?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;输入模式 c-p c-n word completion&lt;/li&gt;
&lt;li&gt;5&amp;gt;&amp;gt;.. 缩进，&amp;#x3D; 自动调整 &lt;a href=&#34;https://vim.fandom.com/wiki/Shifting_blocks_visually&#34;&gt;Shifting blocks visually&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.google.com/search?hl=en&amp;as_q=vim+site:springest.io&amp;newwindow=1&#34;&gt;https://www.google.com/search?hl=en&amp;amp;as_q=vim+site%3Aspringest.io&amp;amp;newwindow=1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;5-7-下一步&#34;&gt;&lt;a href=&#34;#5-7-下一步&#34; class=&#34;headerlink&#34; title=&#34;5.7 下一步&#34;&gt;&lt;/a&gt;5.7 下一步&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;vi 操作有个闯关游戏可以不断练习，vi 的优势自然是使用键盘，所以打算练习盲打&lt;/li&gt;
&lt;li&gt;学习编写插件，进一步精简插件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-7-1-相关内容&#34;&gt;&lt;a href=&#34;#5-7-1-相关内容&#34; class=&#34;headerlink&#34; title=&#34;5.7.1 相关内容&#34;&gt;&lt;/a&gt;5.7.1 相关内容&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;以后可以考虑 动态语法检查、git 修改提示、自动补全，&lt;a href=&#34;https://www.zhihu.com/question/47691414/answer/373700711&#34;&gt;如何在 Linux 下利用 Vim 搭建 C&amp;#x2F;C++ 开发环境?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;说明学习编写 vimscript 的重要，给出推荐资料 &lt;a href=&#34;https://www.zhihu.com/question/20833248&#34;&gt;如何优雅地使用 Vim？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jianshu.com/p/e62bbbf31e85&#34;&gt;airline 需要用的中文字体&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;目前可以使用官方插件了，&lt;a href=&#34;https://vi.stackexchange.com/questions/16888/using-global-command-on-quickfix-entries&#34;&gt;修改quickfix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5-7-2-系统学习&#34;&gt;&lt;a href=&#34;#5-7-2-系统学习&#34; class=&#34;headerlink&#34; title=&#34;5.7.2 系统学习&#34;&gt;&lt;/a&gt;5.7.2 系统学习&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://harttle.land/&#34;&gt;介绍 git 与 vi - 中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vimcasts.org/&#34;&gt;介绍 vi 操作视频&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://vim.wikia.com/wiki/Vim_Tips_Wiki&#34;&gt;vim tips&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/3. 处理工具/IDE&#34;&gt;&lt;i class=&#34;fa-solid fa-download fa-2xl&#34; style=&#34;color: gray;&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/linux%E8%BD%AF%E4%BB%B6%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E8%BF%90%E8%A1%8C/</id>
        <title>linux软件编译、安装、运行</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/linux%E8%BD%AF%E4%BB%B6%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E8%BF%90%E8%A1%8C/"/>
        <content type="html">&lt;h1 id=&#34;1-编译&#34;&gt;&lt;a href=&#34;#1-编译&#34; class=&#34;headerlink&#34; title=&#34;1 编译&#34;&gt;&lt;/a&gt;1 编译&lt;/h1&gt;&lt;p&gt;参考 &lt;a href=&#34;https://askubuntu.com/questions/466651/how-do-i-use-the-latest-gcc-on-ubuntu&#34;&gt;https://askubuntu.com/questions/466651/how-do-i-use-the-latest-gcc-on-ubuntu&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-1-静态链接-libc&#34;&gt;&lt;a href=&#34;#1-1-静态链接-libc&#34; class=&#34;headerlink&#34; title=&#34;1.1 静态链接 libc&#34;&gt;&lt;/a&gt;1.1 静态链接 libc&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;不推荐链接 glibc （如 &lt;a href=&#34;https://stackoverflow.com/questions/2725255/create-statically-linked-binary-that-uses-getaddrinfo&#34;&gt;getaddrinfo&lt;/a&gt;）。用 alpine 的 musl，pull &lt;a href=&#34;https://hub.docker.com/_/alpine/&#34;&gt;官方 docker&lt;/a&gt; 后安装 &lt;a href=&#34;https://radupopescu.net/tech/static_linking_for_cpp/#compiling&#34;&gt;这些&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;启动 docker 映射本地的源码，在 docker 中编译&lt;ul&gt;
&lt;li&gt;用 -pthread 而非 -lpthread，&lt;a href=&#34;https://stackoverflow.com/questions/23250863/difference-between-pthread-and-lpthread-while-compiling&#34;&gt;区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;gcc 链接时使用 -static。一个复杂的 &lt;a href=&#34;https://stackoverflow.com/questions/10763394/how-to-build-a-c-program-using-a-custom-version-of-glibc-and-static-linking&#34;&gt;例子&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;编译后 strip 程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-2-交叉编译&#34;&gt;&lt;a href=&#34;#1-2-交叉编译&#34; class=&#34;headerlink&#34; title=&#34;1.2 交叉编译&#34;&gt;&lt;/a&gt;1.2 交叉编译&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# gcc 包含文件查询路径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;echo&lt;/span&gt; | gcc -E -Wp,-v -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 加 -Wl,--verbose 来看使用库的路径信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -o &lt;span class=&#34;built_in&#34;&gt;test&lt;/span&gt; main.o -ltest -L. -Wl,--verbose&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看 so 名字&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readelf -a -W elffile | grep SONAME&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看可执行文件需要的 so&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;readelf -a -W elffile | grep NEEDED&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看符号 https://stackoverflow.com/questions/34732/how-do-i-list-the-symbols-in-a-so-file&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;objdump -t Lib1.o&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;nm -g yourLib.so&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看 man 文档&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;man -l tcpdump.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;对于 rpath 和 sysroot 可参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.fabriziodini.eu/posts/cross_compile_tutorial/&#34;&gt;Building and cross-compile tutorial&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.cnblogs.com/xieyajie/p/4699724.html&#34;&gt;Ubuntu实现树莓派交叉编译（也解释了 build host target）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/LEON1741/article/details/81537529&#34;&gt;交叉编译器的命名规则&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/51839902/using-a-shared-library-in-another-shared-library&#34;&gt;using-a-shared-library-in-another-shared-library&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;编译时指定 soname &lt;code&gt;-soname=name&lt;/code&gt;，也可用工具&lt;a href=&#34;https://stackoverflow.com/questions/18467163/is-there-any-way-to-change-the-soname-of-a-binary-directly&#34;&gt;修改 so 名字&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.huawei.com/consumer/cn/forum/topicview?mod=viewthread&amp;tid=41600287&#34;&gt;理清gcc、libc、libstdc++的关系&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://developer.huawei.com/consumer/cn/forum/topicview?fid=26&amp;tid=41600244&#34;&gt;一张图看懂C&amp;#x2F;C++核心库&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-3-Windows-编译&#34;&gt;&lt;a href=&#34;#1-3-Windows-编译&#34; class=&#34;headerlink&#34; title=&#34;1.3 Windows 编译&#34;&gt;&lt;/a&gt;1.3 Windows 编译&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://cygwin.com/install.html&#34;&gt;安装 cygwin&lt;/a&gt;，保留安装程序用于后续添加&amp;#x2F;删除 package&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://superuser.com/questions/996332/what-is-the-difference-between-the-different-gcc-on-cygwin-and-which-one-to-ins&#34;&gt;gcc 编译器安装包的选择&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;cygwin32-gcc-g++ is a compiler for 32 bit cygwin&lt;/li&gt;
&lt;li&gt;gcc-g++ is the basic 64 bit compiler (you probably must install this one).&lt;/li&gt;
&lt;li&gt;mingw-gcc-g++ is a 32 bit compiler for native 32 bit Windows&lt;/li&gt;
&lt;li&gt;mingw64-x86_64-gcc-g++ is a 64 bit compiler for native 64 bit Windows&lt;/li&gt;
&lt;li&gt;mingw64-i686-gcc-g++ is a 64 bit compiler for native 32 bit Windows&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/27344540/what-do-the-c-compilers-on-cygwin-generate&#34;&gt;gcc 编译器名称区别&lt;/a&gt;，注意  &amp;#x2F;usr&amp;#x2F;bin 下的 gcc 使用的是硬连接，可以用 &lt;code&gt;ls -il /usr/bin/*gcc*&lt;/code&gt; 确认&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;gcc&lt;/code&gt; is just a hard link to &lt;code&gt;x86_64-pc-cygwin-gcc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64-pc-cygwin-gcc&lt;/code&gt; and &lt;code&gt;i686-pc-cygwin-gcc&lt;/code&gt; are as you have said the Cygwin compilers, that is to say the compilers that create programs that rely on &lt;code&gt;cygwin1.dll&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x86_64-w64-mingw32-gcc&lt;/code&gt; and &lt;code&gt;i686-w64-mingw32-gcc&lt;/code&gt; are compilers provided by the &lt;a href=&#34;http://mingw-w64.org/&#34;&gt;Mingw-w64 project&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i686-pc-mingw32-gcc&lt;/code&gt; is a compiler provided by the &lt;a href=&#34;http://mingw.org/&#34;&gt;MinGW project&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;编译和运行&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;依赖 cygwin 的程序要将 &lt;code&gt;/bin/cygwin1.dll&lt;/code&gt; (c:\cygwin\bin\cygwin1.dll) 添加到 windows 的 path 中，使用 ming 编译的不需要&lt;/li&gt;
&lt;li&gt;切换到 d 盘，&lt;code&gt;cd /cygdrive/d&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;必要时使用编程解决，下载 &lt;a href=&#34;https://sourceforge.net/projects/mingw-w64/files/&#34;&gt;mingw-w64&lt;/a&gt; 的 x86_64-win32-seh，&lt;a href=&#34;https://www.eclipse.org/4diac/documentation/html/installation/minGW.html&#34;&gt;安装参考&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;2-安装&#34;&gt;&lt;a href=&#34;#2-安装&#34; class=&#34;headerlink&#34; title=&#34;2 安装&#34;&gt;&lt;/a&gt;2 安装&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;安装前备份虚拟机快照&lt;/li&gt;
&lt;li&gt;修改的配置进行备份，方便出错恢复&lt;/li&gt;
&lt;li&gt;官方安装指南是重点，安装时的提示与安装后的帮助也注意。其它的方法 .&amp;#x2F;configure –help，README and INSTALL 文档&lt;/li&gt;
&lt;li&gt;版本不求新，stable 和 LTS 优先&lt;/li&gt;
&lt;li&gt;版本太老可以考虑万能的源码安装，方便可以选择 apt 安装。ppa 也可以考虑&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-1-apt-安装&#34;&gt;&lt;a href=&#34;#2-1-apt-安装&#34; class=&#34;headerlink&#34; title=&#34;2.1 apt 安装&#34;&gt;&lt;/a&gt;2.1 apt 安装&lt;/h2&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 通过查找名称和描述找到包，i 表示已安装，也可用 apt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt search &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aptitude search &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查看包详细信息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt show &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-cache show &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 查询已安装和要升级某个软件的版本&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt policy fdisk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aptitude versions fdisk&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 模拟安装和模拟升级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get -s install &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aptitude -V -s install &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get -V -s upgrade&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 指定版本安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install &amp;lt;package&amp;gt;=&amp;lt;version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 已安装的软件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt list --installed&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 已安装包的文件列表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;dpkg -L &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 下载包的源码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get &lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt; &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;apt-get &lt;span class=&#34;built_in&#34;&gt;source&lt;/span&gt; &amp;lt;package&amp;gt;=&amp;lt;version&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 为什么安装和为什么没装，从下往上看&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aptitude why &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;aptitude why-not &amp;lt;package&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;2-2-源码安装&#34;&gt;&lt;a href=&#34;#2-2-源码安装&#34; class=&#34;headerlink&#34; title=&#34;2.2 源码安装&#34;&gt;&lt;/a&gt;2.2 源码安装&lt;/h2&gt;&lt;p&gt;源码安装典型步骤&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The autogen.sh script generates the configure script (from configure.ac, using autoconf) and any files it needs (like creating Makefile.in from Makefile.am using automake). This requires autotools to be installed on your system, and it must be run when checking out the project from source control (if configure isn’t checked in). People who download source tarballs can usually skip this step, because output of this step is included in source tarballs.&lt;/p&gt;
&lt;p&gt;The configure script generates Makefile and other files needed to build. Typically Makefile.in is used as a template to generate Makefile (and config.h.in to generate config.h). This process happens using only standard tools installed on your system, like sed and awk, and doesn’t require autotools to be installed.&lt;/p&gt;
&lt;p&gt;The make command builds the software.&lt;/p&gt;
&lt;p&gt;The make install command installs it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;3-运行&#34;&gt;&lt;a href=&#34;#3-运行&#34; class=&#34;headerlink&#34; title=&#34;3 运行&#34;&gt;&lt;/a&gt;3 运行&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://askubuntu.com/questions/454253/how-to-run-32-bit-app-in-ubuntu-64-bit&#34;&gt;在 64 位 linux 运行 32 位程序&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://stackoverflow.com/questions/6270440/simple-logical-operators-in-bash&#34;&gt;这个&lt;/a&gt; 将编译器课程中的 spim 脚本 &lt;code&gt;[${1:0:1} != &amp;quot;-&amp;quot;]&lt;/code&gt; 改成两个方括号外加参数判断 &lt;code&gt;[[ $# -ne 0 &amp;amp;&amp;amp; &amp;quot;${1:0:1}&amp;quot; != &amp;quot;-&amp;quot; ]]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%94%B5%E5%AD%90%E4%B9%A6%E5%A4%84%E7%90%86/</id>
        <title>电子书处理</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%94%B5%E5%AD%90%E4%B9%A6%E5%A4%84%E7%90%86/"/>
        <content type="html">&lt;h1 id=&#34;1-制作书&#34;&gt;&lt;a href=&#34;#1-制作书&#34; class=&#34;headerlink&#34; title=&#34;1 制作书&#34;&gt;&lt;/a&gt;1 制作书&lt;/h1&gt;&lt;h2 id=&#34;1-1-从网页爬取&#34;&gt;&lt;a href=&#34;#1-1-从网页爬取&#34; class=&#34;headerlink&#34; title=&#34;1.1 从网页爬取&#34;&gt;&lt;/a&gt;1.1 从网页爬取&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;request + BeautifulSoup + Chrome（或 &lt;a href=&#34;https://github.com/Sicos1977/ChromeHtmlToPdf&#34;&gt;ChromeHtmlToPdf&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;selenium 也可生成 PDF&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-2-扫描纸质书&#34;&gt;&lt;a href=&#34;#1-2-扫描纸质书&#34; class=&#34;headerlink&#34; title=&#34;1.2 扫描纸质书&#34;&gt;&lt;/a&gt;1.2 扫描纸质书&lt;/h2&gt;&lt;p&gt;参考 asset 中《DIY版简易零边距扫描仪之玻璃夹子方案》&lt;/p&gt;
&lt;h3 id=&#34;1-2-1-用到的工具&#34;&gt;&lt;a href=&#34;#1-2-1-用到的工具&#34; class=&#34;headerlink&#34; title=&#34;1.2.1 用到的工具&#34;&gt;&lt;/a&gt;1.2.1 用到的工具&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;下次试试室内灯光，之前的侧光对于不那么白的纸太暗了&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;玻璃板，超白玻璃 8mm 厚，300 X 250，不要印 3C 标志&lt;/li&gt;
&lt;li&gt;俯拍架，不用带补光灯&lt;/li&gt;
&lt;li&gt;蓝牙遥控器&lt;/li&gt;
&lt;li&gt;ComicEnhancerPro_chn 文件处理&lt;/li&gt;
&lt;li&gt;ABBYY FineReader + Foxit 高级 PDF，PDF 制作和 OCR&lt;/li&gt;
&lt;li&gt;FreePic2Pdf 书签制作&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-2-拍摄&#34;&gt;&lt;a href=&#34;#1-2-2-拍摄&#34; class=&#34;headerlink&#34; title=&#34;1.2.2 拍摄&#34;&gt;&lt;/a&gt;1.2.2 拍摄&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;不一定要找专门的光源，室内灯光不反光也可&lt;/li&gt;
&lt;li&gt;书架第二格，俯拍架足够高，支架手臂与书架平行&lt;/li&gt;
&lt;li&gt;开启拍照声音&lt;/li&gt;
&lt;li&gt;开启长焦镜头，减少畸变&lt;/li&gt;
&lt;li&gt;固定焦距，避免自动对焦模糊&lt;/li&gt;
&lt;li&gt;高质量照片模式&lt;/li&gt;
&lt;li&gt;开启网格线，保证书的文字不倾斜&lt;/li&gt;
&lt;li&gt;增加手机锁屏时间&lt;/li&gt;
&lt;li&gt;两个书架的宽度比书脊稍宽，避免位置移动，同时也方便翻页&lt;/li&gt;
&lt;li&gt;调整到没有大的反光，另一页的反光可以用白纸遮盖（或调整光源？），手机边缘反光用创可贴遮住&lt;/li&gt;
&lt;li&gt;书籍摆放位置划线，避免位置移动&lt;/li&gt;
&lt;li&gt;拍摄完先不移动灯光和相机位置，准备对个别不满意的页面补拍&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-3-文件处理&#34;&gt;&lt;a href=&#34;#1-2-3-文件处理&#34; class=&#34;headerlink&#34; title=&#34;1.2.3 文件处理&#34;&gt;&lt;/a&gt;1.2.3 文件处理&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;文件重命名，同时检查是否漏拍&lt;/li&gt;
&lt;li&gt;图像裁剪，随着厚度增加每张会有细微的偏移，因此图片可能要分多个文件夹裁剪多次&lt;/li&gt;
&lt;li&gt;图像处理，封面单独处理&lt;ul&gt;
&lt;li&gt;彩色 300 DPI&lt;ul&gt;
&lt;li&gt;纠斜: 自动_横排, 边缘扩展&lt;/li&gt;
&lt;li&gt;照度修正&lt;/li&gt;
&lt;li&gt;自动对比1&lt;/li&gt;
&lt;li&gt;亮度: 113&lt;/li&gt;
&lt;li&gt;表面模糊: 遍数&amp;#x3D;1, 算法&amp;#x3D;Photoshop, 半径&amp;#x3D;5, 阀值&amp;#x3D;20&lt;/li&gt;
&lt;li&gt;USM锐化: 遍数&amp;#x3D;1, 数量&amp;#x3D;50, 半径&amp;#x3D;1.0, 阀值&amp;#x3D;0&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;黑白 600 DPI（封面彩色 600 DPI）&lt;ul&gt;
&lt;li&gt;纠斜: 自动_横排, 边缘保留&lt;/li&gt;
&lt;li&gt;切边: DPI&amp;#x3D;600&lt;/li&gt;
&lt;li&gt;照度修正&lt;/li&gt;
&lt;li&gt;自动对比1&lt;/li&gt;
&lt;li&gt;USM锐化: 遍数&amp;#x3D;1, 数量&amp;#x3D;50, 半径&amp;#x3D;1.0, 阀值&amp;#x3D;0&lt;/li&gt;
&lt;li&gt;色彩设置: 色彩数&amp;#x3D;纯黑白, 纯黑白（二值化）选项: 阀值算法&amp;#x3D;Wolf, 窗口尺寸&amp;#x3D;50, 去斑直径&amp;#x3D;2, 去除与边缘接触的黑色区域, 边缘去毛刺&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-PDF-处理&#34;&gt;&lt;a href=&#34;#2-PDF-处理&#34; class=&#34;headerlink&#34; title=&#34;2 PDF 处理&#34;&gt;&lt;/a&gt;2 PDF 处理&lt;/h1&gt;&lt;h2 id=&#34;2-1-制作&#34;&gt;&lt;a href=&#34;#2-1-制作&#34; class=&#34;headerlink&#34; title=&#34;2.1 制作&#34;&gt;&lt;/a&gt;2.1 制作&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ABBYY FineReader&lt;ul&gt;
&lt;li&gt;不开启 MRC 压缩&lt;/li&gt;
&lt;li&gt;因为 ABBYY 无法不改变图片，所以只能无损输出后用 Foxit 压缩&lt;ul&gt;
&lt;li&gt;图像品质，自定义，不改变颜色、不允许质量损失&lt;/li&gt;
&lt;li&gt;Foxit 高级 PDF 优化扫描 PDF，彩色&amp;#x2F;灰度为 JPEG2000 有损，黑白为 JBIG2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;对于大小不一的文档，OCR 识别后，页面大小改变很多。以后考虑先删除大小不一的页面，OCR 后再拼接回去&lt;/li&gt;
&lt;li&gt;备选1 福昕PDF编辑器，通过微信签到获得 OCR 一天功能&lt;/li&gt;
&lt;li&gt;备选2 Foxit 高级 PDF 破解版&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;书签 FreePic2Pdf&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-2-去水印&#34;&gt;&lt;a href=&#34;#2-2-去水印&#34; class=&#34;headerlink&#34; title=&#34;2.2 去水印&#34;&gt;&lt;/a&gt;2.2 去水印&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://meta.appinn.net/t/topic/16983/20&#34;&gt;Acrobat DC 2020 + Enfocus pitstop_13&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;安装&lt;ul&gt;
&lt;li&gt;Acrobat DC 运行 setup&lt;/li&gt;
&lt;li&gt;PitStop 安装后，替换 dll，&lt;code&gt;C:\Program Files (x86)\Adobe\Acrobat DC\Acrobat\plug_ins\Enfocus\PitStop Pro Resources&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行 Acrobat，编辑 - 首选项 - Enfocus PitStop Pro - 语言 - 取消与 StatusCheck 共享语言，选择 Same as Acrobat 或 English&lt;/li&gt;
&lt;li&gt;偶尔弹出中文需要密钥是正常的，改语言为 English 就不弹了&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1Ny4y1D7Sm&#34;&gt;全局更改-移除图形&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV16U4y1p7Li&#34;&gt;图片水印&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1iv411h7ee&#34;&gt;文字水印&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1mh411Q74Y&#34;&gt;指定对象大小移除，包括图片和文字&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1sj411w7H6&#34;&gt;pitstop subpath 移除&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Select inside contour 移除轮廓内的对象&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-3-书签&#34;&gt;&lt;a href=&#34;#2-3-书签&#34; class=&#34;headerlink&#34; title=&#34;2.3 书签&#34;&gt;&lt;/a&gt;2.3 书签&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;自动添加书签&lt;ul&gt;
&lt;li&gt;用 PDF 补丁丁 根据样式识别标题，然后手动调整，见 &lt;a href=&#34;https://www.cnblogs.com/pdfpatcher/p/8452025.html&#34;&gt;作者博客教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;手动改书签&lt;ul&gt;
&lt;li&gt;先提取书签，然后编辑 FreePic2Pdf.itf 和 FreePic2Pdf_bkmk.txt，最后挂书签 目录可从豆瓣或其它 PDF 中提取&lt;/li&gt;
&lt;li&gt;用 PdgCntEditor 调整页码偏移量 FreePic2Pdf.itf 设置 BasePage 目录页码基准（一般与 TextPage 相同），ContentsPage 目录绝对页码，TextPage 正文绝对页码，见 FreePic2Pdf 帮助文档中的接口文件格式说明 FreePic2Pdf_bkmk.txt 为书签，tab 控制目录层级，标题与页码间 tab 分隔，页码基准前的页面用负数表示 notepad++ 常用正则，添加二级标题缩进 &lt;code&gt;^(\d+.\d+)&lt;/code&gt; 替换为 &lt;code&gt;\t\1&lt;/code&gt;。添加标题与页码的 tab，&lt;code&gt;\s+(\d+)$&lt;/code&gt; 替换为 &lt;code&gt;\t\1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/stronghorse/&#34;&gt;软件作者博客&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-4-模糊pdf变清晰&#34;&gt;&lt;a href=&#34;#2-4-模糊pdf变清晰&#34; class=&#34;headerlink&#34; title=&#34;2.4 模糊pdf变清晰&#34;&gt;&lt;/a&gt;2.4 模糊pdf变清晰&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.tencent.com/developer/news/25259&#34;&gt;模糊pdf变清晰&lt;/a&gt; 先提取一张图片，尝试调整参数，然后再批量处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-5-HTML-转-PDF&#34;&gt;&lt;a href=&#34;#2-5-HTML-转-PDF&#34; class=&#34;headerlink&#34; title=&#34;2.5 HTML 转 PDF&#34;&gt;&lt;/a&gt;2.5 HTML 转 PDF&lt;/h2&gt;&lt;p&gt;单个 HTML 转 PDF&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;为了保留书签，另存为 HTML，并用 word 打开&lt;/li&gt;
&lt;li&gt;ALT + F9 批量修改超链接指向当前文档而非网址，一般是删除网址部分，只保留标题指向&lt;/li&gt;
&lt;li&gt;另存为 PDF，选项中保留书签&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;3-epub-等阅读器格式处理&#34;&gt;&lt;a href=&#34;#3-epub-等阅读器格式处理&#34; class=&#34;headerlink&#34; title=&#34;3 epub 等阅读器格式处理&#34;&gt;&lt;/a&gt;3 epub 等阅读器格式处理&lt;/h1&gt;&lt;h2 id=&#34;3-1-转换&#34;&gt;&lt;a href=&#34;#3-1-转换&#34; class=&#34;headerlink&#34; title=&#34;3.1 转换&#34;&gt;&lt;/a&gt;3.1 转换&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;格式 azw3，可支持自定义字体，mobi 格式(new、old、both) 都不支持。两种选择&lt;ol&gt;
&lt;li&gt;需要书籍、笔记同步功能，但无法显示封面。用 calibre 转换为 mobi both 格式（old 格式会被转为 azw，new 格式不让发送），然后使用邮箱发送。此时 amazon 会转为 azw3，由于是 PDOC 类型所以无法显示封面。如 kindle 下载后用 MobiMetaEditor 改为 EBOK 类型则会导致文档无法同步，参见 &lt;a href=&#34;https://bookfere.com/post/668.html&#34;&gt;为何推送 KF8 标准 MOBI 电子书不显示封面&lt;/a&gt;。有趣的是此时 App 端可以显示封面&lt;/li&gt;
&lt;li&gt;不需要同步功能，可以显示封面。用 calibre 转换为 azw3，发送到 kindle，实际上是将封面放入 &lt;code&gt;kindle:\system\thumbnails\thumbnail_ASIN_EBOK_portrait.jpg&lt;/code&gt;，对于中文书籍还需将拼音文件名改回，参见 &lt;a href=&#34;https://mayanbin.com/post/setting-covers-for-kindle.html&#34;&gt;两种方法来给 Kindle 设置图书封面&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;有些书籍打开卡死，重新设置文本编码为 utf-8&lt;/li&gt;
&lt;li&gt;calibre 中文书籍处理&lt;ul&gt;
&lt;li&gt;首选项–保存图书到磁盘，去掉3个勾选项，分别是：分别保存封面、使用OPF文件保存元数据、将非英语字符转换为对应英语字符&lt;/li&gt;
&lt;li&gt;在保存模板中将内容改为： {title}。如果标题不对也需要修改&lt;/li&gt;
&lt;li&gt;保存设置，以后使用时选择&lt;code&gt;保存图书到磁盘&lt;/code&gt;方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-2-移除硬回车&#34;&gt;&lt;a href=&#34;#3-2-移除硬回车&#34; class=&#34;headerlink&#34; title=&#34;3.2 移除硬回车&#34;&gt;&lt;/a&gt;3.2 移除硬回车&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;使用 calibre 的启发式处理，“取消换行因子”来移除&lt;/li&gt;
&lt;li&gt;使用 amazon 发邮件 convert 方式，转换 pdf 为 azw3（弊端是回车替换为了空格，没有目录），但此时打开会导致 kindle 卡死，需要再用 calibre 设置输入文本编码为 utf-8&lt;/li&gt;
&lt;li&gt;更麻烦的方法是，使用正则表达式，转换成 docx 处理完再转回来&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-3-去-DRM&#34;&gt;&lt;a href=&#34;#3-3-去-DRM&#34; class=&#34;headerlink&#34; title=&#34;3.3 去 DRM&#34;&gt;&lt;/a&gt;3.3 去 DRM&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Kindle&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;两种方法都要用 1.24 的 kindle for pc（安装文件在 windows 环境-不常用中），&lt;a href=&#34;https://www.epubor.com/faq.html?utm_medium=soft&amp;utm_source=kindle_version&amp;utm_campaign=kindle&amp;utm_content=EpuborDRMRemovalv1.0.17.820_28888-0#e108&#34;&gt;All DRM Removal 的解释&lt;/a&gt;，并找到下载的电子书 &lt;code&gt;我的文档\My Kindle Content\ASIN_EBOK&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  &lt;img src=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%94%B5%E5%AD%90%E4%B9%A6%E5%A4%84%E7%90%86/../%E7%94%B5%E5%AD%90%E4%B9%A6%E5%A4%84%E7%90%86/%E7%89%88%E6%9C%AC%E6%8F%90%E7%A4%BA.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/noDRM/DeDRM_tools&#34;&gt;新版DeDRM_tools&lt;/a&gt;，&lt;a href=&#34;https://github.com/apprenticeharper/DeDRM_tools/releases/&#34;&gt;旧版&lt;/a&gt; 下载 zip 包，安装插件，设置序列号，拖到 Calibre 中，&lt;a href=&#34;https://www.mzihen.com/kindle-drm-removal/&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;All DRM Removal for Windows 终身版，224。感觉这个就是 DeDRM 的图形封装。用  &lt;code&gt;All DRM Removal for Windows&lt;/code&gt; 破解版，keygen 会报木马，在沙盒中打开获取注册信息即可，切换到 kindle 进行破解&lt;/li&gt;
&lt;li&gt;租借书籍 &lt;a href=&#34;https://www.reddit.com/r/Piracy/comments/ezenaa/how_to_remove_drm_from_an_amazon_kindle_rented/&#34;&gt;注释掉 rented 两行代码&lt;/a&gt; 后可以用，已经加入改后版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Google Books，用到 ADE_2.0，装 .net 3.5，Calibre 的 DeDRM 添加 default_key（与 ADE 装在一个系统），拖动下载的 PDF 到 Calibre 自动解密&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-4-繁简转换&#34;&gt;&lt;a href=&#34;#3-4-繁简转换&#34; class=&#34;headerlink&#34; title=&#34;3.4 繁简转换&#34;&gt;&lt;/a&gt;3.4 繁简转换&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://peggy918.pixnet.net/blog/post/468475997-%E3%80%90calibre%E5%A4%96%E6%8E%9B%E3%80%91-%E7%B0%A1%E8%BD%89%E7%B9%81&#34;&gt;【Calibre外挂】 简转繁功能大揭密&lt;/a&gt;、&lt;a href=&#34;https://bookfere.com/post/162.html&#34;&gt;Calibre 使用教程之电子书繁体字转简体字&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Calibre 安装 &lt;code&gt;Chinese Text Conversion&lt;/code&gt; 插件，编辑书籍，点击&lt;code&gt;文&lt;/code&gt;，台湾繁转简，直排转横排，保存副本后&lt;/li&gt;
&lt;li&gt;再用编辑单个书籍，加载 csr 替换文件（见资源目录），前面的 4 个引号替换可以删除&lt;/li&gt;
&lt;li&gt;对于带图片的文档（漫画），输出配置选择 tablet，不改变图片质量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;步骤 1 要先于 2 因为直接替换直排的文字输出有问题&lt;/p&gt;
&lt;h2 id=&#34;3-5-生成目录&#34;&gt;&lt;a href=&#34;#3-5-生成目录&#34; class=&#34;headerlink&#34; title=&#34;3.5 生成目录&#34;&gt;&lt;/a&gt;3.5 生成目录&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;编辑书籍，工具 – 目录 – 编辑目录，里面有各种生成目录的方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/3. 处理工具/电子书处理&#34;&gt;&lt;i class=&#34;fa-solid fa-download fa-2xl&#34; style=&#34;color: gray;&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/</id>
        <title>代码分析</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"/>
        <content type="html">&lt;h1 id=&#34;1-Call-graph&#34;&gt;&lt;a href=&#34;#1-Call-graph&#34; class=&#34;headerlink&#34; title=&#34;1 Call graph&#34;&gt;&lt;/a&gt;1 Call graph&lt;/h1&gt;&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/solstice/article/details/488865&#34;&gt;分析函数调用关系图 (call graph) 的几种方法&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-1-静态&#34;&gt;&lt;a href=&#34;#1-1-静态&#34; class=&#34;headerlink&#34; title=&#34;1.1 静态&#34;&gt;&lt;/a&gt;1.1 静态&lt;/h2&gt;&lt;h3 id=&#34;1-1-1-Doxygen-Graphviz-Htmlhelp-windows&#34;&gt;&lt;a href=&#34;#1-1-1-Doxygen-Graphviz-Htmlhelp-windows&#34; class=&#34;headerlink&#34; title=&#34;1.1.1 Doxygen + Graphviz + Htmlhelp (windows)&#34;&gt;&lt;/a&gt;1.1.1 Doxygen + Graphviz + Htmlhelp (windows)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;使用 Doxygen + Graphviz + Htmlhelp，&lt;a href=&#34;https://blog.csdn.net/u010740725/article/details/51387810&#34;&gt;Doxygen 配置&lt;/a&gt;，再加上下面两图，不要选生成 Chinese，否则 chm 文件乱码&lt;/p&gt;
&lt;p&gt;  &lt;img src=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/../%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/1.PNG&#34;&gt;&lt;/p&gt;
&lt;p&gt;  &lt;img src=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/../%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/2.PNG&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成前将不用的第三方库代码移走&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Doxygen error: failed to run html help compiler on index.hhp&lt;/code&gt; 报错似乎不影响&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-1-2-SciTools-Understand-windows&#34;&gt;&lt;a href=&#34;#1-1-2-SciTools-Understand-windows&#34; class=&#34;headerlink&#34; title=&#34;1.1.2 SciTools Understand (windows)&#34;&gt;&lt;/a&gt;1.1.2 SciTools Understand (windows)&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://support.scitools.com/t/creating-accurate-c-c-projects/39&#34;&gt;C&amp;#x2F;C++ 项目参考&lt;/a&gt;， &lt;a href=&#34;https://support.scitools.com/t/buildspy-for-gcc-g-users/40&#34;&gt;Buildspy - For gcc&amp;#x2F;g++ Users&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 使用 cygwin 的 /x86_64-w64-mingw32-gcc.exe 编译 openssl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# buildspy.exe、g++wrapper.exe、gccwrapper.exe 移入上一层目录(\SciTools\bin\pc-win64)，否则找不到 qt 等 dll&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 正常配置好项目&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./Configure --prefix=/cygdrive/d/Desktop/openssl2/openssl-openssl-3.0.0-alpha9/install mingw64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 为了找到 buildspy 和 wrapper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; PATH=&lt;span class=&#34;string&#34;&gt;&amp;quot;/cygdrive/d/MySoftware/SciTools/bin/pc-win64:&lt;span class=&#34;variable&#34;&gt;$PATH&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 替换编译器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; CC=gccwrapper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buildspy.exe -db openssl.udb -verbose -cmd make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 打开 openssl.udb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;project -&amp;gt; analyze all files&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;project -&amp;gt; improve project accuracy -&amp;gt; missing includes 添加 include 文件 C:\cygwin64\usr\x86_64-w64-mingw32\sys-root\mingw\include&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;对于 openssl，一处非常奇怪的宏定义字符串导致编译不过问题，原 Makefile 是 -DOPENSSLDIR&amp;#x3D;”&amp;quot;$(OPENSSLDIR)&amp;quot;，使用 gcc 编译没问题，但使用 gccwrapper 就要改成 -DOPENSSLDIR&amp;#x3D;’ “$(OPENSSLDIR)”‘，注意单引号与双引号间的空格不能省略。在同一行有 3 处都要改。宏定义问题可以通过 gcc 加 -v 参数来调试&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-1-3-SciTools-Understand-linux&#34;&gt;&lt;a href=&#34;#1-1-3-SciTools-Understand-linux&#34; class=&#34;headerlink&#34; title=&#34;1.1.3 SciTools Understand (linux)&#34;&gt;&lt;/a&gt;1.1.3 SciTools Understand (linux)&lt;/h3&gt;&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 以 openssl 为例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;make clean&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; PATH=&lt;span class=&#34;string&#34;&gt;&amp;quot;/home/zack/code/proj/scitools/bin/linux64/buildspy:&lt;span class=&#34;variable&#34;&gt;$PATH&lt;/span&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 配置 CC 要在 ./config 之前&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; CC=gccwrapper&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./config&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 正确的话应该看到 buildspy 的打印&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;buildspy -db openssl.udb -verbose -cmd make&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 打开 openssl.udb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# project -&amp;gt; analyze all files，点击结果的 warning 窗口中的 search for missing includes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 把 gcc 的查找路径添加进去 echo | gcc -E -Wp,-v -&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 另外手动定义两个宏  __x86_64__ 和 __LP64__ 为了 include 64位的头文件 &amp;lt;gnu/stubs-64.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;1-1-4-Sourcetrail&#34;&gt;&lt;a href=&#34;#1-1-4-Sourcetrail&#34; class=&#34;headerlink&#34; title=&#34;1.1.4 Sourcetrail&#34;&gt;&lt;/a&gt;1.1.4 Sourcetrail&lt;/h3&gt;&lt;p&gt;用 compilation databases 新建项目&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linux 下用 bear 生成&lt;/li&gt;
&lt;li&gt;全平台使用 cmake 生成，&lt;code&gt;set(CMAKE_EXPORT_COMPILE_COMMANDS ON)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考这两个&lt;br&gt;&lt;a href=&#34;https://aul12.me/embedded/2019/05/27/cubemx-cmake.html&#34;&gt;https://aul12.me/embedded/2019/05/27/cubemx-cmake.html&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://clang.llvm.org/docs/JSONCompilationDatabase.html&#34;&gt;https://clang.llvm.org/docs/JSONCompilationDatabase.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stm32 工程使用 cmake，从而生成 compilation databases&lt;/li&gt;
&lt;li&gt;使用 stm32 官方 ide&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-2-动态&#34;&gt;&lt;a href=&#34;#1-2-动态&#34; class=&#34;headerlink&#34; title=&#34;1.2 动态&#34;&gt;&lt;/a&gt;1.2 动态&lt;/h2&gt;&lt;h3 id=&#34;1-2-1-KcacheGrind-linux&#34;&gt;&lt;a href=&#34;#1-2-1-KcacheGrind-linux&#34; class=&#34;headerlink&#34; title=&#34;1.2.1 KcacheGrind (linux)&#34;&gt;&lt;/a&gt;1.2.1 KcacheGrind (linux)&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/517589/tools-to-get-a-pictorial-function-call-graph-of-code&#34;&gt;tools-to-get-a-pictorial-function-call-graph-of-code&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo apt install kcachegrind valgrind&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Compile the program as usual, no special flags.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 这里的调试信息和优化可以参考 工作-&amp;gt;SDK.md 中对 openssl 的调试选项 export CC=&amp;quot;gcc -g3 -ggdb -gdwarf-4 -fno-inline -O0 -fno-omit-frame-pointer&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -ggdb3 -O0 -o main -std=c99 main.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Generate a callgrind.out.&amp;lt;PID&amp;gt; file.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;valgrind --tool=callgrind ./main arg1 arg2 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 加参数这种更全，没详细研究&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;valgrind --tool=callgrind --dump-instr=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; --collect-jumps=&lt;span class=&#34;built_in&#34;&gt;yes&lt;/span&gt; ./main arg1 arg2 ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Open a GUI tool to visualize callgrind data.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;kcachegrind callgrind.out.1234&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;可以查看&lt;strong&gt;最大开销&lt;/strong&gt;的调用栈 settings -&amp;gt; sidebars -&amp;gt; call stack ，实际的调用栈猜测是有多条的，还是 gdb 断点看吧&lt;/li&gt;
&lt;li&gt;call graph 右键设置好 caller 和 callee depth 后（设小点，防止之后产生的图太大），右键 &lt;a href=&#34;https://stackoverflow.com/questions/29449548/kcachegrind-how-to-draw-the-full-call-graph&#34;&gt;node cost 可以设置为 no minimum&lt;/a&gt;，就可以看到所有的 callee 和 caller 了&lt;/li&gt;
&lt;li&gt;要看某函数调的所有函数，除了上面改 cost 的方法，还可以看下面第一栏的 Callees&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/questions/33769323/make-callgrind-show-all-function-calls-in-the-kcachegrind-callgraph&#34;&gt;生成整张调用图（很大）的另一个工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;右键可以导出成 DOT、png、jpg 文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;1-2-2-gcc-instrumental-linux&#34;&gt;&lt;a href=&#34;#1-2-2-gcc-instrumental-linux&#34; class=&#34;headerlink&#34; title=&#34;1.2.2 gcc instrumental (linux)&#34;&gt;&lt;/a&gt;1.2.2 gcc instrumental (linux)&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/517589/tools-to-get-a-pictorial-function-call-graph-of-code&#34;&gt;看 etrace 部分的回答&lt;/a&gt; 、&lt;a href=&#34;https://users.suse.com/~krahmer/instrumental/instrumental.pdf&#34;&gt;instrumental&lt;/a&gt;，这两个程序使用查找 elf 程序中符号“地址”与“名称“ map 的方式生成调用关系，通过调试 instrument 附带的 C 代码发现，linux 上 __cyg_profile_func_enter 传入的函数指针地址与符号表中的不同，&lt;a href=&#34;https://jvns.ca/blog/2018/01/09/resolving-symbol-addresses/&#34;&gt;可能的原因 (这篇文章是通过符号名查地址)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;所以基于 instrumental 的代码改进，使用 &lt;a href=&#34;https://unix.stackexchange.com/questions/386747/tool-to-print-out-functions-being-called-during-run-time&#34;&gt;dladdr&lt;/a&gt; 接口获得地址对应的符号名，除了 &lt;code&gt;-finstrument-functions&lt;/code&gt;，还要加 &lt;code&gt;-O0 -rdynamic -ldl&lt;/code&gt;，不用加 &lt;code&gt;-g&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;类似的还有 &lt;a href=&#34;https://stackoverflow.com/a/351980&#34;&gt;backtrace_symbols&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;代码见 instrumental 文件夹，目前还&lt;strong&gt;不支持多线程&lt;/strong&gt;，没有锁和分线程统计&lt;/p&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gcc -shared -fPIC -Wall inst.c -o inst.so -ldl&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;gcc -rdynamic -finstrument-functions -O0 -o code code.c&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LD_PRELOAD=/home/inst.so ./code&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 以 openssl 为例，openssl 因为有 static 函数，所以效果不太好&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;export&lt;/span&gt; CC=&lt;span class=&#34;string&#34;&gt;&amp;quot;gcc -rdynamic -finstrument-functions -O0 &amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./config&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;TODO 想支持多线程，把 openssl 的图画出来，把 static 函数批量替换会怎样？可参考 github 上 &lt;a href=&#34;https://github.com/finaldie/ftracer&#34;&gt;ftracer&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1-3-手绘&#34;&gt;&lt;a href=&#34;#1-3-手绘&#34; class=&#34;headerlink&#34; title=&#34;1.3 手绘&#34;&gt;&lt;/a&gt;1.3 手绘&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/31757959&#34;&gt;xmind 的逻辑图&lt;/a&gt;，比起 mindmaster 没有节点数目的限制，可以一个文件创建多个画布，免费导出 svg&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-内存占用&#34;&gt;&lt;a href=&#34;#2-内存占用&#34; class=&#34;headerlink&#34; title=&#34;2 内存占用&#34;&gt;&lt;/a&gt;2 内存占用&lt;/h1&gt;&lt;p&gt;valgrind-3.16.1 交叉编译，&lt;a href=&#34;https://blog.csdn.net/sunqian666888/article/details/84454844&#34;&gt;参考&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.valgrind.org/info/platforms.html&#34;&gt;Supported Platforms&lt;/a&gt;，对 kernel 和 glibc 的版本有要求&lt;/li&gt;
&lt;li&gt;–prefix 的路径要和最终运行的路径一致&lt;/li&gt;
&lt;li&gt;修改 configure  &lt;code&gt;armv7*)&lt;/code&gt; 改为 &lt;code&gt;armv7*|arm*)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;.&amp;#x2F;configure –prefix&amp;#x3D;&amp;#x2F;data&amp;#x2F;update&amp;#x2F;valgrind –host&amp;#x3D;arm-linux-gnueabi , make, make install&lt;/li&gt;
&lt;li&gt;精简 lib&amp;#x2F;valgrind 目录下文件 &lt;code&gt;rm callgrind-arm-linux helgrind-arm-linux cachegrind-arm-linux dhat-arm-linux drd-arm-linux lackey-arm-linux exp-bbv-arm-linux&lt;/code&gt;，减少占用&lt;/li&gt;
&lt;li&gt;要统计的程序使用 -g 编译，-O 优化等级不重要，不会影响堆内存统计&lt;/li&gt;
&lt;li&gt;获得最大栈深，根据手册所说栈采样会慢 &amp;#x2F;data&amp;#x2F;update&amp;#x2F;valgrind&amp;#x2F;bin&amp;#x2F;valgrind –tool&amp;#x3D;massif –heap&amp;#x3D;no –stacks&amp;#x3D;yes .&amp;#x2F;sdk 。但这样无法得到最大栈深的调用栈，将线程的栈故意比最大栈深小一些，使用 gdb 调试，得到触发 stackoverflow 的地方。实测，用 ulimit -s 调用栈打不出来&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://valgrind.org/docs/manual/ms-manual.html&#34;&gt;valgrind Massif官方文档&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;栈统计的几种方法&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.embedded.com/mastering-stack-and-heap-for-system-reliability-part-2-properly-allocating-stacks/&#34;&gt;Properly allocating stacks，这篇文章一共 3 部分&lt;/a&gt;、&lt;a href=&#34;https://embeddedgurus.com/stack-overflow/2009/03/computing-your-stack-size/&#34;&gt;Computing your stack size&lt;/a&gt; ，google ”find max stack depth by stack overflow“ 可以看到 keil 和 IAR 的文章，linux 平台上能想到的办法是改 massif 的源码来记录 detailed snapshot&lt;/p&gt;
&lt;h1 id=&#34;3-调试&#34;&gt;&lt;a href=&#34;#3-调试&#34; class=&#34;headerlink&#34; title=&#34;3 调试&#34;&gt;&lt;/a&gt;3 调试&lt;/h1&gt;&lt;h2 id=&#34;3-1-gdb&#34;&gt;&lt;a href=&#34;#3-1-gdb&#34; class=&#34;headerlink&#34; title=&#34;3.1 gdb&#34;&gt;&lt;/a&gt;3.1 gdb&lt;/h2&gt;&lt;p&gt;&lt;a href=&#34;https://www.linux.com/news/remote-cross-target-debugging-gdb-and-gdbserver/&#34;&gt;https://www.linux.com/news/remote-cross-target-debugging-gdb-and-gdbserver/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://sourceware.org/gdb/wiki/BuildingCrossGDBandGDBserver%EF%BC%8C%E5%8C%85%E5%90%AB&#34;&gt;https://sourceware.org/gdb/wiki/BuildingCrossGDBandGDBserver，包含&lt;/a&gt; host、target 解释&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 记得装这个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo apt-get install texinfo&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 可以创建不同的 build 文件夹来编译&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# gdb &amp;amp; gdbserver&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../configure --host=mipsel-openwrt-linux --prefix=/home/zack/code/proj/gdb_install&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# gdb&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;../configure --with-expat --target=mipsel-openwrt-linux --prefix=/home/zack/code/proj/gdbonly_install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-1-1-gdbserver&#34;&gt;&lt;a href=&#34;#3-1-1-gdbserver&#34; class=&#34;headerlink&#34; title=&#34;3.1.1 gdbserver&#34;&gt;&lt;/a&gt;3.1.1 gdbserver&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;传入环境变量方法&lt;ul&gt;
&lt;li&gt;sudo gdbserver –wrapper env ‘LD_LIBRARY_PATH&amp;#x3D;&amp;#x2F;lib&amp;#x2F;libpcap&amp;#x2F;lib’ –  :1234 .&amp;#x2F;tiny&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-1-2-修改&#34;&gt;&lt;a href=&#34;#3-1-2-修改&#34; class=&#34;headerlink&#34; title=&#34;3.1.2 修改&#34;&gt;&lt;/a&gt;3.1.2 修改&lt;/h3&gt;&lt;p&gt;为了编译通过做得修改，ubuntu 18.04 环境。基于 master 分支 &lt;code&gt;ee6d95574b 2019-09-04  (HEAD -&amp;gt; master, origin/master, origin/HEAD) Automatic date update in version.in&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/../%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/gdb-20190904-ee6d95574b.diff&#34;&gt;diff 文件&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 拷贝到源码目录，使用 patch &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;patch -p1 &amp;lt;patch.diff&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h3 id=&#34;3-1-3-调试&#34;&gt;&lt;a href=&#34;#3-1-3-调试&#34; class=&#34;headerlink&#34; title=&#34;3.1.3 调试&#34;&gt;&lt;/a&gt;3.1.3 调试&lt;/h3&gt;&lt;p&gt;&lt;a href=&#34;https://wizardforcel.gitbooks.io/100-gdb-tips/set-print-pretty-on.html&#34;&gt;100 个 gdb技巧&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gdbserver &amp;lt;host-ip&amp;gt;:2345 tinyeye &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;./mipsel-openwrt-linux-gdb tinyeye&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;target remote 192.168.37.1:2345&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 每行打印一个结构体成员&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt; pretty on&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p *(struct list_head *)0x469594&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://www.cprogramming.com/debugging/segfaults.html&#34;&gt;segfaults 常见定位方法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/3. 处理工具/代码分析&#34;&gt;&lt;i class=&#34;fa-solid fa-download fa-2xl&#34; style=&#34;color: gray;&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/office/</id>
        <title>office</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/office/"/>
        <content type="html">&lt;p&gt;表格快速添加多个新行，鼠标放在表格外的换行位置，回车添加新行，按 F4 多次重复添加 &lt;/p&gt;
&lt;p&gt;将表格选中行下移，Alt + Shift + 下&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/</id>
        <title>词典软件</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/"/>
        <content type="html">&lt;h1 id=&#34;1-GoldenDict&#34;&gt;&lt;a href=&#34;#1-GoldenDict&#34; class=&#34;headerlink&#34; title=&#34;1 GoldenDict&#34;&gt;&lt;/a&gt;1 GoldenDict&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;需要 linux 版翻译时使用 GoldenDict&lt;/li&gt;
&lt;li&gt;参考 &lt;a href=&#34;https://github.com/Dictionaryphile/GoldenDict_zh_manual&#34;&gt;github GoldenDict 手册&lt;/a&gt; 下载64bit QT5 压缩版本&lt;/li&gt;
&lt;li&gt;新建 portable 变成便携版，生成的 index 子文件中为词典索引&lt;/li&gt;
&lt;li&gt;将指向 Dictionary 文件夹的快捷方式放入 content，除了欧路专用格式，其它与欧路共用。调整词典顺序&lt;/li&gt;
&lt;li&gt;虽然可以添加欧路和有道在线词典，但查词会变慢，因此不添加且将维基百科也禁用&lt;/li&gt;
&lt;li&gt;新建配置文件调整字体和大小，调整搜索框大小，选择显示哪些面板，关闭不可用的屏幕取词相关功能&lt;/li&gt;
&lt;li&gt;修改设置如下，关闭“双击翻译”，查询结果中继续取词通过弹窗的方式，不使用跳转。基本不使用多标签功能。风格调整为白色背景。&lt;br&gt;&lt;img src=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/../%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/1.png&#34; alt=&#34;词典设置&#34;&gt;&lt;/li&gt;
&lt;li&gt;设置 AHK 脚本自启动实现双击查词&lt;/li&gt;
&lt;li&gt;阅读帮助文档中的快捷键实现高效查词&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-欧路词典&#34;&gt;&lt;a href=&#34;#2-欧路词典&#34; class=&#34;headerlink&#34; title=&#34;2 欧路词典&#34;&gt;&lt;/a&gt;2 欧路词典&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;有生词多终端同步需求时，购买欧路。同时也可用来背单词，配合 kindlemate 背生词 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/85959508&#34;&gt;欧路词典应用指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;设置字体最大，去掉“取词只显示第一本词典”选项，取词窗口选择固定高度，勾选“划词后直接显示翻译窗口”，去掉每日推荐&lt;/li&gt;
&lt;li&gt;手动划词快捷键 Ctrl + F10&lt;/li&gt;
&lt;li&gt;词典配置从软件的 &lt;code&gt;欧路词典与配置&lt;/code&gt; 文件夹导入&lt;/li&gt;
&lt;li&gt;日语&lt;ul&gt;
&lt;li&gt;勾选允许对中文查词，因为日语里有中文单词&lt;/li&gt;
&lt;li&gt;去掉 &lt;code&gt;搜索列表优先使用在线词典&lt;/code&gt;，否则日语查词有问题&lt;/li&gt;
&lt;li&gt;调整 PC 和手机端的发音顺序，让日语优先于中文，这样同汉字的日语单词才正确发音&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-词典&#34;&gt;&lt;a href=&#34;#3-词典&#34; class=&#34;headerlink&#34; title=&#34;3 词典&#34;&gt;&lt;/a&gt;3 词典&lt;/h1&gt;&lt;h2 id=&#34;3-1-选择&#34;&gt;&lt;a href=&#34;#3-1-选择&#34; class=&#34;headerlink&#34; title=&#34;3.1 选择&#34;&gt;&lt;/a&gt;3.1 选择&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/64925212&#34;&gt;欧路词典打磨指南&lt;/a&gt; 先柯林斯，然后朗文。一共推荐 5 本字典&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/20214473&#34;&gt;知乎常用词典介绍&lt;/a&gt;，给出的词典很乱，而且介绍的词典与电子版有差距，电子版的质量可能很差&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.runningcheese.com/dictionary&#34;&gt;ESL词典比较和下载&lt;/a&gt;，比较了 6 种 ESL 词典，并给出朗文和其它专用词典的下载，从电子版质量来看确实朗文收录的最多最好，其次是 科林斯、牛津，像麦克米伦、韦氏、剑桥的电子版排版和词条数都弱，不使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-2-获取&#34;&gt;&lt;a href=&#34;#3-2-获取&#34; class=&#34;headerlink&#34; title=&#34;3.2 获取&#34;&gt;&lt;/a&gt;3.2 获取&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://pdawiki.com/forum/&#34;&gt;词典论坛&lt;/a&gt;，用户名是 &lt;code&gt;e****s&lt;/code&gt;，里面的词典需要权限才能下，有名的词典可以通过网上搜索标题的方式获取&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skywind3000/ECDICT/wiki/%E7%AE%80%E6%98%8E%E8%8B%B1%E6%B1%89%E5%AD%97%E5%85%B8%E5%A2%9E%E5%BC%BA%E7%89%88&#34;&gt;340万的简明词典&lt;/a&gt;，带词频提示，朗文才 23 万，这个词典简洁且全，故显示排在第一位&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;3-3-词典列表&#34;&gt;&lt;a href=&#34;#3-3-词典列表&#34; class=&#34;headerlink&#34; title=&#34;3.3 词典列表&#34;&gt;&lt;/a&gt;3.3 词典列表&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;双击 mdx 文件，欧路词典可以在导入前查看词典信息，词条数，但词典信息可能没有词条数&lt;/li&gt;
&lt;li&gt;GoldenDict 建立索引后可以看到准确的词条数&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;欧路和 GoldenDict 共用词典&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;简明英汉增强版-去音标&lt;/td&gt;
&lt;td&gt;欧路格式版无法用，用 mdx 格式的。GoldenDict 可以用候选的有音标 CSS 版&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;新东方词根联想记忆_考研+托福+gre&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LDOCE 5++ V2.15&lt;/td&gt;
&lt;td&gt;朗文，ESL，非母语者&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vocabulary.com 20170103&lt;/td&gt;
&lt;td&gt;通俗解释和例句。这个版本不会卡死&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OELDV1.51&lt;/td&gt;
&lt;td&gt;母语词典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Oxford Collocations Dictionary for students of English&lt;/td&gt;
&lt;td&gt;搭配词典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Computer &amp;amp; Network Dicts&lt;/td&gt;
&lt;td&gt;计算机专用分组 5 本词典，已删排版和词条过少的词典&lt;br /&gt;WhatIsTechTarget 欧路加载不了&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;新汉英大辞典&lt;/td&gt;
&lt;td&gt;汉英&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;—– 下面是候选词典 —–&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;简明英汉增强版-CSS&lt;/td&gt;
&lt;td&gt;适合 GoldenDict 美化有音标，但欧路用原生格式更快，且不需要音标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;LDOCE 5++ V1.35&lt;/td&gt;
&lt;td&gt;旧版朗文，在欧路上有空白问题，但色彩比新版丰富些，词条数少了 5万&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CollinsV2.30&lt;/td&gt;
&lt;td&gt;英英解释较易懂，适合初学者，ESL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OALECD，牛津高阶英汉双解词典(第8版)&lt;/td&gt;
&lt;td&gt;双解，ESL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;COCA词频 60000&lt;/td&gt;
&lt;td&gt;简明增强词典已包含 COCA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;优词词根 18667&lt;/td&gt;
&lt;td&gt;较简洁，从背单词角度仅次于 新东方考研、托福、gre词汇词根及联想记忆，但仍有一些词源介绍&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Vocabulary.com 20180417&lt;/td&gt;
&lt;td&gt;导致欧路和GoldenDict 偶尔卡死&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;欧路-英语词根词源 词典&lt;/td&gt;
&lt;td&gt;英语来源部分目前不需要，只是为了辅助记忆。较专业&lt;br /&gt;mdx 版词典可以在 pdawiki 找到&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;欧路专有词典&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;常用例句库&lt;/td&gt;
&lt;td&gt;与 Vocabulary.com 配合，比原生例句准确些&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;听力原声例句&lt;/td&gt;
&lt;td&gt;与 Vocabulary.com 配合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;词组 | 习惯用语&lt;/td&gt;
&lt;td&gt;与 Oxford Collocations Dictionary for students of English 配合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;有道在线词典&lt;/td&gt;
&lt;td&gt;最后手段&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在线词典参考&lt;/td&gt;
&lt;td&gt;在线权威词典&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;全文搜索&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/../%E8%AF%8D%E5%85%B8%E8%BD%AF%E4%BB%B6/2.png&#34; alt=&#34;欧路词典&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-4-修改&#34;&gt;&lt;a href=&#34;#3-4-修改&#34; class=&#34;headerlink&#34; title=&#34;3.4 修改&#34;&gt;&lt;/a&gt;3.4 修改&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;修改词典内容&lt;ul&gt;
&lt;li&gt;用 MdxExport36 解开 mdd、mdx 文件&lt;/li&gt;
&lt;li&gt;用 emeditor 编辑 mdx，如正则替换&lt;/li&gt;
&lt;li&gt;用工具转换 mdd 中的媒体文件，如 aac 转 spf&lt;/li&gt;
&lt;li&gt;用 MdxBuilder 3.0 Beta2 （注意不是官网 4.0 版本）重新打包，mdx 打包&lt;a href=&#34;https://www.pdawiki.com/forum/thread-35617-1-1.html&#34;&gt;参考&lt;/a&gt;、mdd 打包&lt;a href=&#34;https://forum.freemdict.com/t/topic/9708&#34;&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;相关软件在 &lt;code&gt;欧路词典与配置&lt;/code&gt; 里面&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;修改外部 CSS&lt;ul&gt;
&lt;li&gt;注意，改后在欧路词典设置中，要清除缓存来生效&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/3. 处理工具/词典软件&#34;&gt;&lt;i class=&#34;fa-solid fa-download fa-2xl&#34; style=&#34;color: gray;&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/</id>
        <title>编译工具</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/"/>
        <content type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%BC%96%E8%AF%91%E5%B7%A5%E5%85%B7/../Makefile.pdf&#34;&gt;跟我一起写Makefile&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;《嵌入式 Linux C 语言程序设计》，make&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;1-CMake&#34;&gt;&lt;a href=&#34;#1-CMake&#34; class=&#34;headerlink&#34; title=&#34;1 CMake&#34;&gt;&lt;/a&gt;1 CMake&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;推荐 out of source builds，输出不混在一起，git 工具好管理，可以创建多个 build，如 debug&amp;#x2F;release。build 与 source 同一等级，不在 source 内部&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在多个平台测试以避免写出平台相关的 cmake&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择编译器和 Generator，两者不同搭配可有不同的 build 目录，只需指定一次&lt;/p&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cmake -B build -G &lt;span class=&#34;string&#34;&gt;&amp;quot;MinGW Makefiles&amp;quot;&lt;/span&gt; -D CMAKE_MAKE_PROGRAM=&lt;span class=&#34;string&#34;&gt;&amp;quot;D:/soft/mingw64/bin/mingw32-make.exe&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成和编译始终在源码根目录&lt;/p&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 生成 build system&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake -B build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 编译&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake --build build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# verbose and N parallel build&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake --build build -v -j N&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 列出 target&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake --build build -t &lt;span class=&#34;built_in&#34;&gt;help&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 编译 target&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake --build build -t Tutorial&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake --build /pathTo/build --config Debug --target MyApp&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 列出可设置的选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake -LH build&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 设置选项&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;调试 CMake&lt;/p&gt;
  &lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 用 --trace 打印太多了，所以一般 --trace-source 指定源码根目录的 CMakeLists.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cmake -B build --trace-source=&lt;span class=&#34;string&#34;&gt;&amp;quot;CMakeLists.txt&amp;quot;&lt;/span&gt; -DUSE_MYMATH:BOOL=OFF&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;target 可以是虚拟的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;变量都是字符串类型，值有空格要加引号，多个值用分号连起来。未定义的变量是空字符串。${} 可以嵌套引用，可作为变量名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;unset(myVar) &amp;#x2F; set(myVar) 用来 unset 变量&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ENV{varName} 修改环境变量，环境变量只影响这次 cmake 执行&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cache 和普通变量同名，普通变量会掩盖 cache 变量，但在一些情况 P26 会相反，cache 变量会被使用。正因为有同名情况，所以要给一个变量明确置空 set(foo “”) 而非使用 unset(foo)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cache 变量的修改需要 force 关键字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;命令行定义 cache 变量，建议指定类型；-U 取消定义&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cmake-gui 一直 （配置 + 点 Configure） 直到没有红色然后点 Generate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;给 cache 变量一个下划线结尾的前缀方便 cmake-gui 分组，项目相关的也用前缀方便以后给其它项目使用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;文件的 IS_NEWER_THAN 要用 NOT 方式使用，因为 P44&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;不使用加引号的字符串，避免 3.1 以下版本解释为变量，进行变量替换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;函数传参，引号分割的字符串会被当作不同的参数，要注意何时用引号括起来&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;尽量用函数而非宏来更好隔离&lt;/p&gt;
&lt;p&gt;  &lt;a href=&#34;https://askubuntu.com/questions/355565/how-do-i-install-the-latest-version-of-cmake-from-the-command-line&#34;&gt;ubuntu 安装最新 cmake&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-介绍&#34;&gt;&lt;a href=&#34;#2-介绍&#34; class=&#34;headerlink&#34; title=&#34;2 介绍&#34;&gt;&lt;/a&gt;2 介绍&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;编译、链接、库 等原理&lt;/li&gt;
&lt;li&gt;三要素，目标、依赖、命令，依赖比目标或目标不存在新就执行命令。找到关系树的末端再从末端进行判断，末端比根旧则什么都不做，新则执行命令。&lt;/li&gt;
&lt;li&gt;不要用环境变量 MAKEFILES&lt;/li&gt;
&lt;li&gt;Makefile 的组成&lt;ul&gt;
&lt;li&gt;显示规则，我们写的&lt;/li&gt;
&lt;li&gt;隐含规则，.o 自动生成 .c 依赖的关系 和 编译命令&lt;/li&gt;
&lt;li&gt;变量定义&lt;/li&gt;
&lt;li&gt;文件指示&lt;ul&gt;
&lt;li&gt;&lt;code&gt;include &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#if&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;多行命令&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;注释，# 转义&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-规则&#34;&gt;&lt;a href=&#34;#3-规则&#34; class=&#34;headerlink&#34; title=&#34;3 规则&#34;&gt;&lt;/a&gt;3 规则&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;规则中可以用通配符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;变量中的通配符不会展开，除非&lt;/p&gt;
  &lt;figure class=&#34;highlight makefile&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 文件夹下所有的 .c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;objects := &lt;span class=&#34;variable&#34;&gt;$(&lt;span class=&#34;built_in&#34;&gt;wildcard&lt;/span&gt; *.c)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# 文件夹下所有的 .o&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;objects := &lt;span class=&#34;variable&#34;&gt;$(&lt;span class=&#34;built_in&#34;&gt;patsubst&lt;/span&gt; %.c,%.o,$(&lt;span class=&#34;built_in&#34;&gt;wildcard&lt;/span&gt; *.c)&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用 vpath 指定多个搜索目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;伪目标两个作用 1. clean 2. 一次生成多个目标&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;静态模式与多目标 %，具体看参考&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;依赖的头文件自动生成的方法，具体看参考&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-命令&#34;&gt;&lt;a href=&#34;#4-命令&#34; class=&#34;headerlink&#34; title=&#34;4 命令&#34;&gt;&lt;/a&gt;4 命令&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;@ 可以不显示这条命令&lt;/li&gt;
&lt;li&gt;语句前加 - 可以忽略错误继续执行&lt;/li&gt;
&lt;li&gt;嵌套执行 makefile&lt;ul&gt;
&lt;li&gt;$(MAKE) -C subdir&lt;/li&gt;
&lt;li&gt;export variable &amp;#x3D; value  或者 unexport 或者 export 导出所有变量到下级&lt;/li&gt;
&lt;li&gt;MAKEFLAGS 和 SHELL 永远被传递给下级，除非见参考文档&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;常用命令可以定义成命令包&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-变量&#34;&gt;&lt;a href=&#34;#5-变量&#34; class=&#34;headerlink&#34; title=&#34;5 变量&#34;&gt;&lt;/a&gt;5 变量&lt;/h1&gt;&lt;p&gt;建议小写作为变量名，大写作为控制隐含规则和用户重载命令选项时使用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;递归展开，无法追加 VAR&amp;#x3D;var&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单展开 VAR:&amp;#x3D;var&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;?&amp;#x3D; 被定义过什么都不做，没定义则赋值&lt;/p&gt;
&lt;p&gt;  变量使用 $(VAR)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;预定义变量，比如 CC、RM、CFLAGS&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;自动变量，比如 $@、$&amp;lt;、$^&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make 启动时自动创建与系统相同数值的环境变量&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-make&#34;&gt;&lt;a href=&#34;#6-make&#34; class=&#34;headerlink&#34; title=&#34;6 make&#34;&gt;&lt;/a&gt;6 make&lt;/h1&gt;&lt;p&gt;有一些 GNU 约定好的目标表示名称，可以作为写 makefile 的参考，比如 &lt;code&gt;install&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用来调试 makefile&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;-n&lt;/td&gt;
&lt;td&gt;dry run&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-t&lt;/td&gt;
&lt;td&gt;只更新(touch)目标的时间，假装编译&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-q&lt;/td&gt;
&lt;td&gt;看看某个目标在 makefile 中存在吗&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;–debug&lt;/td&gt;
&lt;td&gt;打印调试&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;-w&lt;/td&gt;
&lt;td&gt;打印目录，用来调试嵌套 make 调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;其它参数见 man 或者 上面的参考文档&lt;/p&gt;
&lt;h1 id=&#34;7-隐含规则&#34;&gt;&lt;a href=&#34;#7-隐含规则&#34; class=&#34;headerlink&#34; title=&#34;7 隐含规则&#34;&gt;&lt;/a&gt;7 隐含规则&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;C程序隐含规则，$(CC) –c $(CPPFLAGS) $(CFLAGS)，其它程序规则见参考文档&lt;/li&gt;
&lt;li&gt;隐含规则使用的变量，如 CC、CFLAGS 具体见文档&lt;/li&gt;
&lt;li&gt;模式规则 %，与自动化变量。if 判断中不能使用自动化变量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/3. 处理工具/编译工具&#34;&gt;&lt;i class=&#34;fa-solid fa-download fa-2xl&#34; style=&#34;color: gray;&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
    <entry>
        <id>https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%A8%B1%E4%B9%90/</id>
        <title>音视频学习与娱乐</title>
        <link rel="alternate" href="https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E9%9F%B3%E8%A7%86%E9%A2%91%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%A8%B1%E4%B9%90/"/>
        <content type="html">&lt;h1 id=&#34;1-应对禁止录屏&#34;&gt;&lt;a href=&#34;#1-应对禁止录屏&#34; class=&#34;headerlink&#34; title=&#34;1 应对禁止录屏&#34;&gt;&lt;/a&gt;1 应对禁止录屏&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;添加虚拟显示器，将视频传送给另一端后，用另一端的软件录屏&lt;ul&gt;
&lt;li&gt;HDMI 欺骗器&lt;/li&gt;
&lt;li&gt;spacedesk&lt;/li&gt;
&lt;li&gt;视频采集卡&lt;/li&gt;
&lt;li&gt;用 QQ 远程协助、远程桌面、虚拟机也是这个思路，即绕过软件层面的检测&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也可找没被检测到的录屏软件&lt;/li&gt;
&lt;li&gt;保险起见，每天录屏时间不要超过一个合理时间，如 8h&lt;/li&gt;
&lt;li&gt;Potplayer 录屏没声音时，打开 - 设备设置 - 摄像头 - 音频录制设备 - 数字音频接口。视频 –&amp;gt; 录制视频(ALT + C)，保持默认MPEG-4编码，勾选开启高质量视频压缩，然后把播放器静音，最小化&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;2-视频笔记&#34;&gt;&lt;a href=&#34;#2-视频笔记&#34; class=&#34;headerlink&#34; title=&#34;2 视频笔记&#34;&gt;&lt;/a&gt;2 视频笔记&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;用 &lt;a href=&#34;https://github.com/aidenlx/media-extended&#34;&gt;media extended&lt;/a&gt; 插件&lt;ul&gt;
&lt;li&gt;配合 Templater 和 QuickAdd 实现 &lt;a href=&#34;https://www.bilibili.com/video/BV1H24y1N7iG/&#34;&gt;自动移动光标到末尾&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;timestamp offset 设为 5，避免添加晚了&lt;/li&gt;
&lt;li&gt;目前版本不支持（v3 支持）live preview，所以采用 &lt;a href=&#34;https://github.com/aidenlx/media-extended/issues/151&#34;&gt;3 分窗口的方法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;针对视频笔记利用 frontmatter cssclass 添加禁止点击链接跳转 &lt;a href=&#34;https://forum.obsidian.md/t/add-setting-to-enable-simple-left-click-link-editing-in-live-preview-mode/33687&#34;&gt;相关 CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;字幕功能有问题，只能把视频与字幕压在一起了&lt;/li&gt;
&lt;li&gt;无法支持本地文件，正好用 http server，避免依赖绝对路径&lt;/li&gt;
&lt;li&gt;影片截图用 snipaste 配合 &lt;a href=&#34;https://github.com/reorx/obsidian-paste-image-rename&#34;&gt;obsidian-paste-image-rename&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/martinniee/Obsidian-fast-image-cleaner&#34;&gt;Obsidian-fast-image-cleaner&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-手机控制-PC&#34;&gt;&lt;a href=&#34;#3-手机控制-PC&#34; class=&#34;headerlink&#34; title=&#34;3 手机控制 PC&#34;&gt;&lt;/a&gt;3 手机控制 PC&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;spacedesk 作为扩展显示器&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;4-PC-控制手机&#34;&gt;&lt;a href=&#34;#4-PC-控制手机&#34; class=&#34;headerlink&#34; title=&#34;4 PC 控制手机&#34;&gt;&lt;/a&gt;4 PC 控制手机&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;用 QtScrcpy 的“熄屏”控制，可以用于 App 开发&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;5-内录声音&#34;&gt;&lt;a href=&#34;#5-内录声音&#34; class=&#34;headerlink&#34; title=&#34;5 内录声音&#34;&gt;&lt;/a&gt;5 内录声音&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;静音内录某个软件的声音&lt;ul&gt;
&lt;li&gt;装虚拟声卡 Virtual Audio Cable(VAC)&lt;/li&gt;
&lt;li&gt;在“音量合成器”中，将要被录音的软件输出给声卡一端&lt;/li&gt;
&lt;li&gt;录音软件录制虚拟声卡的另一端&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;如果不静音，要同时听到声音，在声音 – 录制 – CABLE Output 中勾选侦听此设备，选择播放设备&lt;/li&gt;
&lt;li&gt;“立体声混音”也能做到内录系统声音，但有的系统没有&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;6-音频实时翻译（同传）&#34;&gt;&lt;a href=&#34;#6-音频实时翻译（同传）&#34; class=&#34;headerlink&#34; title=&#34;6 音频实时翻译（同传）&#34;&gt;&lt;/a&gt;6 音频实时翻译（同传）&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;参考，阿虚“无字幕视频实时翻译”&lt;ul&gt;
&lt;li&gt;手机系统自带，小米、华为 AI 字幕。可通过上面的“PC 控制手机”，将同传翻译画面传给 PC&lt;/li&gt;
&lt;li&gt;翻译 App，有道翻译官（唯一支持日语的）、Google 翻译、百度翻译、腾讯翻译官&lt;/li&gt;
&lt;li&gt;飞书，会议功能，字幕和翻译（支持日语）。声音输入可用两种方法&lt;ul&gt;
&lt;li&gt;用蓝牙耳机的麦克风，放在音箱前&lt;/li&gt;
&lt;li&gt;用上面介绍的“内录声音”的方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;也可识别出字幕后，用 OCR 翻译&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;7-转文字&#34;&gt;&lt;a href=&#34;#7-转文字&#34; class=&#34;headerlink&#34; title=&#34;7 转文字&#34;&gt;&lt;/a&gt;7 转文字&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;借助视频软件 剪映 生成字幕后，用 &lt;a href=&#34;https://jy.mzh.ren/&#34;&gt;字幕提取工具&lt;/a&gt;、剪映工具箱&lt;ul&gt;
&lt;li&gt;必剪 也有免费的语言识别，用工具导出&lt;/li&gt;
&lt;li&gt;Pr 有语言识别，但盗版可能无法用&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;借助会议记录软件&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.feishu.cn/product/minutes&#34;&gt;飞书妙记&lt;/a&gt; 免费 100G 容量，不够时可以删掉，导入视频，导出 SRT&lt;/li&gt;
&lt;li&gt;钉钉闪记也类似&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;调云服务 API&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/1c7/Translate-Subtitle-File&#34;&gt;字幕组机翻小助手&lt;/a&gt; 能用的 API 接口多，但免费版有 10h&amp;#x2F;月 额度&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/BingLingGroup/autosub&#34;&gt;autosub&lt;/a&gt; 可用 Google、百度、讯飞&lt;/li&gt;
&lt;li&gt;pyTranscriber，要开全局代理，速度一般，只有 Google&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Youtube 为视频自动生成字幕，先将音频转为视频才能上传&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ffmpeg -f lavfi -i color=c=black:s=1280x720:r=5 -i audio.mp3 -crf 0 -c:a copy -shortest output.mp4&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不支持中文&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其它思路&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://studio.xiaoyuzhoufm.com/&#34;&gt;小宇宙 studio 工具&lt;/a&gt; 只能用在 PC 查看，不是 SRT 字幕&lt;/li&gt;
&lt;li&gt;手机、office、chrome 实时语言识别或录音转文字，然后利用 youtube 自动对齐时间，生成字幕&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用播客，喜马拉雅、微信听书&lt;/li&gt;
&lt;li&gt;总结&lt;ul&gt;
&lt;li&gt;对播客，选支持播客的 app&lt;/li&gt;
&lt;li&gt;对知识学习，严肃类&lt;ul&gt;
&lt;li&gt;对中文，用飞书妙记或免费的剪辑软件&lt;/li&gt;
&lt;li&gt;对英文，传到 youtube 保存，并自动生成字幕，如为了字幕可只传音频&lt;/li&gt;
&lt;li&gt;对小语种、方言，用机翻助手里的免费额度&lt;/li&gt;
&lt;li&gt;步骤，下载、转写文字、划分框架、记录笔记、备份保存&lt;ul&gt;
&lt;li&gt;统一保存为 youtube 私有视频，并在视频描述中附上时间轴章节、笔记&lt;/li&gt;
&lt;li&gt;飞书妙记也可考虑，100G 空间&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;8-听音乐&#34;&gt;&lt;a href=&#34;#8-听音乐&#34; class=&#34;headerlink&#34; title=&#34;8 听音乐&#34;&gt;&lt;/a&gt;8 听音乐&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;指标&lt;/th&gt;
&lt;th&gt;目的&lt;/th&gt;
&lt;th&gt;指标权重&lt;/th&gt;
&lt;th&gt;Youtube&lt;/th&gt;
&lt;th&gt;listen1&lt;/th&gt;
&lt;th&gt;MusicTools&lt;/th&gt;
&lt;th&gt;Spotify&lt;/th&gt;
&lt;th&gt;QQ 音乐&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;歌曲数量&lt;/td&gt;
&lt;td&gt;找旧歌&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音乐推荐&lt;/td&gt;
&lt;td&gt;找新歌&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音质&lt;/td&gt;
&lt;td&gt;体验&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;离线播放&lt;/td&gt;
&lt;td&gt;省流量&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;下载&lt;/td&gt;
&lt;td&gt;备份防删除&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;界面、跨终端同步&lt;/td&gt;
&lt;td&gt;易用&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;优势&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;歌曲全且可自己扩展&lt;/td&gt;
&lt;td&gt;可跨平台听国内的歌&lt;/td&gt;
&lt;td&gt;可下载高品质导入到 Youtube&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;对没有的国内音乐或想收藏的音乐，用 Listen1（跨平台搜索工具） 找到想要的，用 MusicTools（无损下载） 等工具下 320K MP3&amp;#x2F;256K AAC，传到 Google Drive（备份） 和 Youtube Music（方便在线听） 各一份&lt;/li&gt;
&lt;li&gt;国内外平台都存在版权限制导致歌曲不全的问题，次要问题是无法下载收藏某首歌。Youtube 开放的平台配合搜索、下载工具来解决&lt;/li&gt;
&lt;li&gt;Youtube music 歌词插件 &lt;a href=&#34;https://github.com/mantou132/Spotify-Lyrics&#34;&gt;Spotify Lyrics&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>1970-01-01T00:00:00.000Z</updated>
    </entry>
</feed>
