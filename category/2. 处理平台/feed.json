{
    "version": "https://jsonfeed.org/version/1",
    "title": "自强不息 厚德载物 • All posts by \"2. 处理平台\" category",
    "description": "分享各种内容，方便自己与他人查阅，欢迎评论",
    "home_page_url": "https://synrst.de",
    "items": [
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/kindle/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/kindle/",
            "title": "kindle",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-设置\"><a href=\"#1-设置\" class=\"headerlink\" title=\"1 设置\"></a>1 设置</h1><p>字体和词典在 kindle 环境文件夹</p>\n<ul>\n<li>把电子书过滤设置选为“全部内容”，然后把电子书排序设置选为“收藏夹” 。<a href=\"https://bookfere.com/post/140.html\">用收藏夹分类电子书</a></li>\n<li>字体放在 fonts 文件夹，自带英文字体可以用 <code>Baskerville </code>，中文字体思源黑体还好，思源宋体（Source Han Serif）太浅不要用，<a href=\"https://sspai.com/post/38705\">思源宋体，如何评价，以及如何正确使用</a></li>\n<li>词典放在 documents\\dictionaries 文件夹</li>\n<li>一本英汉：与 PC 词典相同的简明英汉（160万），一本英英：Merriam-Webster’s Advanced Learner’s Dictionary，<a href=\"https://blog.ohiyox.in/read/85.html\">选择依据</a>。其它为 kindle 自带，现代英汉、汉英、汉语，Oxford</li>\n<li>kindle 不适合阅读长篇英英解释，如需彻底理解单词，用 kindlemate 导出生词本到欧路词典背，见 词典软件。或者在平板上用 kindle App 同步过来，使用欧路词典</li>\n<li>文章订阅，kindle4rss。发送频率 3 天，否则要经常删除云端文档，不需要同步可以关闭云端存档。不再使用的两个订阅 <a href=\"https://feed43.com/5507628278627385.xml\">田间小站-双语阅读</a>、<a href=\"https://feed43.com/6180220188002736.xml\">经济学人双语版</a></li>\n<li>kindle 正版书也可以切换到其它国家购买，同时可以装 google play 版本和中国版，实现双开。由于 kindle for pc 复制后会插入空格和一行来源，需要编程<a href=\"https://aasukaa.blogspot.com/2016/11/pc-kindle.html\">实现自动去除</a>，对于需要做笔记的书暂不考虑购买正版，且calibre 去 drm 插件对 kfx 格式支持也不够好</li>\n</ul>\n<h1 id=\"2-书籍来源\"><a href=\"#2-书籍来源\" class=\"headerlink\" title=\"2 书籍来源\"></a>2 书籍来源</h1><h1 id=\"3-书籍处理\"><a href=\"#3-书籍处理\" class=\"headerlink\" title=\"3 书籍处理\"></a>3 书籍处理</h1><ul>\n<li>见 <a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/kindle/../../3.%20%E5%A4%84%E7%90%86%E5%B7%A5%E5%85%B7/%E7%94%B5%E5%AD%90%E4%B9%A6%E5%A4%84%E7%90%86/\">电子书处理</a></li>\n</ul>\n<h1 id=\"4-字体处理\"><a href=\"#4-字体处理\" class=\"headerlink\" title=\"4 字体处理\"></a>4 字体处理</h1><p>字体正常是 4 个文件放入 kindle，比如 NotoSans-Bold、NotoSans-BoldItalic、NotoSans-Italic、NotoSans-Regular</p>\n<p>有时缺少斜体 Italic，可用 ttx 工具将想要加入的斜体的 <code>&lt;name&gt;</code> 中 <code>nameID=1</code> 改为与 regular 相同的 FontFamily，可能不止一处</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># ubuntu 下</span></span><br><span class=\"line\"><span class=\"comment\"># 解开 regular 看一下 name 表中的值</span></span><br><span class=\"line\">ttx -o r.ttx Play-Regular.ttf</span><br><span class=\"line\"><span class=\"comment\"># 解开 Italic 将 name 表中的值改为和 regular 中的一样，可能有多个</span></span><br><span class=\"line\">ttx -o i.ttx Play-Italic.ttf</span><br><span class=\"line\"><span class=\"comment\"># 重新打包回 ttf</span></span><br><span class=\"line\">ttx -o i.ttf i.ttx</span><br></pre></td></tr></table></figure>\n\n<p>参见 <a href=\"https://mine260309.me/archives/1148\">Kindle Paperwhite 添加中文字体</a></p>\n<h1 id=\"5-App-端\"><a href=\"#5-App-端\" class=\"headerlink\" title=\"5 App 端\"></a>5 App 端</h1><ul>\n<li>android 可以替换中文字体，相同文件名覆盖即可，路径 <code>内部存储\\Android\\data\\com.amazon.kindlefc\\files\\fonts</code>。但无法替换英文字体，只能 root 后把系统字体换掉 <a href=\"https://lifehacker.com/how-to-change-kindle-app-fonts-on-android-5873409\">How to Change Kindle App Fonts on Android</a></li>\n<li>android 可以替换自带词典，相同文件名覆盖即可，路径 &#96;&#96;内部存储\\Android\\data\\com.amazon.kindlefc\\files\\B007Z8VKSQ\\B007Z8VKSQ_EBOK.prc&#96; ，文件名其实是词典的 ASIN，这本是默认的英汉词典，也可以替换 B00AZOHEGE  现代汉英词典，作为备用词典</li>\n</ul>\n<h1 id=\"6-辅助软件\"><a href=\"#6-辅助软件\" class=\"headerlink\" title=\"6 辅助软件\"></a>6 辅助软件</h1><p>软件在 windows 环境文件夹</p>\n<ul>\n<li>sdr-Cleaner 清理无用sdr</li>\n<li>Kindle Mate 笔记与生词管理</li>\n<li>calibre 电子书管理与格式转换</li>\n</ul>\n<h1 id=\"7-生词本\"><a href=\"#7-生词本\" class=\"headerlink\" title=\"7 生词本\"></a>7 生词本</h1><ul>\n<li><a href=\"https://bookfere.com/post/465.html\">Kindle 阅读器“生词本”功能详细使用说明</a></li>\n<li>配合 kindlemate 背生词 <a href=\"https://zhuanlan.zhihu.com/p/85959508\">欧路词典应用指南</a></li>\n</ul>\n<p><a href=\"https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/2. 处理平台/kindle\"><i class=\"fa-solid fa-download fa-2xl\" style=\"color: gray;\"></i></a></p>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/",
            "title": "linux",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-配置\"><a href=\"#1-配置\" class=\"headerlink\" title=\"1 配置\"></a>1 配置</h1><ul>\n<li>必装 ssh proxychains4 git meld p4merge vim gtags ctags，github 导入公钥</li>\n<li>关闭该死的系统更新，非要更新前一定创建快照</li>\n</ul>\n<h2 id=\"1-1-SSH\"><a href=\"#1-1-SSH\" class=\"headerlink\" title=\"1.1 SSH\"></a>1.1 SSH</h2><p><code>apt-get install openssh-server openssh-client</code></p>\n<ul>\n<li>如配置 VPS 修改 SSH 端口，则要在系统 iptables 和 vps 页面两处同时放行新端口，并用 nc -l 测试没问题后，再重启 sshd 服务。此时先别断开旧连接，防止出现新端口连不上的情况</li>\n</ul>\n<h3 id=\"1-1-1-解决-20-04-broken-package-问题\"><a href=\"#1-1-1-解决-20-04-broken-package-问题\" class=\"headerlink\" title=\"1.1.1 解决 20.04 broken package 问题\"></a>1.1.1 解决 20.04 broken package 问题</h3><p>参考 <a href=\"https://ubuntuforums.org/showthread.php?t=2412211\">Problems with installing of the openssh-server</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 通过 aptitude 尝试解决</span></span><br><span class=\"line\">sudo apt install aptitude</span><br><span class=\"line\">sudo aptitude install PACKAGENAME</span><br></pre></td></tr></table></figure>\n<p>根据  aptitude 安装前的提示，发现是预安装的 openssh-client 版本高，apt purge openssl-client 卸载后安装 openssh-server 没问题。<br>也可以降级已安装的包，<code>sudo apt install &lt;package-name&gt;=&lt;package-version-number&gt;</code></p>\n<h3 id=\"1-1-2-secureCRT-配置问题\"><a href=\"#1-1-2-secureCRT-配置问题\" class=\"headerlink\" title=\"1.1.2 secureCRT 配置问题\"></a>1.1.2 secureCRT 配置问题</h3><ol>\n<li>关闭不用的菜单栏、状态栏等，去掉 use dockable session manager 选项，记住连接管理的快捷键即可</li>\n<li>编码与字体<br> 在Options -&gt; Session Options -&gt; Appearance 选项中将 Character encoding 设成”UTF-8”即可，字体 Consolas-with-Yahei，三号。没办法用没有 CJK 字符的字体</li>\n<li>启用颜色<br> 官方的介绍 <a href=\"https://www.youtube.com/watch?v=SZLbBsp3914\">https://www.youtube.com/watch?v=SZLbBsp3914</a><br> 在 default session 中选 solarized dark，emulation 中启用 xterm-256color<br> 在全局配置中外观 - 高级，选中 solarized dark 新建一个颜色模式<br> 将 normal 和 bold 中前景色调亮，同时下拉列表选择 solarized dark，在 default session 中应用<br> 前景色 RGB 颜色 166,177,179<br> 详细参考视频 <a href=\"http://www.youtube.com/watch?v=SZLbBsp3914\">www.youtube.com/watch?v=SZLbBsp3914</a></li>\n<li>调整系统提示声音，将 默认响声 设置为 windows信息栏.wav</li>\n<li>安装 Xming，对于 ubuntu 的 session 中勾选 X11 forwarding 两个选项，默认配置即可</li>\n<li><ul>\n<li>Options–&gt;Session Options–&gt;Terminal 启用选择发送滚轮事件到远程。取消 Scroll to bottom on output<ul>\n<li>Options–&gt;Session Options–&gt;Terminal–&gt;Emulation–&gt;Mapped Keys，选中 Backspace sends delete<br>  默认会话中终端</li>\n<li>Options–&gt;Session Options–&gt;Terminal–&gt;Emulation–&gt;Mode，取消 Enable keypad mode switching 小键盘映射</li>\n<li>Options–&gt;Session Options–&gt;Terminal–&gt;Emulation–&gt;Advanced，忽略窗口标题更改请求</li>\n<li>Options–&gt;Edit Default Session 设置常用的按键映射，运行脚本 a-r、取消脚本 a-s、清屏 a-l (clear)、滚动到底部 a-b</li>\n<li>（可选）<a href=\"https://forums.vandyke.com/showthread.php?p=42242\">添加键盘映射</a>，HOME&#x2F;END 为 <code>\\033[H</code> 和 <code>\\033[F</code>，原理见下 Terminal input sequences</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"1-1-3-隧道-端口转发\"><a href=\"#1-1-3-隧道-端口转发\" class=\"headerlink\" title=\"1.1.3 隧道/端口转发\"></a>1.1.3 隧道/端口转发</h3><ul>\n<li>代理就是通过隧道帮助用户要访问某个受限资源</li>\n<li>隧道由本地和远端组成，本地作为 SSH 客户端连接远端 SSH 服务器端</li>\n</ul>\n<pre class=\"mermaid\">graph LR\n    subgraph 代理\n    用户 -- 隧道 --> 受限资源\n    end\n    subgraph 隧道\n    L(\"本地 local，客户端\") --> R(\"远端 remote，服务器\")\n    end</pre>\n\n<ul>\n<li>按情况分为用户在隧道的本地和远端两种，常见三种 <a href=\"https://wangdoc.com/ssh/port-forwarding.html\">转发方式</a></li>\n<li>所谓用户就是要连接监听端口的设备<ul>\n<li>所以对用户在本地 local 的，使用 -D 或 -L 打开本地端口，转发给 remote 侧的某资源。如资源为固定的 ip port 用 -L，动态的多个资源用 -D<ul>\n<li>这种场景如科学上网，-D 打开本地的 sock5 监听端口，加密连到 vps，动态访问各个网站</li>\n</ul>\n</li>\n<li>对用户在远端 remote 的，用 -R 打开远端端口。同样可固定可动态，填 ip port 是固定，不填为动态<ul>\n<li>这种场景如内网穿透，内网必须作为客户端主动连公网服务器端<ul>\n<li>为了防止连接中断可 <a href=\"https://cloud.tencent.com/developer/article/1722055\">写个脚本</a></li>\n<li>但在公网服务器开端口暴露内网资源可能不安全（有的内网资源没有密码等），真要这样用还需配置 <code>GatewayPorts yes</code>，否则只会在环回口监听</li>\n<li>所以为了安全，即 1. 要有授权的客户端才能连服务端口 2. 保证用户到服务端口之间数据的安全性（socks 协议不加密）。在先用 -R 开启环回口（动态方式）后，再在用户侧用 -L 练到公网服务器，见 <a href=\"https://o-u-u.com/?p=3234#%E9%93%BE%E5%BC%8F%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91\">链式端口转发</a> (文中为固定转发给 3000 端口，可改为动态)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>图中的 4 个角色（资源、用户、local、remote）可重合，即特殊情况<ul>\n<li>local 和 remote 为同一台设备，如将这台设备用作 socks 代理服务器 <code>ssh -D port localhost</code></li>\n<li>用户与 local &#x2F; remote 为同一设备，资源与 local &#x2F; remote 为同一设备的情况</li>\n</ul>\n</li>\n<li>如要只将 ssh 用作隧道，限制用户登陆，可以 <a href=\"https://unix.stackexchange.com/questions/14312/how-to-restrict-an-ssh-user-to-only-allow-ssh-tunneling\">修改用户的 shell</a></li>\n<li>对 windows 可用配置好连接信息的绿色版 putty 来当作 vpn 客户端的功能</li>\n</ul>\n</li>\n</ul>\n<pre class=\"mermaid\">graph LR\n    subgraph 用户在本地一侧 -L/-D\n    s1(用户) --> s2(local) --> s3(remote) --> s4(受限资源)\n    end\n    subgraph 用户在远端一侧 -R\n    s5(受限资源) --> s6(local) --> s7(remote) --> s8(用户)\n    end\n    subgraph 特殊情况\n    s9(\"local 与 remote 重合，ssh -D port localhost\")\n    s10(\"用户/受限资源 与 local/remote 重合\")\n    end\n    subgraph 内网穿透\n    s11(受限资源) --> s12(local) -- -R动态方式 --> s13(remote) -- -L连接到-R的动态端口 --> s14(用户)\n    end</pre>\n\n<h3 id=\"1-1-4-DNS-介绍\"><a href=\"#1-1-4-DNS-介绍\" class=\"headerlink\" title=\"1.1.4 DNS 介绍\"></a>1.1.4 DNS 介绍</h3><ul>\n<li><a href=\"https://lantian.pub/article/modify-website/selfhost-dns-root-server.lantian/\">DNS 原理和自建 DNS 根服务器</a>、<a href=\"https://juejin.cn/post/6844903497494855687\">另一个参考</a></li>\n</ul>\n<h2 id=\"1-2-系统\"><a href=\"#1-2-系统\" class=\"headerlink\" title=\"1.2 系统\"></a>1.2 系统</h2><ol>\n<li><p>设置 PS1 <code>export PS1=&quot;\\[\\e[35;22m\\][\\! \\A \\w] \\[\\e[0m\\]&quot;</code>，如要改变标题则继续加一句，<code>PS1=&quot;\\[\\e]0;20.04: \\W\\a\\]$PS1&quot;</code> ，把 20.04 改成想要的名字</p>\n</li>\n<li><p>ls 颜色 <a href=\"https://github.com/seebi/dircolors-solarized\">https://github.com/seebi/dircolors-solarized</a><br>  .bashrc 中添加 eval <code>dircolors ~/dircolors-solarized/dircolors.256dark</code></p>\n</li>\n<li><p>给 man 命令启用颜色，~&#x2F;.bashrc 添加如下</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"title\">man</span></span>() &#123;</span><br><span class=\"line\"> <span class=\"built_in\">env</span> \\</span><br><span class=\"line\"> LESS_TERMCAP_mb=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1;31m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_md=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1;31m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_me=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[0m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_se=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[0m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_so=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1;44;33m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_ue=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[0m&quot;</span>) \\</span><br><span class=\"line\"> LESS_TERMCAP_us=$(<span class=\"built_in\">printf</span> <span class=\"string\">&quot;\\e[1;32m&quot;</span>) \\</span><br><span class=\"line\"> man <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>修改时区</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">unlink</span> /etc/localtime</span><br><span class=\"line\">sudo <span class=\"built_in\">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h3 id=\"1-2-1-Kali\"><a href=\"#1-2-1-Kali\" class=\"headerlink\" title=\"1.2.1 Kali\"></a>1.2.1 Kali</h3><ul>\n<li><a href=\"https://www.youtube.com/watch?v=a6z-ixNAo-s\">How to move taskbar from top to bottom in kali linux</a>  Settings Editor -&gt; xfce4-panel -&gt; panels&#x2F;panel-1&#x2F;position 的 6 改成 4，下面的 size 可扩大，以让图标更大</li>\n</ul>\n<h2 id=\"1-3-网络\"><a href=\"#1-3-网络\" class=\"headerlink\" title=\"1.3 网络\"></a>1.3 网络</h2><p>思路是用无线网卡使 PC、虚拟机、无线路由器处于同一网络中，可以上网。用有线网卡使 PC、虚拟机、开发板处于另一网络中。</p>\n<p>要点，配置网关的网卡将作为上网网卡，旧网卡（无线网卡）用来上网，所以只有旧网卡有网关</p>\n<p><a href=\"https://linuxize.com/post/how-to-configure-static-ip-address-on-ubuntu-18-04/\">18.04_20.04 用 netplan</a>，配置文件示例见 asset，命令 <code>sudo netplan --debug apply</code></p>\n<p>interfaces 和 NetworkManger 即配置文件与图形界面两种方法不能同时使用，对于 <code>/etc/network/interfaces</code> 配置文件如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet static</span><br><span class=\"line\">address 192.168.2.36</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\">gateway 192.168.2.1</span><br><span class=\"line\"></span><br><span class=\"line\">auto eth1</span><br><span class=\"line\">iface eth1 inet static</span><br><span class=\"line\">address 192.168.1.36</span><br><span class=\"line\">netmask 255.255.255.0</span><br><span class=\"line\"></span><br><span class=\"line\"># dhcp方式</span><br><span class=\"line\"># auto eth0  </span><br><span class=\"line\"># iface eth0 inet dhcp</span><br></pre></td></tr></table></figure>\n\n<p><code>/etc/resolvconf/resolv.conf.d/base</code> 配置 dns，没有则新建。<code>sudo resolvconf -u 立即生效</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nameserver 114.114.114.114</span><br><span class=\"line\">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-4-内部局域网\"><a href=\"#1-4-内部局域网\" class=\"headerlink\" title=\"1.4 内部局域网\"></a>1.4 内部局域网</h2><p>为了搭建封闭的局域网，可以在 windows 中 <a href=\"https://blog.csdn.net/EDDJH_31/article/details/82694205\">添加 KM-TEST 虚拟网卡</a>，所有虚拟机桥接到该网卡，实现虚拟机间和主机与虚拟机的通信</p>\n<h3 id=\"1-4-1-代理\"><a href=\"#1-4-1-代理\" class=\"headerlink\" title=\"1.4.1 代理\"></a>1.4.1 代理</h3><p> proxychains4，适用于所有包管理系统和 git</p>\n<ol>\n<li>SSR 选择允许局域网</li>\n<li>apt 安装 proxychains4</li>\n<li>配置<ul>\n<li>配置文件在 <code>/etc/proxychains.conf</code> 或 <code>proxychains4.conf</code>，改成 <code>socks5  192.168.7.36 17890</code></li>\n<li>设置 DNS 文件在 <code>/usr/lib/proxychains3/proxyresolv</code>，修改 <code>DNS_SERVER=8.8.8.8</code></li>\n</ul>\n</li>\n<li>注意配置文件代理地址设置成 host 的 IP 192.168.2.29，不是 127.0.0.1</li>\n<li>tsocks 不那么好用，先不考虑</li>\n</ol>\n<h3 id=\"1-4-2-软件源\"><a href=\"#1-4-2-软件源\" class=\"headerlink\" title=\"1.4.2 软件源\"></a>1.4.2 软件源</h3><p><a href=\"https://blog.csdn.net/xiangxianghehe/article/details/80112149\">中科大</a></p>\n<h2 id=\"1-5-sshfs-win\"><a href=\"#1-5-sshfs-win\" class=\"headerlink\" title=\"1.5 sshfs-win\"></a>1.5 sshfs-win</h2><ul>\n<li>先装 winfsp (Cryptomator 也装了 winfsp)，然后装 <a href=\"https://github.com/billziss-gh/sshfs-win\">sshfs</a> 64位</li>\n<li>计算机上右键 <code>映射网络驱动器</code>，不要选 <code>添加网络位置</code>，勾选 <code>登陆重连</code></li>\n<li>mount home 的情况，<code>\\\\sshfs\\compilers@192.168.36.3</code></li>\n<li>mount 其它目录的情况，<code>\\\\sshfs.r\\compilers@192.168.36.3\\usr\\class\\cs143\\cool</code></li>\n<li>使用 key 和代理的情况<ul>\n<li>配置文件 C:\\Users\\用户.ssh\\config</li>\n<li>IdentityFile 指定私钥路径</li>\n<li>ProxyCommand 指定代理，这里用 <a href=\"https://nmap.org/download.html\">nmap 附带的 ncat</a><ul>\n<li><code>ProxyCommand D:/soft/Nmap/ncat.exe --proxy 127.0.0.1:17890 --proxy-type socks5 %h %p</code></li>\n<li><a href=\"https://superuser.com/questions/714845/tunneling-ssh-via-a-socks5-proxy-on-windows\">参考</a></li>\n</ul>\n</li>\n<li>打开 cmd （非管理员权限），<code>sshfs-win.exe svc \\sshfs.k\\ubuntu@主机!端口 v: -d -o LogLevel=DEBUG3</code><ul>\n<li>映射为 v:</li>\n<li>调试信息 -d -o LogLevel&#x3D;DEBUG3</li>\n</ul>\n</li>\n<li>但因为 ProxyCommand 依赖 sh，参考 <a href=\"https://github.com/winfsp/sshfs-win/issues/152\">这里</a> 的方法，下载 busybox 并改名为 sh.exe，可避免装 Cygwin。同时 ProxyCommand 也要改成能识别的斜杠 &#x2F;</li>\n<li>如直接映射驱动器 \\sshfs.k\\ubuntu@IP!端口（而非 sshfs-win.exe 命令），则不会使用 config 文件，此时 key 只能放在 C:\\Users\\用户.ssh 下</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-6-samba、tftp、nfs\"><a href=\"#1-6-samba、tftp、nfs\" class=\"headerlink\" title=\"1.6 samba、tftp、nfs\"></a>1.6 samba、tftp、nfs</h2><ul>\n<li>linux samba 3.6.0 开始支持 SMB2，之前的版本需要在 Windows 控制面板启用 SMB1.0 客户端，用命令 <code>sudo smbstatus</code> 查看软件和协议版本<ul>\n<li>即可以在控制面板启用，也可以 powershell 管理员运行 <code>Enable-WindowsOptionalFeature -Online -FeatureName &quot;SMB1Protocol-Client&quot;</code></li>\n<li>samba 可能不稳定，重启 Windows 后会无法连接。要重新敲上面的 enable 命令后再重启宿主机和虚拟机才能连上，可把上面命令保存成脚本并 <a href=\"https://superuser.com/questions/108207/how-to-run-a-powershell-script-as-administrator\">管理员运行</a>方便后续使用</li>\n<li>对于 virtualbox 虚拟机导出给 vmvare 使用时，遇到 virtualbox 服务找不到无法启动图形界面时，进命令行卸载 virtualbox 服务，<code>cd /etc/init.d</code> 、<code>sudo ./vboxadd cleanup</code>、<code>sudo ./vboxadd-x11 cleanup</code></li>\n<li>samba 不稳定也可考虑用 ssh 映射替代，见 [sshfs-win](## 1.5 sshfs-win)<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\"><span class=\"comment\"># 20.04 同样出现 broken package 问题，先卸载高版本的依赖 sudo apt purge libwbclient0 samba-libs，再安装</span></span><br><span class=\"line\">apt-get install samba samba-common</span><br><span class=\"line\"><span class=\"comment\"># 备份配置文件</span></span><br><span class=\"line\"><span class=\"built_in\">cp</span> /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br><span class=\"line\"><span class=\"comment\"># 修改smb.conf。添加一个共享定义，share 表示windows连接到的文件夹名为 \\\\ip\\share</span></span><br><span class=\"line\"><span class=\"comment\"># create mask = 0644 避免添加执行权限</span></span><br><span class=\"line\">[share]</span><br><span class=\"line\">\t\tcomment = samba home share</span><br><span class=\"line\">\t\tpath = /home/zack</span><br><span class=\"line\">\t\tbrowseable = <span class=\"built_in\">yes</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">read</span> only = no</span><br><span class=\"line\">\t\tcreate mask = 0644</span><br><span class=\"line\">\t\tdirectory mask = 0777</span><br><span class=\"line\"><span class=\"comment\"># 添加用户</span></span><br><span class=\"line\">sudo smbpasswd -a zack</span><br><span class=\"line\"><span class=\"comment\"># 重启服务</span></span><br><span class=\"line\">sudo service smbd restart</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#安装</span></span><br><span class=\"line\">apt-get install tftp-hpa tftpd-hpa xinetd</span><br><span class=\"line\"><span class=\"comment\">#设置目录</span></span><br><span class=\"line\">vi /etc/default/tftpd-hpa</span><br><span class=\"line\"><span class=\"comment\">#启动服务</span></span><br><span class=\"line\">service tftpd-hpa restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#测试</span></span><br><span class=\"line\">tftp 127.0.0.1</span><br><span class=\"line\">tftp&gt; get hello</span><br><span class=\"line\">tftp&gt; quit</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查nfs服务是否安装。没有则 sudo apt-get install nfs-kernel-server</span></span><br><span class=\"line\">service nfs-kernel-server</span><br><span class=\"line\">tar xvf  rootfs.tar.xz </span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> 777 rootfs\t  </span><br><span class=\"line\"><span class=\"comment\"># 重启nfs服务(使得前面修改生效)</span></span><br><span class=\"line\">sudo /etc/init.d/nfs-kernel-server restart</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 测试nfs服务是否安装成功</span></span><br><span class=\"line\">sudo mount -t nfs localhost:/nfs/rootfs/  /mnt/</span><br><span class=\"line\"><span class=\"comment\"># 如果其中的内容和/nfs/rootfs中一致。 表示有挂载成功</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> /mnt/</span><br><span class=\"line\">sudo umount /mnt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-7-ftp\"><a href=\"#1-7-ftp\" class=\"headerlink\" title=\"1.7 ftp\"></a>1.7 ftp</h2><p>更多安全相关的配置见 <a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-vsftpd-for-a-user-s-directory-on-ubuntu-16-04\">vsftp 配置</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">cp</span> /etc/vsftpd.conf /etc/vsftpd.conf.orig</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Allow anonymous FTP? (Disabled by default).</span></span><br><span class=\"line\">anonymous_enable=NO</span><br><span class=\"line\"><span class=\"comment\"># Uncomment this to allow local users to log in.</span></span><br><span class=\"line\">local_enable=YES</span><br><span class=\"line\"><span class=\"comment\"># 可上传</span></span><br><span class=\"line\">write_enable=YES</span><br><span class=\"line\"><span class=\"comment\"># 用户列表</span></span><br><span class=\"line\">userlist_enable=YES</span><br><span class=\"line\">userlist_file=/etc/vsftpd.userlist</span><br><span class=\"line\">userlist_deny=NO</span><br><span class=\"line\"><span class=\"comment\"># 在这里添加可登录的用户，系统的用户名和密码</span></span><br><span class=\"line\">/etc/vsftpd.userlist</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-8-编译工具\"><a href=\"#1-8-编译工具\" class=\"headerlink\" title=\"1.8 编译工具\"></a>1.8 编译工具</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 20.04 同样有 broken package 问题，要降级安装 libc</span></span><br><span class=\"line\">sudo apt install build-essential python3</span><br><span class=\"line\"><span class=\"comment\"># 安装最新 cmake，参考 https://askubuntu.com/questions/355565/how-do-i-install-the-latest-version-of-cmake-from-the-command-line</span></span><br><span class=\"line\">wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2&gt;/dev/null | gpg --dearmor - | sudo <span class=\"built_in\">tee</span> /etc/apt/trusted.gpg.d/kitware.gpg &gt;/dev/null</span><br><span class=\"line\">sudo apt-add-repository <span class=\"string\">&#x27;deb https://apt.kitware.com/ubuntu/ focal main&#x27;</span>  </span><br><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install cmake</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-9-chrome\"><a href=\"#1-9-chrome\" class=\"headerlink\" title=\"1.9 chrome\"></a>1.9 chrome</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 装 chrome</span></span><br><span class=\"line\">https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm</span><br><span class=\"line\">yum localinstall google-chrome-stable_current_x86_64.rpm</span><br><span class=\"line\"><span class=\"comment\"># chromedriver，下载 linux64 版本</span></span><br><span class=\"line\">https://chromedriver.chromium.org/downloadsba</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"1-10-vps\"><a href=\"#1-10-vps\" class=\"headerlink\" title=\"1.10 vps\"></a>1.10 vps</h2><ul>\n<li><p>改端口号</p>\n<ul>\n<li>sudo passwd 设置密码，为了以后 VNC 抢救时可以登陆设备</li>\n<li>备份防火墙 <code>sudo iptables-save &gt;fire.backup</code></li>\n<li>添加 ssh 端口号，<code>iptables -I INPUT 1 -p tcp --dport xxxx -j ACCEPT</code></li>\n<li>nc 测试新端口能被连接</li>\n<li>修改 <code>sudo vi /etc/ssh/sshd_config</code> 的 Port</li>\n<li><code>sudo systemctl restart sshd</code>，先不关闭旧连接，测试新端口是否生效</li>\n</ul>\n</li>\n<li><p>改防火墙</p>\n<ul>\n<li>事先备份  <code>sudo iptables-save &gt;fire.backup</code></li>\n<li>删除无用项，或还原改后配置 <code>sudo iptables-restore fire.now</code></li>\n<li>永久保存，避免重启后失效，<code>sudo netfilter-persistent save</code></li>\n<li>重启测试 <code>sudo reboot</code></li>\n</ul>\n</li>\n<li><p>修改 PS1 和时区</p>\n</li>\n<li><p>备份还原</p>\n<ul>\n<li>对 X86，可创建 5 个备份，需要还原时，先删机，等完全终止后，利用之前的引导卷新建机器</li>\n<li>对 ARM，因通常很难创建，使用 dd 备份还原<ol>\n<li>停止实例，分离引导卷</li>\n<li>附加到另一实例的块存储卷，并用命令（iSCSI 命令和信息）连接</li>\n<li>sudo fdisk -l 查看为 &#x2F;sdb 硬盘，备份或还原<ul>\n<li>备份 <code>sudo nohup bash -c &quot;dd if=/dev/sdb conv=sync,noerror bs=64M status=progress | gzip -c &gt;backup.gz&quot; &amp;</code></li>\n<li>还原 <code>sudo nohup bash -c &quot;gunzip -c backup.gz | dd of=/dev/sdb bs=64M status=progress&quot; &amp;</code></li>\n<li>查看进度 <code>sudo tail -f nohup.out</code>，ubuntu 20.04 原始备份时间 35min 大小 650M，还原时间相同，dd 的 bs 越大越好</li>\n</ul>\n</li>\n<li>附加引导卷，启动实例</li>\n<li>用命令（iSCSI 命令和信息）断开连接，并分离</li>\n</ol>\n</li>\n</ul>\n</li>\n<li><p>为优化资源占用，多使用 <a href=\"https://www.howtogeek.com/668986/how-to-use-the-linux-top-command-and-understand-its-output/\">top 命令</a></p>\n</li>\n<li><p><a href=\"https://apttutorials.com/how-to-fix-snapd-process-consuming-lot-of-data-and-cpu/\">卸载 snap</a>，防止 CPU 占用高，<code>sudo systemctl stop snapd</code>,  <code>sudo apt purge snapd</code></p>\n</li>\n<li><p>关闭甲骨文日志 <code>systemctl stop unified-monitoring-agent</code>，<code>systemctl disable unified-monitoring-agent</code></p>\n</li>\n<li><p><a href=\"https://www.zhouchunyu.com/400.html\">甲骨文开启 IPv6</a></p>\n</li>\n<li><p>关闭 fwupd <code>sudo systemctl stop fwupd</code>， <code>sudo systemctl disable fwupd</code></p>\n</li>\n<li><p><a href=\"https://askubuntu.com/questions/1233025/how-to-remove-gnome-shell-from-ubuntu-20-04-lts-to-install-other-desktop-environ\">卸载 gnome</a>，然后重启</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt purge adwaita-icon-theme gedit-common gir1.2-gdm-1.0 \\</span><br><span class=\"line\">gir1.2-gnomebluetooth-1.0 gir1.2-gnomedesktop-3.0 gir1.2-goa-1.0 \\</span><br><span class=\"line\">gnome-accessibility-themes gnome-bluetooth gnome-calculator gnome-calendar \\</span><br><span class=\"line\">gnome-characters gnome-control-center gnome-control-center-data \\</span><br><span class=\"line\">gnome-control-center-faces gnome-desktop3-data \\</span><br><span class=\"line\">gnome-font-viewer \\</span><br><span class=\"line\">gnome-initial-setup gnome-keyring gnome-keyring-pkcs11 gnome-logs \\</span><br><span class=\"line\">gnome-mahjongg gnome-menus gnome-mines gnome-online-accounts \\</span><br><span class=\"line\">gnome-power-manager gnome-screenshot gnome-session-bin gnome-session-canberra \\</span><br><span class=\"line\">gnome-session-common gnome-settings-daemon gnome-settings-daemon-common \\</span><br><span class=\"line\">gnome-shell gnome-shell-common gnome-shell-extension-appindicator \\</span><br><span class=\"line\">gnome-shell-extension-desktop-icons gnome-shell-extension-ubuntu-dock \\</span><br><span class=\"line\">gnome-startup-applications gnome-sudoku gnome-system-monitor gnome-terminal \\</span><br><span class=\"line\">gnome-terminal-data gnome-themes-extra gnome-themes-extra-data gnome-todo \\</span><br><span class=\"line\">gnome-todo-common gnome-user-docs gnome-user-docs-ru gnome-video-effects \\</span><br><span class=\"line\">language-pack-gnome-en language-pack-gnome-en-base language-pack-gnome-ru \\</span><br><span class=\"line\">language-pack-gnome-ru-base language-selector-gnome libgail18 libgail18 \\</span><br><span class=\"line\">libgail-common libgail-common libgnome-autoar-0-0 libgnome-bluetooth13 \\</span><br><span class=\"line\">libgnome-desktop-3-19 libgnome-games-support-1-3 libgnome-games-support-common \\</span><br><span class=\"line\">libgnomekbd8 libgnomekbd-common libgnome-menu-3-0 libgnome-todo libgoa-1.0-0b \\</span><br><span class=\"line\">libgoa-1.0-common libpam-gnome-keyring libsoup-gnome2.4-1 libsoup-gnome2.4-1 \\</span><br><span class=\"line\">nautilus-extension-gnome-terminal pinentry-gnome3 yaru-theme-gnome-shell</span><br><span class=\"line\">sudo apt purge gnome-getting-started-docs gnome-getting-started-docs-ru</span><br></pre></td></tr></table></figure></li>\n<li><p>acme.sh 申请证书</p>\n<ul>\n<li>Google domain，<a href=\"https://www.reddit.com/r/sysadmin/comments/13dibxb/googleissued_https_certificates_with_acme_dns_api/\">参考</a><ul>\n<li>Google Ca<ul>\n<li><code>acme.sh --set-default-ca --server google</code></li>\n<li>页面获得 eab-kid eab-hmac-key</li>\n<li><code>acme.sh --register-account</code></li>\n</ul>\n</li>\n<li>letsencrypt CA，<code>acme.sh --set-default-ca --server letsencrypt</code></li>\n<li>页面获得 API-Token，export GOOGLEDOMAINS_ACCESS_TOKEN&#x3D;”获得的 token”</li>\n<li><code>acme.sh --issue --dns dns_googledomains -d synrst.de -d *.synrst.de -k ec-384</code></li>\n<li>安装 <code>acme.sh --install-cert -d synrst.de -d *.synrst.de --ecc --key-file /etc/XXX/server.key --fullchain-file /etc/XXX/server.crt --reloadcmd &quot;systemctl force-reload nginx&quot;</code></li>\n</ul>\n</li>\n<li>其它命令，<a href=\"https://github.com/acmesh-official/acme.sh\">官方文档</a><ul>\n<li>删除证书 <code>acme.sh --remove -d synrst.de -d *.synrst.de</code>，之后按提示删除文件夹（正常还应该 revoke）</li>\n<li>强制 renew <code>acme.sh --renew -d synrst.de -d *.synrst.de --force --ecc</code></li>\n<li>查看证书 <code>openssl x509 -text -noout -in xxx.cer</code></li>\n<li>查看 <code>acme.sh --list</code>，<code>crontab -l</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>科学上网加速</p>\n<ul>\n<li>BBR Plus 加速，<a href=\"https://www.youtube.com/watch?v=90xDssO7qIE\">区别对比</a></li>\n<li>CDN 加速<ul>\n<li>v2ray 域名 -&gt; cdn -&gt; vps ip<ul>\n<li>在域名上配置<ul>\n<li>NS 接入：nameserver 配置成 cloudfare</li>\n<li>CNAME&#x2F;IP 接入：v2ray 域名 -&gt; cdn ip&#x2F;域名，域名则添加 CNAME，IP 则添加 A 记录。这是为了配合 DNSPod 不同城市线路用不同的 CDN IP，<a href=\"https://www.moeelf.com/archives/10.html\">例子</a>，感觉是给机场接入用的，个人 NS 接入即可，<a href=\"https://www.youtube.com/watch?v=80rBGZWYlxw\">例子</a></li>\n</ul>\n</li>\n<li>在 CDN 配置 ：v2ray 域名 -&gt; vps ip（回源地址）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-11-screen\"><a href=\"#1-11-screen\" class=\"headerlink\" title=\"1.11 screen\"></a>1.11 screen</h2><p><a id=\"xa7o\"></a></p>\n<ul>\n<li>.screenrc 文件，参考 <a href=\"https://linuxize.com/post/how-to-use-linux-screen/\">How To Use Linux Screen</a> 和 <a href=\"https://www.gnu.org/software/screen/manual/screen.html\">Screen User’s Manual</a>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">startup_message off</span><br><span class=\"line\"></span><br><span class=\"line\"># Disable visual bell</span><br><span class=\"line\"># vbell off</span><br><span class=\"line\"></span><br><span class=\"line\"># Set scrollback buffer to 10000</span><br><span class=\"line\">defscrollback 10000</span><br><span class=\"line\"></span><br><span class=\"line\"># https://superuser.com/questions/506080/screen-divider-border-width-and-color</span><br><span class=\"line\">caption string &quot;%&#123;= dd&#125; &quot;</span><br><span class=\"line\">rendition so &quot;=&quot;</span><br><span class=\"line\"># https://stackoverflow.com/questions/359109/using-the-scrollwheel-in-gnu-screen</span><br><span class=\"line\">termcapinfo xterm* ti@:te@</span><br><span class=\"line\"></span><br><span class=\"line\"># 内存部分参考 https://stackoverflow.com/questions/18439129/system-loads-in-gnu-screens-hardstatus-line</span><br><span class=\"line\">hardstatus alwayslastline</span><br><span class=\"line\"># backtick 1 1 1 /bin/bash -c &#x27;free | grep Mem | awk &#x27;\\&#x27;&#x27;&#123;printf(&quot;%.1f%%&quot;, $3/$2 * 100.0)&#125;&#x27;\\&#x27;&#x27; &#x27;</span><br><span class=\"line\">backtick 1 1 1 /bin/bash -c &#x27;free | grep Mem | awk &#x27;\\&#x27;&#x27;&#123;printf(&quot;%.1f%%&quot;, 100 - $7/$2 * 100.0)&#125;&#x27;\\&#x27;&#x27; &#x27;</span><br><span class=\"line\">hardstatus string &quot;%&#123;= KG&#125; %-Lw%&#123;= bW&#125;%n%f %t%&#123;-&#125;%+Lw %=%&#123;= Kg&#125;| %c %&#123;-&#125;%l %1`&quot;</span><br><span class=\"line\"># 给 Windows terminal 用的浅色主题 AtomOneLight https://windowsterminalthemes.dev/</span><br><span class=\"line\"># hardstatus string &quot;%&#123;= wG&#125; %-Lw%&#123;= bW&#125;%n%f %t%&#123;-&#125;%+Lw %=%&#123;= wg&#125;| %c %&#123;-&#125;%l %1`&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># focus ctrl+a tab，other ctrl+a ctrl+a</span><br><span class=\"line\"># 推荐在左侧标签按键，这样右侧标签分到屏幕右侧，按键焦点留在左侧</span><br><span class=\"line\">bind v eval &quot;split -v&quot; focus other focus</span><br><span class=\"line\"># 这个配置焦点在右侧</span><br><span class=\"line\"># bind v eval &quot;split -v&quot; focus other</span><br><span class=\"line\"></span><br><span class=\"line\">bind x remove</span><br></pre></td></tr></table></figure></li>\n<li>screen 状态栏显示正在执行的命令或当前路径，<a href=\"https://unix.stackexchange.com/questions/28430/screen-status-bar-to-display-current-directory-for-zsh-bash-shell\">参考</a><ul>\n<li>bash<ul>\n<li>.screenrc 文件  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># shelltitle | 前面的 ] 表示提示符结尾</span><br><span class=\"line\">shelltitle &#x27;]|bash&#x27;</span><br></pre></td></tr></table></figure></li>\n<li>.bashrc 文件  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> [[ <span class=\"variable\">$TERM</span> == screen* ]]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\tPROMPT_COMMAND=<span class=\"string\">&#x27;echo -ne &quot;\\033k\\033\\0134\\033k[`basename $&#123;PWD&#125;`]\\033\\0134&quot;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li>zsh，<a href=\"https://unix.stackexchange.com/questions/28430/screen-status-bar-to-display-current-directory-for-zsh-bash-shell\">参考1</a>、<a href=\"https://stackoverflow.com/questions/45288905/zsh-mystery-variable-expansion\">参考2</a>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setopt extendedglob</span><br><span class=\"line\">if [[ $TERM == screen* ]]; then</span><br><span class=\"line\">\tprecmd () &#123;</span><br><span class=\"line\">\t        local dir=$(print -Pn &quot;%c&quot;)</span><br><span class=\"line\">\t        print -Pn &quot;\\ek$dir\\e\\\\&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tpreexec () &#123;</span><br><span class=\"line\">\t        local dir=$(print -Pn &quot;%c&quot;)</span><br><span class=\"line\">\t        # 截短是为了留空间显示 CMD</span><br><span class=\"line\">\t        dir=$dir[1,6]</span><br><span class=\"line\">\t        local CMD=$&#123;1[(wr)^(sudo|*=*|-*)]&#125;</span><br><span class=\"line\">\t        print -Pn &quot;\\ek$dir] $&#123;CMD&#125;\\e\\\\&quot;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">fi</span><br></pre></td></tr></table></figure>\n<ul>\n<li>相关手册<ul>\n<li><a href=\"https://zsh.sourceforge.io/Doc/Release/Prompt-Expansion.html#Prompt-Expansion\">%c</a></li>\n<li><a href=\"https://zsh.sourceforge.io/Doc/Release/Expansion.html#Filename-Generation\"> ^(<em>&#x3D;</em>|sudo|-*)</a></li>\n<li><a href=\"https://zsh.sourceforge.io/Doc/Release/Parameters.html\">[wr] 的含义 Subscript Flags</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>常用按键&#x2F;命令</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>常用按键&#x2F;命令</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>screen</td>\n<td>创建<br />启动后 SecureCRT 要调整一下窗口</td>\n</tr>\n<tr>\n<td>screen -ls</td>\n<td>查看</td>\n</tr>\n<tr>\n<td>ctrl + a d</td>\n<td>detach</td>\n</tr>\n<tr>\n<td>screen -x</td>\n<td>Attach to a session which is already attached<br />与 -r 相比推荐这种，可加到 .bashrc 实现登录就在 screen 中</td>\n</tr>\n<tr>\n<td>screen -r</td>\n<td>attach</td>\n</tr>\n<tr>\n<td>ctrl + a c</td>\n<td>create 窗口</td>\n</tr>\n<tr>\n<td>ctrl + a k</td>\n<td>kill 窗口</td>\n</tr>\n<tr>\n<td>ctrl + a 数字</td>\n<td>切换到该窗口</td>\n</tr>\n<tr>\n<td>ctrl + a ctrl + a</td>\n<td>切换到刚刚的窗口</td>\n</tr>\n<tr>\n<td>ctrl + a p&#x2F;n</td>\n<td>切换到前一个、后一个窗口</td>\n</tr>\n<tr>\n<td>ctrl + a :number 数字</td>\n<td><a href=\"https://serverfault.com/questions/244294/how-to-re-order-windows-change-the-scroll-shortcut-and-modify-the-status-bar-c\">重命名窗口</a>以调整窗口在下方的显示顺序</td>\n</tr>\n<tr>\n<td>上面的自定义按键</td>\n<td></td>\n</tr>\n<tr>\n<td>ctrl + a v</td>\n<td>分 region</td>\n</tr>\n<tr>\n<td>ctrl + a x</td>\n<td>关 region</td>\n</tr>\n<tr>\n<td>ctrl + a tab</td>\n<td>切 region</td>\n</tr>\n</tbody></table>\n<h1 id=\"2-使用\"><a href=\"#2-使用\" class=\"headerlink\" title=\"2 使用\"></a>2 使用</h1><p>软件问题见 <a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/../linux%E8%BD%AF%E4%BB%B6%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E8%BF%90%E8%A1%8C/\">linux软件编译、安装、运行</a></p>\n<h2 id=\"2-1-基础\"><a href=\"#2-1-基础\" class=\"headerlink\" title=\"2.1 基础\"></a>2.1 基础</h2><ul>\n<li><a href=\"https://linuxtools-rst.readthedocs.io/zh_CN/latest/\">Linux工具快速教程</a></li>\n</ul>\n<h3 id=\"2-1-1-修改-linux-用户名\"><a href=\"#2-1-1-修改-linux-用户名\" class=\"headerlink\" title=\"2.1.1 修改 linux 用户名\"></a>2.1.1 修改 linux 用户名</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 退出所有登录（包括 SSH）</span></span><br><span class=\"line\"><span class=\"comment\"># Ctrl+Alt+F2 以 root 登录</span></span><br><span class=\"line\"><span class=\"comment\"># 修改用户名</span></span><br><span class=\"line\">usermod -c “Full name real” -l new_name old_name</span><br><span class=\"line\"><span class=\"comment\"># 修改 home</span></span><br><span class=\"line\">usermod -d /home/newHomeDir -m newUsername</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-2-bash\"><a href=\"#2-1-2-bash\" class=\"headerlink\" title=\"2.1.2 bash\"></a>2.1.2 bash</h3><ul>\n<li><p><a href=\"https://skorks.com/2009/09/bash-shortcuts-for-maximum-productivity/\">快捷键</a></p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Ctrl + r – search the history backwards</span><br><span class=\"line\">Ctrl + g – escape from history searching mode</span><br><span class=\"line\">CTRL + A = the beginning of the line</span><br><span class=\"line\">CTRL + E = the end of the line</span><br><span class=\"line\">ALT  + B = move backward one word </span><br><span class=\"line\">ALT  + F = move forward one word</span><br><span class=\"line\">/* 所有的 ALT 可换成 ESC */</span><br><span class=\"line\">Ctrl + U = Delete left of the cursor</span><br><span class=\"line\">Ctrl + K = Delete right of the cursor</span><br><span class=\"line\">Ctrl + W = Delete word on the left</span><br><span class=\"line\">ALT  + D = Delete word on the right</span><br><span class=\"line\">Ctrl + Y = Paste</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><a href=\"https://en.wikipedia.org/wiki/ANSI_escape_code\">Terminal input sequences</a></p>\n</li>\n</ul>\n<h3 id=\"2-1-3-zsh\"><a href=\"#2-1-3-zsh\" class=\"headerlink\" title=\"2.1.3 zsh\"></a>2.1.3 zsh</h3><ul>\n<li>粘贴 kali .zshrc</li>\n<li>命令提示 <code>sudo apt install zsh-autosuggestions</code></li>\n<li>参考配置 <a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/#xa7o\">screen</a></li>\n</ul>\n<h3 id=\"2-1-4-脚本\"><a href=\"#2-1-4-脚本\" class=\"headerlink\" title=\"2.1.4 脚本\"></a>2.1.4 脚本</h3><ul>\n<li>shell 脚本调试<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-------- bash ---------</span><br><span class=\"line\"><span class=\"built_in\">export</span> SHELLOPTS</span><br><span class=\"line\"><span class=\"comment\"># 还可配合 FUNCNAME 实现调用栈打印</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS4=<span class=\"string\">&#x27;[$&#123;BASH_SOURCE[0]&#125;-$LINENO] &#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 可考虑去掉 eu</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -eux</span><br><span class=\"line\"><span class=\"comment\"># 确认</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> -o</span><br><span class=\"line\"><span class=\"comment\"># 还原</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> +eux</span><br><span class=\"line\"></span><br><span class=\"line\">-------- zsh ---------</span><br><span class=\"line\"><span class=\"comment\"># https://stackoverflow.com/questions/56137084/zsh-inherit-xtrace-option</span></span><br><span class=\"line\"><span class=\"comment\"># 利用 $ZDOTDIR/.zshenv</span></span><br><span class=\"line\"><span class=\"comment\"># https://stackoverflow.com/questions/9901210/bash-source0-equivalent-in-zsh</span></span><br><span class=\"line\"></span><br><span class=\"line\">-- 注意：下面的所有方法在应对 <span class=\"built_in\">source</span>（即 .） 引入脚本时，不会更新文件名，此时从感兴趣的位置向上找到最近 <span class=\"built_in\">source</span> 的几个脚本，一般就是那里 --</span><br><span class=\"line\"><span class=\"comment\"># 定义 MyShellOpts 开启调试，可考虑去掉 eu</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> MyShellOpts=-eux</span><br><span class=\"line\">-------- ash ---------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/bin/busybox sh</span></span><br><span class=\"line\"><span class=\"comment\"># 这个脚本保存为 sh 替换 /bin/sh</span></span><br><span class=\"line\"><span class=\"comment\"># 替换方法，确保 /bin/sh 为指向 /bin/dash 的软链接</span></span><br><span class=\"line\"><span class=\"comment\"># sudo chmod --reference=/bin/sh sh</span></span><br><span class=\"line\"><span class=\"comment\"># sudo chown --reference=/bin/sh sh</span></span><br><span class=\"line\"><span class=\"comment\"># sudo cp --remove-destination sh /bin/sh</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS4=<span class=\"string\">&#x27;[$0-$LINENO] &#x27;</span></span><br><span class=\"line\">/bin/busybox sh <span class=\"variable\">$MyShellOpts</span> <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">-------- dash或其它类似 shell ---------</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#!/bin/dash</span></span><br><span class=\"line\"><span class=\"comment\"># 与上面一样，这个脚本保存为 sh 替换 /bin/sh</span></span><br><span class=\"line\"><span class=\"comment\"># $LINENO 存在也可加到 PS4 里，不存在则参考 Workaround for shells without LINENO</span></span><br><span class=\"line\"><span class=\"comment\"># https://stackoverflow.com/questions/17804007/how-to-show-line-number-when-executing-bash-script</span></span><br><span class=\"line\"><span class=\"comment\"># 还原，cd /bin &amp;&amp; sudo ln -f -s dash sh</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS4=<span class=\"string\">&#x27;[$0] &#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 可考虑去掉 eu</span></span><br><span class=\"line\">/bin/dash <span class=\"variable\">$MyShellOpts</span> <span class=\"string\">&quot;<span class=\"variable\">$@</span>&quot;</span></span><br></pre></td></tr></table></figure></li>\n<li>不论在那个路径下运行都得到脚本的路径<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 不论在那个路径下运行都得到脚本的路径</span></span><br><span class=\"line\"><span class=\"comment\"># 获取当前脚本路径</span></span><br><span class=\"line\">SCRIPT_DIR=<span class=\"string\">&quot;<span class=\"subst\">$( cd <span class=\"string\">&quot;<span class=\"subst\">$( dirname <span class=\"string\">&quot;<span class=\"variable\">$&#123;BASH_SOURCE[0]&#125;</span>&quot;</span> )</span>&quot;</span> &amp;&gt; /dev/null &amp;&amp; pwd )</span>&quot;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<h3 id=\"2-1-5-nc\"><a href=\"#2-1-5-nc\" class=\"headerlink\" title=\"2.1.5 nc\"></a>2.1.5 nc</h3><ul>\n<li>推荐安装 nc openbsd 版本，<code>apt install netcat-openbsd</code></li>\n</ul>\n<h3 id=\"2-1-6-curl\"><a href=\"#2-1-6-curl\" class=\"headerlink\" title=\"2.1.6 curl\"></a>2.1.6 curl</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># FTP 下载</span></span><br><span class=\"line\">curl ftp://user:pass@192.168.7.29/code/pdt-toolchains/src/tin -o /mnt/internal_storage/tin</span><br><span class=\"line\"><span class=\"comment\"># FTP 上传</span></span><br><span class=\"line\">curl -T /etc/profile ftp://user:pass@192.168.7.29/code/profile</span><br><span class=\"line\"><span class=\"comment\"># 与 docker 通信</span></span><br><span class=\"line\">sudo curl -v -H <span class=\"string\">&#x27;User-Agent:&#x27;</span> -H <span class=\"string\">&#x27;Accept:&#x27;</span> -s --unix-socket /var/run/docker.sock http://localhost/v1.41/containers/json?all=<span class=\"literal\">true</span> | jq .[0]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-7-查找文件\"><a href=\"#2-1-7-查找文件\" class=\"headerlink\" title=\"2.1.7 查找文件\"></a>2.1.7 查找文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /media/d/ -<span class=\"built_in\">type</span> f -size +50M ! \\( -name <span class=\"string\">&quot;*deb&quot;</span> -o -name <span class=\"string\">&quot;*vmdk&quot;</span> \\)</span><br><span class=\"line\"><span class=\"comment\"># 删除前去掉 delete 进行确认</span></span><br><span class=\"line\">find . -<span class=\"built_in\">type</span> f ! \\( -name <span class=\"string\">&#x27;*.cpp&#x27;</span> -o -name <span class=\"string\">&#x27;*.h&#x27;</span> \\) -delete</span><br><span class=\"line\"><span class=\"comment\"># 跳过隐藏文件</span></span><br><span class=\"line\">find . -not -path <span class=\"string\">&#x27;*/\\.*&#x27;</span> -<span class=\"built_in\">type</span> f ! \\( -name <span class=\"string\">&#x27;*.cpp&#x27;</span> -o -name <span class=\"string\">&#x27;*.h&#x27;</span> -o -name <span class=\"string\">&#x27;*.txt&#x27;</span> \\)</span><br><span class=\"line\"><span class=\"comment\"># 先创建与源码相同的目录结构再拷贝文件，拷贝文件时忽略某些文件夹下的文件和源码</span></span><br><span class=\"line\">find . \\( -<span class=\"built_in\">type</span> d -<span class=\"built_in\">exec</span> <span class=\"built_in\">mkdir</span> -p <span class=\"string\">&#x27;../gatebox_work/&#123;&#125;&#x27;</span> \\;   -o -<span class=\"built_in\">type</span> f ! \\( -path <span class=\"string\">&#x27;./.git/*&#x27;</span> -o -path <span class=\"string\">&#x27;*/GmSSL/*&#x27;</span> -o -path <span class=\"string\">&#x27;*/.idea/*&#x27;</span> -o -path <span class=\"string\">&#x27;*/.vscode/*&#x27;</span> -o -name <span class=\"string\">&#x27;*.c&#x27;</span> -o -name <span class=\"string\">&#x27;*.h&#x27;</span> -o -name <span class=\"string\">&#x27;*.o&#x27;</span> -o -name <span class=\"string\">&#x27;*.log&#x27;</span> -o -iname makefile \\) -<span class=\"built_in\">exec</span> <span class=\"built_in\">cp</span> <span class=\"string\">&#x27;&#123;&#125;&#x27;</span> <span class=\"string\">&#x27;../gatebox_work/&#123;&#125;&#x27;</span> \\; \\)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-8-磁盘占用统计\"><a href=\"#2-1-8-磁盘占用统计\" class=\"headerlink\" title=\"2.1.8 磁盘占用统计\"></a>2.1.8 磁盘占用统计</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install qdirstat</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-9-cron\"><a href=\"#2-1-9-cron\" class=\"headerlink\" title=\"2.1.9 cron\"></a>2.1.9 cron</h3><ul>\n<li>常见 cron <a href=\"https://www.warp.dev/terminus/how-to-run-cron-every-hour\">写法</a>，<a href=\"https://crontab.guru/\">计算 cron 下次执行时间</a></li>\n<li><code>crontab -e</code> 编辑，cron 会检测 crontab 的更新，自动用最新配置</li>\n<li><code>select-editor</code> 改变默认编辑器</li>\n</ul>\n<h2 id=\"2-2-网络\"><a href=\"#2-2-网络\" class=\"headerlink\" title=\"2.2 网络\"></a>2.2 网络</h2><ul>\n<li>wireguard<ul>\n<li>看介绍<a href=\"https://www.wireguard.com/quickstart/\">视频</a>，详细的<a href=\"https://www.digitalocean.com/community/tutorials/how-to-set-up-wireguard-on-ubuntu-20-04\">配置方法</a>，注意区分 server 和 peer client</li>\n<li>对已经有配置文件的，<code>sudo apt install wireguard resolvconf</code>，将配置保存到 <code>/etc/wireguard/wg0.conf</code>，然后 <code>sudo wg-quick up wg0</code></li>\n</ul>\n</li>\n<li>clash_for_windows linux 版，手动安装服务<a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/3464\">方法</a>，网关模式</li>\n<li>网速占用统计 apt 安装 nethogs</li>\n</ul>\n<h1 id=\"3-备份与还原\"><a href=\"#3-备份与还原\" class=\"headerlink\" title=\"3 备份与还原\"></a>3 备份与还原</h1><p>考虑到经常环境经常变动，所以有必要学习linux的备份和还原技术。</p>\n<h2 id=\"3-1-系统备份\"><a href=\"#3-1-系统备份\" class=\"headerlink\" title=\"3.1 系统备份\"></a>3.1 系统备份</h2><p>备份脚本  <a href=\"https://github.com/pedroetb/rsync-incremental-backup\">rsync-incremental-backup</a></p>\n<p>注意 rsync 的 exclude 将 源路径 视为 根，因此 exclude 指定的路径都是相对 源路径 来说的，具体可以建立几个测试文件，用 <code>dry-run</code> 的方式验证。恢复的脚本要自己写了，如果进不了系统就用 ubuntu 的安装 U 盘恢复。</p>\n<p><strong>下一步</strong>可以配合 cron 实现自动定期备份，配合 ssh 实现远端备份</p>\n<h2 id=\"3-2-启动备份\"><a href=\"#3-2-启动备份\" class=\"headerlink\" title=\"3.2 启动备份\"></a>3.2 启动备份</h2><p>多系统的启动管理。每个硬盘一个 MBR，每个系统分区都有个 boot sector，两个位置都会安装 bootloader</p>\n<p><img src=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/../linux/mbr_boot_sector.gif\" alt=\"mbr_boot_sector\"></p>\n<p>多系统启动方式如下，MBR 的 bootloader 可以转交给其它分区的 bootloader，即 chainload</p>\n<p><img src=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/linux/../linux/loader_menu.gif\" alt=\"loader_menu\"></p>\n<p><strong>下一步</strong>可以查看 grub2 的帮助文档，以及用 dd 备份 bootloader 的方法。还原的方法则使用 ubuntu 的 安装U 盘即可。另为 ubuntu 提供了 <a href=\"https://help.ubuntu.com/community/Boot-Repair\">Boot-Repair</a> 工具。</p>\n<p>参考</p>\n<ul>\n<li><a href=\"http://cn.linux.vbird.org/linux_basic/0580backup_1.php\">鸟哥备份</a></li>\n<li><a href=\"http://cn.linux.vbird.org/linux_server/0310telnetssh.php#rsync\">鸟哥 rsync</a></li>\n<li><a href=\"http://www.admin-magazine.com/Articles/Using-rsync-for-Backups\">Incremental Backups on Linux</a></li>\n<li><a href=\"https://wiki.archlinux.org/index.php/Rsync#Full_system_backup\">Rsync full system backup</a></li>\n</ul>\n<script type=\"module\"> import mermaid from 'https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.esm.min.mjs';\tmermaid.initialize({startOnLoad: true, flowchart: {curve: 'linear'}}); </script>\n\n<p><a href=\"https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/2. 处理平台/linux\"><i class=\"fa-solid fa-download fa-2xl\" style=\"color: gray;\"></i></a></p>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/%E6%89%8B%E6%9C%BA_%E7%94%B5%E8%A7%86_%E5%B9%B3%E6%9D%BF/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/%E6%89%8B%E6%9C%BA_%E7%94%B5%E8%A7%86_%E5%B9%B3%E6%9D%BF/",
            "title": "手机_电视_平板",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-ADB-卸载系统-App\"><a href=\"#1-ADB-卸载系统-App\" class=\"headerlink\" title=\"1 ADB 卸载系统 App\"></a>1 ADB 卸载系统 App</h1><ol>\n<li>开发者选项，开启 USB 调试</li>\n<li>安装 USB driver</li>\n<li>下载 ADB 工具</li>\n</ol>\n<p>2、3 放入 windows 建议安装 - ADB 中</p>\n<ul>\n<li>获取包名，打开 App，输入 <code>adb shell dumpsys window | findstr mCurrentFocus</code></li>\n<li>列出包，<code>adb shell pm list packages</code></li>\n<li>恢复方法 <code>adb shell cmd package install-existing com.huawei.appmarket</code></li>\n<li>Andrioid 11无线调试<ul>\n<li>打开 usb 调试和无线调试</li>\n<li><code>adb pair HOST[:PORT] [PAIRING CODE]</code></li>\n<li>adb connect 192.168.1.xxx:xxx  &#x2F;&#x2F; 注意端口和上门的配对端口不一样，无线调试的IP地址及端口</li>\n</ul>\n</li>\n</ul>\n<p>华为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell pm uninstall --user 0 com.android.mediacenter  音乐</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.himovie  视频</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.wallet  钱包</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.search  搜索</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.hwread.al 阅读</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.browser 浏览器</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.vassistant\t语音助手。不建议删，开启可支持 AI 字幕</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.scanner\t智慧视觉</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.intelligent\t智能助手</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.android.pushagent  推送服务</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.tips\t智能提醒</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.baidu.input_huawei\t百度输入法华为版</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.hitouch 智慧识屏</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.hiaction  智能识屏中控模块</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.hiai 智慧引擎</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.recsys (HwHiAIDSEngine)</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.pengine 智能建议</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.huawei.phoneservice 我的华为</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.android.contacts 联系人</span><br><span class=\"line\">adb shell pm disable-user com.huawei.android.hwouc 关闭系统更新，先清除数据，进入更新消除红点。disable-user 换成 enble 启用</span><br><span class=\"line\">adb shell pm disable-user com.huawei.hwid  (HMS Core)</span><br></pre></td></tr></table></figure>\n\n<p>小米，<a href=\"https://fengooge.blogspot.com/2019/03/taking-ADB-to-uninstall-system-applications-in-MIUI-without-root.html\">参考</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell pm uninstall --user 0 com.miui.systemAdSolution  （小米系统广告解决方案，必删）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.analytics  （小米广告分析，必删）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.player  （小米音乐）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.video  （小米视频）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.videoplayer</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.android.thememanager  （个性主题管理）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.translation.youdao  （有道翻译）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.translation.kingsoft  （金山翻译）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.android.quicksearchbox （搜索）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.android.browser  （浏览器）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.voiceassist  （小爱同学）</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.miui.miservice  （服务与反馈）</span><br><span class=\"line\">健康只能 disable</span><br><span class=\"line\">adb shell</span><br><span class=\"line\">pm disable-user --user 0 com.mi.health</span><br><span class=\"line\">pm enable com.mi.health</span><br></pre></td></tr></table></figure>\n\n<p>oppo a57t</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell pm uninstall --user 0 com.oppo.usercenter</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.android.email</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.oppo.music</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.nearme.themespace</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.nearme.themespacelib</span><br><span class=\"line\">adb shell pm uninstall --user 0 com.nearme.gamecenter</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"2-Android\"><a href=\"#2-Android\" class=\"headerlink\" title=\"2 Android\"></a>2 Android</h1><h2 id=\"2-1-验机\"><a href=\"#2-1-验机\" class=\"headerlink\" title=\"2.1 验机\"></a>2.1 验机</h2><ul>\n<li>重置设备</li>\n<li>小米输入 <code>*#*#6484#*#*</code> 测试功能</li>\n<li>验机参考<a href=\"https://www.bilibili.com/video/BV1xs4y1W7HU/\">视频</a>，也可以参考苹果的 <a href=\"https://www.bilibili.com/video/BV1Hc41187z7\">二手验机流程</a></li>\n<li>安兔兔 和 鲁大师的验机也可以参考，但这两个 App 的验机一直出现网络问题<ul>\n<li>里面有根据 IMEI 查询机器信息</li>\n</ul>\n</li>\n<li>网速测试</li>\n</ul>\n<h1 id=\"3-Iphone\"><a href=\"#3-Iphone\" class=\"headerlink\" title=\"3 Iphone\"></a>3 Iphone</h1><h2 id=\"3-1-验机\"><a href=\"#3-1-验机\" class=\"headerlink\" title=\"3.1 验机\"></a>3.1 验机</h2><ul>\n<li>造假方式 <a href=\"https://www.bilibili.com/video/BV1Ky421z7Gj\">参考</a></li>\n<li>从收到快递开始，一直用摄像头录像</li>\n<li>设备检测，<a href=\"https://www.bilibili.com/video/BV1Hc41187z7\">二手验机流程</a></li>\n<li>爱思、鲨漏的验机报告，包括专业报告<ul>\n<li>二手回收价格也可以从这里查到</li>\n</ul>\n</li>\n<li>淘宝 GSX 花 4.8 查询</li>\n<li><a href=\"https://www.bilibili.com/video/BV1jh4y1z7As\">气密性</a>，只能从 sim 卡槽吹气大致看一下，不够准确</li>\n<li><a href=\"https://www.bilibili.com/video/BV1JN4y127zm\">电池容量检测</a>，软件 <a href=\"http://www.91oss.com/xzzx-W28-Pro.html\">在这</a> 下，可多测几次</li>\n</ul>\n<h2 id=\"3-2-卡贴\"><a href=\"#3-2-卡贴\" class=\"headerlink\" title=\"3.2 卡贴\"></a>3.2 卡贴</h2><ul>\n<li>解锁模式分为 TMSI 和 QPE，QPE 是 12 以上使用，耗电多，还要配合 esim 或另一张卡，因此两种模式都可以的话优先用 TMSI<ul>\n<li>另外还有 ICCID 黑解</li>\n<li>TMSI 解锁时，变换位置会出现没信号的间隔，所以适合大部分时间位置固定的场景</li>\n</ul>\n</li>\n<li>运营商分两种情况，电信方便（先插原来的卡，再插卡贴 + 卡），联通、移动需要 <a href=\"https://www.bilibili.com/video/BV1fL411y7rr\">卡 IPCC</a><ul>\n<li>联通、移动要保存 IPCC，可巨魔后用 <a href=\"https://www.bilibili.com/video/BV1gG41167k4\">IPCC Replacer</a>，去抖音上搜索教程</li>\n<li>卡 IPCC 最后的重启资源库还可以使用 <a href=\"https://tieba.baidu.com/p/8221218967\">快捷指令</a>。利用 Bug 的话不同 ios 版本有细微区别</li>\n</ul>\n</li>\n<li>卡贴使用<ul>\n<li>使用时，建议忘记已经连接的 WIFI 热点，即只使用移动数据</li>\n<li>弹出菜单时，对于 se2 是英特尔基带，因此卡贴解锁选择，英特尔 XR-11，然后 T-mobile LTE。开启数据漫游、VoLTE</li>\n<li>对于联通、移动，接着用上面的卡 IPCC 方法获得 4G，电信则直接有 4G</li>\n<li>卡贴不要频繁拿下，容易损坏芯片</li>\n</ul>\n</li>\n<li>手动进入菜单<ul>\n<li>激活界面，Home 键，选择紧急拨号时，拨打 # 号弹出选择菜单（也可能是 * 号，不同卡贴不一样）</li>\n<li>蜂窝网络 – SIM 卡应用程序</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"4-Google-play\"><a href=\"#4-Google-play\" class=\"headerlink\" title=\"4 Google play\"></a>4 Google play</h1><p>目前小米和华为对 google 的支持都比较麻烦，谨慎升级系统，或者换到国际版系统</p>\n<h2 id=\"4-1-小米\"><a href=\"#4-1-小米\" class=\"headerlink\" title=\"4.1 小米\"></a>4.1 小米</h2><ul>\n<li><p>准备</p>\n<ul>\n<li>参考 <a href=\"https://www.zhihu.com/question/50231539/answer/530627637\">怎么刷MIUI国际版Rom？</a></li>\n<li>按电源键 + 音量上键进入 recovery，长按电源键 + 音量下键进入 fastboot</li>\n<li>备份微信聊天记录，进行桌面和其它内容的云同步</li>\n<li><a href=\"https://www.miui.com/unlock/\">解锁手机</a>，需要进入开发者模式 – 设备解锁状态，等 7 天</li>\n</ul>\n</li>\n<li><p>刷入 recovery</p>\n<ul>\n<li>参考 <a href=\"https://xiaomi.eu/community/threads/installing-a-custom-recovery.67841/\">Installing a Custom Recovery</a> ，下 fastboot 和 对应设备的 twrp，进 fastboot，刷 twrp 不同设备有区别，见参考<ul>\n<li>装小米驱动后 fastboot 仍可能找不到设备，参考<a href=\"https://blog.csdn.net/qz2014728/article/details/101760398\">这个</a>。在设备管理器中，驱动更新选择 “从计算机的设备驱动列表中选择” – Android Phone – Android bootloader interface，忽略安装警告</li>\n</ul>\n</li>\n<li><code>TWRP-3.3.0-0421-XIAOMI9SE-CN-wzsx150-fastboot.7z</code>  是旧版备份</li>\n</ul>\n</li>\n<li><p>三清(Dalvik&#x2F;Cache&#x2F;Data)后，（降级或第一次刷）刷入前清除 data 分区，recovery 刷入 <a href=\"https://xiaomi.eu/community/\">eu 版</a> 。<a href=\"https://cloud.tencent.com/developer/news/473261\">刷机双清、三清、四清</a></p>\n<ul>\n<li>对于 <code>E30004: This package is for &quot;grus&quot; devices; this is a &quot;&quot;</code> ，输入命令 setprop ro.product.device grus 和 setprop ro.build.product grus，<a href=\"https://www.reddit.com/r/Xiaomi/comments/nphvzv/twrp_e30004_this_package_is_for_grus_devices_this/\">见</a></li>\n<li>K60 在最后会报挂载的 3 个错误，目前看没问题</li>\n</ul>\n</li>\n<li><p>最新的澎湃 android 14 使用 fastboot 刷入 <a href=\"https://xiaomi.eu/community/threads/23-11-8-13-16.70548/\">23.11.8</a> （具体参考这个链接，用 update 脚本，不用格式化），文件名 <code>xiaomi.eu_multi_MONDRIAN_OS1.0.23.11.8.DEV_os1-14.zip</code>，因为 <code>Storage encryption in TWRP does not work on Android 14 so we recommend to use fastboot method</code></p>\n<ul>\n<li><p>magisk root 方式也不用下面的 zip 方式，而是 Magisk App 来 patch 刷机解压出的 boot.img，再用 fastboot 刷入，<a href=\"https://iitii.github.io/2022/07/13/1/\">参考1</a>、<a href=\"https://topjohnwu.github.io/Magisk/install.html\">官方参考</a></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装 magisk apk</span></span><br><span class=\"line\"><span class=\"comment\"># 从线刷包里面找到 boot.img</span></span><br><span class=\"line\"><span class=\"comment\"># 进magisk app生成 patch img</span></span><br><span class=\"line\"><span class=\"comment\"># adb shell 修改patch文件名称</span></span><br><span class=\"line\"><span class=\"comment\"># 拷贝到电脑</span></span><br><span class=\"line\">adb pull sdcard/Download/magisk_patched.img</span><br><span class=\"line\"><span class=\"comment\"># https://sspai.com/post/67932</span></span><br><span class=\"line\">adb reboot bootloader</span><br><span class=\"line\">fastboot boot magisk_patched.img</span><br><span class=\"line\">fastboot flash boot magisk_patched.img</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>更新目前可以 recovery 刷入了，文件在 <code>k60\\miflash_unlock_en_7.6.727.43</code></p>\n</li>\n</ul>\n</li>\n<li><p>safetynet，<a href=\"https://xiaomi.eu/community/threads/installing-magisk-and-play-integrity-fix.70553/\">参考1</a>、<a href=\"https://iitii.github.io/2022/07/13/1/\">参考2</a>、<a href=\"https://www.v2ex.com/t/959720\">参考3</a></p>\n<ul>\n<li><a href=\"https://github.com/chiteroman/PlayIntegrityFix/releases\">下载</a></li>\n<li>清除 3 个 App 的数据后重启，Google Play Services, Google Play Store and Google Services Framework</li>\n<li>用 <a href=\"https://github.com/herzhenr/spic-android\">SPIC</a> 校验时要多试几次，用 Google Play 下载时也要多试几次，有时成功有时失败</li>\n<li>关闭 play 商店的自动更新</li>\n</ul>\n</li>\n<li><p>联网后用小米账户解锁，设置 WIFI 局域网代理从而可以登录 Google 账号，<a href=\"https://blog.minamigo.moe/archives/287\">参考</a></p>\n</li>\n<li><p>在 recovery 刷入 <a href=\"https://magiskapp.com/zip/\">magisk</a>，官网下载 apk 文件（不是 zip，zip 是源码），然后重命名为 zip 文件后刷入</p>\n<ul>\n<li>Magisk 隐藏应用名</li>\n<li>打开排除列表 DenyList（Zygisk 下面），选上所有银行 App</li>\n</ul>\n</li>\n<li><p>App</p>\n<ul>\n<li>安装 <code>除Win外软件\\手机\\mi9se</code> 里面的小米应用商店、MX 播放器、系统应用删除</li>\n<li>删除系统应用，视频、音乐、搜索、服务与反馈、浏览器</li>\n<li>使用云同步恢复应用，Google Play 恢复应用</li>\n<li>设置 magisk hide 等金融 App，同时选择隐藏 Magisk 包名</li>\n<li>字体修改，默认 nato sans 在同一个作者中的找到 milan pro 安装并应用</li>\n<li>不要用自带应用商店更新天气，会导致天气打不开</li>\n<li>为了让 JuiceSSH 输入中文，用手心输入法，并禁止联网，apk 已备份</li>\n</ul>\n</li>\n<li><p>通过 <a href=\"https://blog.minamigo.moe/archives/184\">Magisk 模块</a> 解决，没有公交卡、短信通知类不归类、电话没有来电识别，配置文件 <code>MiuiEuLocalization.ini</code> 已备份</p>\n</li>\n<li><p><a href=\"https://github.com/LSPosed/LSPosed/releases\">LSP</a> + <a href=\"https://github.com/LSPosed/LSPosed.github.io/releases\">Shamiko</a></p>\n<ul>\n<li>Magisk 刷入</li>\n<li>启用 zygisk</li>\n<li>关闭“遵守排除列表”</li>\n<li>配置排除列表</li>\n</ul>\n</li>\n<li><p>关闭 play 商店自动更新，关闭小米应用商店自动更新</p>\n</li>\n<li><p>微信</p>\n<ul>\n<li>用 wechat play 版体积更小</li>\n<li>搜索 rec 打开深度清理，然后进入通用里面清理缓存</li>\n<li>最终方法是备份聊天记录后还原</li>\n<li>开启青少年模式、关怀模式去除公众号广告</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-2-华为\"><a href=\"#4-2-华为\" class=\"headerlink\" title=\"4.2 华为\"></a>4.2 华为</h2><p>安装 google play 见 <code>除Win外软件\\华为M6</code></p>\n<ol>\n<li>参考 <a href=\"https://www.youtube.com/watch?v=WwuDKmMuFX0\">这个视频</a>，卸载当前版本”备份“，安装旧版本”备份“，恢复”谷歌服务助手“，激活后重启</li>\n<li>时间改到 19 年（ 是否可以不改？），<a href=\"https://www.youtube.com/watch?v=EnDl10mYijA\">顺序安装</a> 1-5，关键的帐户管理器，使用<a href=\"https://www.youtube.com/watch?v=xbcODqjP4Xo&t=79s\">另一个视频</a>中的，登录不上去重启一下。安装时所有 App 的权限都勾上</li>\n<li>安装服务框架</li>\n<li>关注视频账号的最新更新，没事不升级华为该死的系统</li>\n</ol>\n<ul>\n<li>现在将应用商店地区切换到 中国香港，安装 Gspace，然后在里面就可以登陆 Google 账号，安装 Google play 应用了，<a href=\"https://www.youtube.com/watch?v=__7U73TQaZE\">参考</a></li>\n</ul>\n<h2 id=\"4-3-应用购买\"><a href=\"#4-3-应用购买\" class=\"headerlink\" title=\"4.3 应用购买\"></a>4.3 应用购买</h2><ol>\n<li>中国区不能购买应用，使用 <code>US Fake Address Generator</code> 添加生成的美国地址（目前在用的见 prsnl），信用卡使用 VISA</li>\n<li>挂美国代理，在页面中切换为美国区。删除旧的中国地址</li>\n<li>信用卡会扣 1 美元测试，一段时间后自动退款</li>\n</ol>\n<h1 id=\"5-盒子类\"><a href=\"#5-盒子类\" class=\"headerlink\" title=\"5 盒子类\"></a>5 盒子类</h1><h2 id=\"5-1-极米Z4X\"><a href=\"#5-1-极米Z4X\" class=\"headerlink\" title=\"5.1 极米Z4X\"></a>5.1 极米Z4X</h2><p>花 50 买的这个固件 <code>[小林固件]极米Z4X第三方官改，极致精简、去广告、ROOT，当贝桌面版</code>，无法切换信号源。因为只有极米桌面才有信号源功能。联系卖家 QQ 群后，给了我新的固件，使用极米原版的 Launcher，且没 root。以后再也不买这种垃圾，还不如自己 root 后删系统应用呢。好像不 root 能用 ADB 也可以。</p>\n<ol>\n<li>刷入上面提到的小林固件，<code>jimi-z4-root-dangbei.zip</code></li>\n<li>安装 <code>3C All-in-One Toolbox-Pro-v2.2.2c_build_200111-Mod-armeabi-v7a.apk</code> 和极米桌面</li>\n<li>用 3C 删掉当贝的那堆垃圾，其它系统应用也可以删，可以只留系统设置和无线投屏</li>\n<li>配置极米桌面，删掉不用的栏目</li>\n<li>用 3C ，应用管理 - 极米桌面 - 打开 - Open external Directory，删掉 cache 文件夹里面的内容，同时去掉 cache 的写入权限，这样极米桌面就没有下载的图片了</li>\n<li>不要用这个。用 3C ，应用管理 - 极米桌面 - 打开 - 打开数据目录，databases 中的 okgo_server.db 如果被去掉所有权限，就能做到桌面上什么都没有，信号源功能还可用。原本打算这样然后再装一个 TV Launcher，但尝试后发现，在 Top_TV_Launcher 中无法看到极米桌面（其它 Launcher 也看不到），而不启动极米桌面就无法使用信号源，╮（╯＿╰）╭ 。而且使用其它 Launcher 再启动极米桌面会有一段延迟。看来只能是有裁剪的极米桌面才能达到我想要的效果</li>\n</ol>\n<p><a href=\"https://pan.baidu.com/s/1V9H7uOOiIoplY78SBeruDg\">固件和 Apk 的共享链接</a><br>提取码：echo</p>\n<p>技巧</p>\n<ul>\n<li>更新到旧版本前，在现有版本中，忘记无线网络，避免联网后自动更新和下载广告</li>\n<li>在官方版本中，将g 后缀文件</li>\n</ul>\n<h2 id=\"5-2-玩客云\"><a href=\"#5-2-玩客云\" class=\"headerlink\" title=\"5.2 玩客云\"></a>5.2 玩客云</h2><ul>\n<li><p>可以弄成游戏机、openwrt、armbian，多数选择 armbian，在 <a href=\"https://github.com/hzyitc/armbian-onecloud\">这里</a> 下载</p>\n<ul>\n<li>下载版本选择，因为 <a href=\"https://docs.armbian.com/User-Guide_Getting-Started/\">这个</a> 选择 current，<a href=\"https://github.com/muzihuaner/Casaos_Onecloud/blob/main/INSTALL.md\">这个</a> 选择 jammy （即 Ubuntu，更熟悉） 和 burn，最终是 <code>Armbian-unofficial_24.5.0-trunk_Onecloud_jammy_current_6.6.21_minimal.burn.img</code></li>\n</ul>\n</li>\n<li><p>总体流程参考 <a href=\"https://www.youtube.com/watch?v=afzEE5Ve1V0\">这个</a></p>\n</li>\n<li><p>刷机操作参考 <a href=\"https://www.youtube.com/watch?v=y9jqA9-e3zk\">这个视频</a>，用 Amlogic USB Burning Tool v2.1.6.8 版本，刷机时出错，用 USB 2.0 接口，多试几次，换旧电脑</p>\n<ul>\n<li>短接触点时用镊子，短接成功时 LED 灯不会亮，并且有滴滴声</li>\n</ul>\n</li>\n<li><p>刷机完成后，换源，改时区，注意 ubuntu 22.04 的 armhf 源是 <a href=\"https://blog.csdn.net/ckzuishuai/article/details/129188133\">这个</a>，url 中要有 ubuntu-ports</p>\n</li>\n<li><p><code>/root</code> 下新建 <code>.profile</code>，内容如下，为了让连接 ssh 后 <code>.bashrc</code> 能自动执行，<a href=\"https://askubuntu.com/questions/1487754/how-to-source-bashrc-automatically-when-connect-to-remote\">参考</a></p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># if running bash</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ -n <span class=\"string\">&quot;<span class=\"variable\">$BASH_VERSION</span>&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t<span class=\"comment\"># include .bashrc if it exists</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> [ -f <span class=\"string\">&quot;<span class=\"variable\">$HOME</span>/.bashrc&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t\t\t\t. <span class=\"string\">&quot;<span class=\"variable\">$HOME</span>/.bashrc&quot;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>装 <a href=\"https://github.com/IceWhaleTech/CasaOS\">casaos</a>， <code>wget -qO- https://get.casaos.io | bash</code></p>\n</li>\n<li><p><a href=\"https://github.com/muzihuaner/Casaos_Onecloud/blob/main/README_skill.md\">使用技巧</a></p>\n</li>\n<li><p>使用录播姬容器 <a href=\"https://rec.danmuji.org/install/container/\">镜像</a></p>\n<ul>\n<li>cookie 从 BBDown 中获取，避免失效快</li>\n<li>记录弹幕，不记录原始信息</li>\n</ul>\n</li>\n<li><p>装 biliup 由于没有 arm32 位 docker 比较麻烦，安装如下</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install libxml2-dev libxslt-dev build-essential python3-dev libffi-dev zlib1g-dev libjpeg-dev</span><br><span class=\"line\"></span><br><span class=\"line\">apt install python3.10-venv</span><br><span class=\"line\">python3 -m venv venv</span><br><span class=\"line\"><span class=\"built_in\">source</span> venv/bin/activate</span><br><span class=\"line\">TMPDIR=/root/tmp pc pip3 install biliup</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"5-3-N1-盒子\"><a href=\"#5-3-N1-盒子\" class=\"headerlink\" title=\"5.3 N1 盒子\"></a>5.3 N1 盒子</h2><ul>\n<li>网心云刷 armbian，先救砖回到 android，然后再刷，以下是救砖方法，注意<strong>别勾选</strong>擦除 bootloader、flash<ul>\n<li><a href=\"https://www.youtube.com/watch?v=eGuXIG3szMg\">参考 1</a>、<a href=\"https://www.youtube.com/watch?v=CqqalsF7ZWQ\">参考 2</a></li>\n</ul>\n</li>\n<li>刷机文件 <a href=\"https://github.com/ophub/amlogic-s9xxx-armbian/blob/main/README.cn.md\">来源</a>，根据表格选 s905d，参照玩客云选 <a href=\"https://github.com/ophub/amlogic-s9xxx-armbian/tags\">jammy</a>，即 ubuntu 22.04，但发现没法识别无线网卡，改成 Ubuntu 24.04 noble，<code>Armbian_24.5.0_amlogic_s905d_noble_6.1.84_server_2024.04.08.img.gz</code></li>\n<li>下载解压用 Rufus 烧录 img 文件到 U 盘（用的 MBR 分区表），插上 U 盘就会从 U 盘启动（如果是盒子可能要借助 ADB），同时插上 USB 键盘和 HDMI 显示器</li>\n<li>参照 <a href=\"https://github.com/ophub/amlogic-s9xxx-armbian\">说明页面</a>，刷入 <code>armbian-install</code>，选 101 即 <code>101 s905d Phicomm-N1</code>，文件系统选的 ext4</li>\n<li>刷入后配置 wifi <code>armbian-config</code> ，Network – WIFI，看不到 WIFI 选项说明没驱动</li>\n<li>联网后，可以 ssh 登录，不需要 HDMI 连接了</li>\n<li><code>armbian-apt</code> 选择清华源</li>\n<li>刷回 android 的方法整理，未测试<ul>\n<li>方法一  清除 boot 分区进入线刷，为了免拆机， <a href=\"https://www.right.com.cn/forum/thread-362781-1-1.html\">参考一</a>、<a href=\"https://product.liyiru.top/detail/20220506\">参考二</a></li>\n<li>方法二  ddbr，<a href=\"https://post.smzdm.com/p/akmg5dv4/\">参考一</a>、<a href=\"https://github.com/ophub/amlogic-s9xxx-armbian?tab=readme-ov-file#backuprestore-emmc-original-system\">参考二 注意 Tools 链接</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"6-平板\"><a href=\"#6-平板\" class=\"headerlink\" title=\"6 平板\"></a>6 平板</h1><ul>\n<li>使用 kiwi browser 和 <a href=\"https://gitlab.com/magnolia1234/bypass-paywalls-chrome-clean\">bypass-paywalls-chrome-clean</a>，在 releases 中找到专门给 kiwi 的 crx，打开开发模式后装入</li>\n<li>常用媒体 ap、nyt、wsj、Economist、wired</li>\n</ul>\n<h2 id=\"6-1-华为-M6\"><a href=\"#6-1-华为-M6\" class=\"headerlink\" title=\"6.1 华为 M6\"></a>6.1 华为 M6</h2><ul>\n<li><a href=\"https://club.huawei.com/thread-21738309-1-1.html\">华为M6锁定后台</a><ul>\n<li>任务切换视图，下滑锁定（下滑时间长一点）</li>\n<li>应用启动管理，改为手动，允许后台活动</li>\n<li>电池优化，不允许优化</li>\n<li>开放相应的权限</li>\n</ul>\n</li>\n<li>清理生成的 hwbk 文件，<a href=\"https://www.keccak.top/memo/delete-hwbk.html\">参考</a><ul>\n<li>先 <code>adb pm uninstall --user 0 com.huawei.systemserver</code></li>\n<li>再用 MiXplorer 重命名所有要删除的文件</li>\n<li>最后用 MiXplorer 删除改名后的文件和所在文件夹</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-2-kindle-fire\"><a href=\"#6-2-kindle-fire\" class=\"headerlink\" title=\"6.2 kindle fire\"></a>6.2 kindle fire</h2><ul>\n<li>使用美国亚马逊账户登陆，否则没有应用商店，如果已经用中国账户登陆可以重置，并在账户中删除设备。安装完 netflix 后，可以切换到中国区账户，方便接收文档</li>\n<li>实际测试，只要注销中国区并用美国账户登录，应用商店即可转区，不需要重置设备</li>\n<li>开启 usb 调试，使用 Fire Toolbox V12.0 去广告、换 launcher、装 Google Play、隐藏底部导航条、去除自带应用</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1. 清除 download failed 提示</span><br><span class=\"line\">adb shell dumpsys notification，获得通知 app 的名称为 com.android.providers.downloads</span><br><span class=\"line\">adb shell pm disable-user com.android.providers.downloads</span><br><span class=\"line\">adb shell pm enable com.android.providers.downloads</span><br><span class=\"line\">2. disable search 应用</span><br><span class=\"line\">adb shell pm disable-user com.android.quicksearchbox</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-3-文石-BOOX-Poke2\"><a href=\"#6-3-文石-BOOX-Poke2\" class=\"headerlink\" title=\"6.3 文石 BOOX Poke2\"></a>6.3 文石 BOOX Poke2</h2><ul>\n<li>在应用设置中选择安装 谷歌套件</li>\n<li>需要有 GSF ID 认证的步骤，否则会提示未获得保护机制认证，操作见 <a href=\"https://www.bilibili.com/video/BV1E64y147kz\">boox应用技巧：googleplay的设置和绑定</a></li>\n<li>添加词典，在 dicts 中新建词典名称文件夹，拷入词典，拔出数据线，<a href=\"https://www.bilibili.com/video/BV1RX4y1A7y3\">操作见</a>，词典文件与欧路共用简明英汉</li>\n<li>V2 引擎关闭会导致有的图书看不到目录</li>\n</ul>\n<h1 id=\"7-WSA\"><a href=\"#7-WSA\" class=\"headerlink\" title=\"7 WSA\"></a>7 WSA</h1><ul>\n<li>解决 WSA 占用 C 盘空间过大，移动到其它盘，<a href=\"https://www.windows11tips.com/how-to-customize-windows-subsystem-for-android-file-path-in-windows-11/\">参考</a><ul>\n<li><code>mklink /J &quot;C:\\Users\\用户名\\AppData\\Local\\Packages\\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\\LocalCache&quot; &quot;D:\\LocalCache&quot;</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"8-App\"><a href=\"#8-App\" class=\"headerlink\" title=\"8 App\"></a>8 App</h1><table>\n<thead>\n<tr>\n<th>名称</th>\n<th>用处</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>FolderSync Pro</td>\n<td>用于 Google Drive 同步文件，也支持其它网盘服务<br />选择同步到本地，同步选项开启同步删除操作<br />poke2 要安装 chrome 浏览器才能弹出授权</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/%E8%B7%AF%E7%94%B1%E5%99%A8/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/%E8%B7%AF%E7%94%B1%E5%99%A8/",
            "title": "路由器",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-刷机\"><a href=\"#1-刷机\" class=\"headerlink\" title=\"1 刷机\"></a>1 刷机</h1><h2 id=\"1-1-斐讯K2\"><a href=\"#1-1-斐讯K2\" class=\"headerlink\" title=\"1.1 斐讯K2\"></a>1.1 斐讯K2</h2><ol>\n<li>确定硬件版本，斐讯K2 PSG1218 硬件A2</li>\n<li>更新到官方某个版本，来实现开 telnet、ssh</li>\n<li>刷 breed，相当于 bootloader</li>\n<li>EEPROM、编程器固件备份</li>\n<li>刷别人的固件，华硕、padavan(hiboy)，见 <a href=\"https://tbvv.net/posts/0101-breed.html\">刷机与固件列表</a>，还可以考虑 <a href=\"https://eryige.com/wordpress/?p=214\">自己编译</a></li>\n</ol>\n<h2 id=\"1-2-小米路由器3G\"><a href=\"#1-2-小米路由器3G\" class=\"headerlink\" title=\"1.2 小米路由器3G\"></a>1.2 小米路由器3G</h2><ol>\n<li>下载 <a href=\"http://www.miwifi.com/miwifi_download.html\">开发板</a> miwifi_r3g_firmware_12f97_2.25.124.bin，登陆路由器页面，系统状态 -&gt; 升级检测 刷入</li>\n<li><a href=\"https://d.miwifi.com/rom/ssh\">开 SSH</a> miwifi_ssh.bin。按照页面提示操作</li>\n<li><a href=\"https://breed.hackpascal.net/breed-mt7621-xiaomi-r3g.bin\">刷 breed</a> breed-mt7621-xiaomi-r3g.bin。放入 U 盘后，<code>mtd -r write /extdisks/sda1/breed-mt7621-xiaomi-r3g.bin Bootloader</code></li>\n<li>EEPROM、编程器固件备份。有线网卡 IP 192.168.1.x，断电、按住 reset、接电，路由灯狂闪的时候松开，电脑上在浏览器中输入192.168.1.1，进入 breed 控制台</li>\n<li>刷 <a href=\"http://opt.cn2qq.com/padavan/\">padavan(hiboy)</a> 中的 <code>MI-R3G_3.4.3.9-099.trx</code></li>\n</ol>\n<p><a href=\"https://blog.skk.moe/post/miwifi-r3g-mwan/\">参考1</a>、<a href=\"https://www.right.com.cn/forum/thread-257423-1-1.html\">参考2</a></p>\n<h2 id=\"1-3-红米-ac2100\"><a href=\"#1-3-红米-ac2100\" class=\"headerlink\" title=\"1.3 红米 ac2100\"></a>1.3 红米 ac2100</h2><ul>\n<li>原版固件网速快（500M 宽带，两级路由下面 5G WIFI 达到 610M 网速，与直连光猫拨号比少几十M网速），但功能少，无法解决二级路由下设备 IPv6 地址在 PPPoE 重拨后旧地址不消失的问题；而 OpenWrt（开 PPPoE 拨号，有线最高 430M 网速）网速慢，但插件多，支持 IPv6 PD 下发。目前 OpenWrt 固件是大分区单系统，无法双系统切换</li>\n<li>刷 OpenWrt <a href=\"https://www.bilibili.com/read/cv18237601\">参考</a><ol>\n<li>开 SSH。用官方修复工具降级到有漏洞版本 2.0.7 开 SSH  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">替换 &lt;STOK&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20nvram%20set%20ssh_en%3D1%3B%20nvram%20commit%3B%20sed%20-i%20&#x27;s%2Fchannel%3D.*%2Fchannel%3D%5C%22debug%5C%22%2Fg&#x27;%20%2Fetc%2Finit.d%2Fdropbear%3B%20%2Fetc%2Finit.d%2Fdropbear%20start%3B</span><br><span class=\"line\"></span><br><span class=\"line\">http://192.168.31.1/cgi-bin/luci/;stok=&lt;STOK&gt;/api/misystem/set_config_iotdev?bssid=Xiaomi&amp;user_id=longdike&amp;ssid=-h%3B%20echo%20-e%20&#x27;admin%5Cnadmin&#x27;%20%7C%20passwd%20root%3B</span><br><span class=\"line\"></span><br><span class=\"line\">root 密码 admin</span><br></pre></td></tr></table></figure></li>\n<li>刷固件<ul>\n<li>下 <a href=\"https://openwrt.org/toh/xiaomi/xiaomi_redmi_router_ac2100\">OpenWrt 官方固件</a>，openwrt-22.03.0-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-kernel1.bin、openwrt-22.03.0-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-rootfs0.bin</li>\n<li>两个文件用 WinSCP 传到 &#x2F;tmp 下  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 看当前分区</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/mtd</span><br><span class=\"line\">nvram <span class=\"built_in\">set</span> flag_try_sys1_failed=1</span><br><span class=\"line\">nvram commit</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\">mtd write openwrt-22.03.0-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-kernel1.bin kernel1</span><br><span class=\"line\">mtd write openwrt-22.03.0-ramips-mt7621-xiaomi_redmi-router-ac2100-squashfs-rootfs0.bin rootfs0</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure></li>\n<li>另一种 breed 法，不推荐，还原原版要先还原 bootloader<ul>\n<li>刷 <a href=\"https://breed.hackpascal.net/\">Breed</a>，scp 传到 &#x2F;tmp 下，<code>mtd -r write /tmp/breed-mt7621-xiaomi-r3g.bin Bootloader</code></li>\n<li>进 Breed，固件更新，闪存布局选 OpenWrt，也可以刷老毛子 padavan，<a href=\"https://www.right.com.cn/forum/thread-4047892-1-1.html\">有些 padavan</a> 能到 600M 以上，没测试</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>刷回原版或原版降级：如果刷过 breed，要先通过 breed 恢复原版 bootloader（原版才能用修复工具），然后修复工具刷 2.0.7（<strong>台式网卡不行，USB 网卡可以</strong>）<ul>\n<li>想一直用原版固件，借鉴 autossh 的 <a href=\"https://github.com/NakanoSanku/StudyShare/blob/master/ax3000/ax3000-cr880x-SSH.md\">方法</a> 固化 SSH，在 firewall 配置添加一个自启脚本 autossh.sh，之后就可以升级官方固件了  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 改密码</span></span><br><span class=\"line\">passwd</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> /data/auto_ssh</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /data/auto_ssh</span><br><span class=\"line\"><span class=\"comment\"># WinSCP 传进来 auto_ssh.sh</span></span><br><span class=\"line\"><span class=\"built_in\">chmod</span> +x auto_ssh.sh</span><br><span class=\"line\">./auto_ssh.sh</span><br><span class=\"line\"><span class=\"comment\"># 应该存在 dropbear_rsa_host_key</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.auto_ssh=include</span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.auto_ssh.type=<span class=\"string\">&#x27;script&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.auto_ssh.path=<span class=\"string\">&#x27;/data/auto_ssh/auto_ssh.sh&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.auto_ssh.enabled=<span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 确认修改</span></span><br><span class=\"line\">uci changes firewall</span><br><span class=\"line\">uci commit firewall</span><br><span class=\"line\"><span class=\"comment\"># 之后就可以更新官方固件到最新了</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-4-移动CR8808（红米AX3000\"><a href=\"#1-4-移动CR8808（红米AX3000\" class=\"headerlink\" title=\"1.4 移动CR8808（红米AX3000)\"></a>1.4 移动CR8808（红米AX3000)</h2><ul>\n<li>开 ssh<ul>\n<li><p>进 uboot</p>\n<ul>\n<li>拆两颗螺丝，撬棒打开顶盖，接上 TTL<ul>\n<li>网口朝上，从左开始依次是 电源、RXD、GND、TXD，因此从第 2 个开始依次接 TTL 模块 TXD, GND, RXD</li>\n</ul>\n</li>\n<li>修复工具刷 8806 固件。用笔记本的网卡（<strong>台式网卡不行，USB 网卡可以</strong>），关 defender 防火墙，禁用其它网卡，网线插 1 号 LAN 口，reset 按钮是凹进去的，别和 mesh 组网按钮搞混了</li>\n<li>刷好后蓝灯闪烁，插电 5s 内按任意键</li>\n</ul>\n</li>\n<li><p>开启插电 5s 内任意键进串口，方便以后调试</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenv boot_wait on</span><br><span class=\"line\">setenv uart_en 1</span><br><span class=\"line\">saveenv</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>改 bdata.bin</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setenv ipaddr 192.168.1.2</span><br><span class=\"line\">setenv serverip 192.168.1.1</span><br><span class=\"line\"><span class=\"comment\"># 查看分区信息</span></span><br><span class=\"line\">smeminfo</span><br><span class=\"line\"><span class=\"comment\"># 打开 tftpd64.exe 后选择对应IP地址，回到命令窗口输入以下命令提取 bdata 分区</span></span><br><span class=\"line\">nand <span class=\"built_in\">read</span> 0x44000000 0x900000 0x80000</span><br><span class=\"line\">tftpput 0x44000000 0x80000 bdata.bin</span><br><span class=\"line\"><span class=\"comment\"># 备份后，用 WinHEX 修改 bdata.bin</span></span><br><span class=\"line\"><span class=\"comment\"># 修改方法见下方 详细步骤2</span></span><br><span class=\"line\"><span class=\"comment\"># 上传回去并写入</span></span><br><span class=\"line\">tftpboot bdata.bin &amp;&amp; nand erase 0x900000 0x80000 &amp;&amp; nand write 0x44000000 0x900000 0x80000</span><br><span class=\"line\"><span class=\"comment\"># 写入 ok 后重启</span></span><br><span class=\"line\">reset</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>telnet 登录，密码通过 sn（包含斜杠&#x2F;） <a href=\"https://miwifi.dev/ssh\">算出</a></p>\n</li>\n<li><p>可选：开 ssh，原理是给 firewall 配置加一个新的开机启动脚本，脚本放在不会被还原的 &#x2F;data 下，脚本里面每次还原 ssh 密钥（也备份到 &#x2F;data 下）并启动 ssh 服务</p>\n</li>\n<li><p>防火墙配置部分，参考 <a href=\"https://openwrt.org/docs/guide-user/firewall/firewall_configuration\">OpenWrt firewall</a> 用 <a href=\"https://openwrt.org/docs/guide-user/base-system/uci\">uci 命令</a> 配，就像 <a href=\"https://github.com/NakanoSanku/StudyShare/blob/master/ax3000/ax3000-cr880x-SSH.md\">这里</a> 的 ssh 自启动一样</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看当前防火墙配置</span></span><br><span class=\"line\">uci show firewall</span><br><span class=\"line\"><span class=\"comment\"># 允许 ping 内网</span></span><br><span class=\"line\">uci add firewall rule</span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].name=<span class=\"string\">&#x27;Allow-ICMPv6-Forward&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].src=<span class=\"string\">&#x27;wan&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].dest=<span class=\"string\">&#x27;*&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].proto=<span class=\"string\">&#x27;icmp&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;echo-request&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;echo-reply&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;destination-unreachable&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;packet-too-big&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;time-exceeded&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;bad-header&#x27;</span></span><br><span class=\"line\">uci add_list firewall.@rule[-1].icmp_type=<span class=\"string\">&#x27;unknown-header-type&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].<span class=\"built_in\">limit</span>=<span class=\"string\">&#x27;1000/sec&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].family=<span class=\"string\">&#x27;ipv6&#x27;</span></span><br><span class=\"line\">uci <span class=\"built_in\">set</span> firewall.@rule[-1].target=<span class=\"string\">&#x27;ACCEPT&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># 确认修改</span></span><br><span class=\"line\">uci changes</span><br><span class=\"line\"><span class=\"comment\"># 让修改生效，用 ip6tables 也能配，但重启后会丢配置</span></span><br><span class=\"line\">uci commit firewall</span><br><span class=\"line\">/etc/init.d/firewall restart</span><br><span class=\"line\"><span class=\"comment\"># 查看配置</span></span><br><span class=\"line\">uci show firewall.@rule[-1]</span><br><span class=\"line\"><span class=\"built_in\">cat</span> /etc/config/firewall</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>参考</p>\n<ul>\n<li><a href=\"https://www.right.com.cn/forum/thread-8268392-1-1.html\">总体概况，2 楼内容</a></li>\n<li><a href=\"https://github.com/NakanoSanku/StudyShare/blob/master/ax3000/ax3000-cr880x-SSH.md\">详细步骤1</a>、<a href=\"https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8281028\">详细步骤2</a></li>\n<li><a href=\"https://www.wutaijie.top/?p=254\">启发来源 AX3600</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://post.smzdm.com/p/am8don7p/\">装插件</a></li>\n<li>刷固件：在 uboot 或 ssh 里面刷，目前固件 2.4G wifi 信号不稳，<a href=\"https://github.com/hzyitc/openwrt-redmi-ax3000\">刷 openwrt1</a>、<a href=\"https://www.right.com.cn/forum/thread-8274491-1-1.html\">刷 openwrt2</a><ul>\n<li><p>参考 <a href=\"https://github.com/hzyitc/openwrt-redmi-ax3000\">烧写代码</a>，<code>ubiformat /dev/mtd19 -f openwrt-ipq50xx-arm-redmi_ax3000-squashfs-nand-factory.ubi</code>，将 OpenWrt 烧到 system2，原版在 system1，为双系统，切换系统命令如下</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 显示 ubi.mtd=rootfs 说明当前为 system1，ubi.mtd=rootfs_1 为 system2</span></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /proc/cmdline</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># system1 切 system2，原版切到 OpenWrt</span></span><br><span class=\"line\">nvram <span class=\"built_in\">set</span> flag_last_success=1</span><br><span class=\"line\">nvram <span class=\"built_in\">set</span> flag_boot_rootfs=1</span><br><span class=\"line\">nvram commit</span><br><span class=\"line\">reboot</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># system2 切 system1，OpenWrt 切到原版</span></span><br><span class=\"line\">fw_setenv flag_last_success 0</span><br><span class=\"line\">fw_setenv flag_boot_rootfs 0</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>由于 ac2100 刷 openwrt 做一级路由拨号时，最大速度只有 450M，故将 CR8808 刷 openwrt 做一级路由（关 wifi，网线接二级路由，所以固件信号问题不影响），ac2100 刷回做二级路由，虽然原版 WIFI 速度快，但无法解决二级路由下设备 IPv6 地址在 PPPoE 重拨后旧地址不消失的问题（netsh interface ipv6 show siteprefixes，怀疑没有发送 RA 中 Router lifetime 为 0, Prefix information 中 Valid Lifetime 为 0 的报文，能确认 OpenWrt 发了，让旧的 prefix 失效），故也刷 OpenWrt</p>\n</li>\n<li><p>可改分区表 mtd1 MIBIB 实现增加 OpenWrt Flash 空间，未尝试，这样可能就是 OpenWrt 单系统，没有原版系统了</p>\n</li>\n</ul>\n</li>\n<li>路由器无线加密方式“WPA3&#x2F;WPA2”，Windows  查看是否支持 WIFI6(802.11ax) 和 WPA3 命令 <code>netsh wlan show drivers</code></li>\n<li>刷回原版或原版降级：见上面系统切换命令，原版系统已开 telnet。注意：如要用修复工具还原原版，则需要重新拆机开启 telnet</li>\n</ul>\n<h1 id=\"2-远程管理\"><a href=\"#2-远程管理\" class=\"headerlink\" title=\"2 远程管理\"></a>2 远程管理</h1><h2 id=\"2-1-WOL\"><a href=\"#2-1-WOL\" class=\"headerlink\" title=\"2.1 WOL\"></a>2.1 WOL</h2><ol>\n<li>ip 和 mac 绑定，系统和 bios 要开启对应配置 <a href=\"https://www.iplaysoft.com/wol.html\">wol 网络唤醒</a>。如关机后网口灯不亮，说明网卡断电，更新网卡驱动解决。驱动配置中，关闭环保节能和节能乙太网路</li>\n<li>配置 <a href=\"https://service.oray.com/question/7996.html\">花生壳内网穿透</a>（无公网 ip，无法 ddns 和端口映射）<ul>\n<li>一个账号只能一台设备，因此已有账号则需要使用子账号的方式，方便实名认证</li>\n<li>padavan(hiboy) 固件可能出现 &#x2F;opt 目录未挂载，导致花生壳无法启动，尝试拔掉 U 盘或重启路由器，正常 &#x2F;opt 挂载为 tmpfs 文件系统</li>\n<li>也可以考虑购买开机棒，但不如买个树莓派了</li>\n</ul>\n</li>\n<li>手机测试使用 google play 中的 wake on lan，pc 测试使用 Wake On Lan 又名 aquilaWOL</li>\n</ol>\n<h2 id=\"2-2-U盘访问\"><a href=\"#2-2-U盘访问\" class=\"headerlink\" title=\"2.2 U盘访问\"></a>2.2 U盘访问</h2><ul>\n<li>页面 USB 应用程序开启 samba 后，win10 仍无法访问。运行 gpedit.msc，计算机配置 -&gt; 管理模版 -&gt; 网络 -&gt; Laman 工作站，启动不安全的来宾登录</li>\n<li>挂载 USB 可能出现 readonly，格式化 U 盘解决</li>\n</ul>\n<h2 id=\"2-3-内网穿透\"><a href=\"#2-3-内网穿透\" class=\"headerlink\" title=\"2.3 内网穿透\"></a>2.3 内网穿透</h2><ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/410763468\">正向代理、反向代理、内网穿透介绍</a><ul>\n<li>代理作为客户端，因此可用来隐藏客户端 IP</li>\n<li>代理作为服务器，因此可用来隐藏服务器 IP</li>\n</ul>\n</li>\n<li>客户端部分用 proxychains</li>\n<li>路由器<ul>\n<li>代理服务器端开内网穿透，注意是否提供源码（目前只有花生壳）或有路由器架构的程序</li>\n<li>转发到本地的 HTTP 代理服务器，使用 <a href=\"http://tinyproxy.github.io/\">tinyproxy</a></li>\n<li>下载 openwrt 交叉编译工具<ul>\n<li>对 gcc 找不到 32 位 <code>libz.so.1</code>，安装 <code>sudo apt-get install zlib1g:i386</code> 又会提示有风险的情况<ul>\n<li>手动下载包 <code>sudo apt-get download zlib1g:i386</code></li>\n<li>解压到某个目录 <code>dpkg-deb -R *.deb tmp</code></li>\n<li>通过 <code>export LD_LIBRARY_PATH=/tmp</code> 指定库路径运行 gcc</li>\n</ul>\n</li>\n<li>对于提示程序 not found 的情况，gcc -static 静态链接 libc</li>\n</ul>\n</li>\n<li>考虑 <a href=\"https://freefrp.net/docs.html\">免费 frp 服务</a>，为了保证内网服务的安全，应开启 TLS、STCP，为效率可开启 KCP。参考 <a href=\"https://www.anquanke.com/post/id/231424\">内网渗透代理之frp的应用与改造</a></li>\n<li>如从简单考虑，或内网要求严格，可识别出 frp 流量特征，可用 ssh，见 <a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/%E8%B7%AF%E7%94%B1%E5%99%A8/../linux/#1-1-3-%E9%9A%A7%E9%81%93-%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91\">1.1.3 隧道&#x2F;端口转发</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"3-网络\"><a href=\"#3-网络\" class=\"headerlink\" title=\"3 网络\"></a>3 网络</h1><h2 id=\"3-1-IPv6\"><a href=\"#3-1-IPv6\" class=\"headerlink\" title=\"3.1 IPv6\"></a>3.1 IPv6</h2><ul>\n<li>问题：一级路由 IP 前缀改变（PPPoE 重播）后，怀疑光猫配置为 DHCPv6 stateful 导致，二级路由的 IP 无法及时更新<ul>\n<li>所以联系客服光猫改桥接，用自己的路由器来控制下级，改前关闭光猫的 WIFI，确认光猫 LAN 口速率，有的光猫只有 LAN1 为千兆</li>\n<li>和安装师傅确认，旧光猫桥接最大支持 500M，千兆网才考虑更换光猫</li>\n<li>测速时，笔记本从本地硬盘启动系统（不从 USB 启动）接到光猫 LAN1 口，设置 PPPoE 拨号，<a href=\"https://www.speedtest.cn/\">测速1</a>、<a href=\"https://www.librespeed.cn/\">测速2</a>、<a href=\"http://test.ustc.edu.cn/\">测速3</a>、<a href=\"https://ipw.cn/ipv6/\">IPv6 支持检测</a></li>\n<li>联通 500M 测速，ac2100 原版固件 5G WIFI，下行 &gt; 620M，上行 &gt; 40M</li>\n</ul>\n</li>\n<li>一级路由用 OpenWrt 以支持 PD 下发和对 DHCPv6 的精确控制<ul>\n<li>WAN6 设置 Alias @wan</li>\n<li>LAN 开 Delegate IPv6 prefixes</li>\n<li>LAN 启用 SLAAC，DHCPv6 stateless（<a href=\"https://community.arubanetworks.com/community-home/librarydocuments/viewdocument?DocumentKey=3b490d47-3c25-40cb-bbae-8b89b3b90424&CommunityKey=39a6bdf4-2376-46f9-853a-49420d2d0caa&tab=librarydocuments\">RA-Flags</a> M &#x3D; 0, O &#x3D; 1。实测发现设置 M 也没事），因为与 DHCPv6 stateful 相比，SLAAC 在上级重新拨号地址变化时，下级路由地址能及时更新，<a href=\"https://rongrongbq.moe/2021/08/firewall-and-DDNS-settings-for-IPv6/\">参考</a><ul>\n<li>参考 <a href=\"https://bbs.scumaker.org/t/topic/383\">Openwrt IPv6 一级路由时的配置1</a>（以这个为主）、<a href=\"https://post.smzdm.com/p/awzodmpp/\">Openwrt IPv6 一级路由时的配置2</a>、<a href=\"https://www.v2ex.com/t/799717\">IPv6 二级路由器正确配置</a>、<a href=\"https://www.right.com.cn/forum/thread-8193852-1-1.html\">IPv6 相关介绍</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>对上级不下发 PD 时（一般为校园网），二级路由器的配置<ul>\n<li>IPv6 中继是 3 层，桥接是 2 层，报文进 3 层配置的防火墙和路由才能生效，因此想简单就用中继，更细的可以只让配置包（SLAAC 与 NDP 包）走 2 层桥接</li>\n<li>参考：<a href=\"https://www.right.com.cn/forum/thread-8253827-1-1.html\">中继</a>、<a href=\"https://www.sio.moe/zh-hans/2022/07/14/computer/Network/A-method-for-OpenWRT-secondary-routers-to-obtain-and-assign-IPv6-addresses/\">中继或桥接</a>、<a href=\"https://blog.men.ci/ipv6-slaac-relay-and-bridge\">数据包中继+配置包桥接</a></li>\n</ul>\n</li>\n<li>防火墙，<a href=\"https://rongrongbq.moe/2021/08/firewall-and-DDNS-settings-for-IPv6/\">配置防火墙暴露 windows 设备</a>、<a href=\"https://bbs.scumaker.org/t/topic/383\">配置防火墙暴露 linux 设备 token address</a>、<a href=\"https://superuser.com/questions/1181445/allow-traffic-through-a-firewall-to-a-dynamic-ipv6-address\">使用不连续掩码</a><ul>\n<li>像小米原生固件，没有配置界面的，可用 uci 命令来配，见 CR8808 防火墙部分</li>\n</ul>\n</li>\n<li><a href=\"https://www.v2ex.com/t/842947\">IPv6 DDNS</a>，考虑用一个猜不到的长域名来隐藏 IP</li>\n<li>查看上级是否下发 IPv6-PD 方法，<code>ip -6 r</code>，default 两条，其中一条 ::&#x2F;60</li>\n</ul>\n<h2 id=\"3-2-ShellClash\"><a href=\"#3-2-ShellClash\" class=\"headerlink\" title=\"3.2 ShellClash\"></a>3.2 ShellClash</h2><ul>\n<li><a href=\"https://github.com/juewuy/ShellClash\">ShellClash</a> 装在外置存储（OpenWrt 是 &#x2F;mnt），订阅必须经过在线转换才能用，Nft基础&#x2F;Nft混合 都可以（新版 OpenWrt 没有 iptables）</li>\n<li>clash 资源占用高，偶尔需要全局透明代理时再开启</li>\n</ul>\n<h1 id=\"4-无线桥接\"><a href=\"#4-无线桥接\" class=\"headerlink\" title=\"4 无线桥接\"></a>4 无线桥接</h1><h2 id=\"4-1-padavan（老毛子）\"><a href=\"#4-1-padavan（老毛子）\" class=\"headerlink\" title=\"4.1 padavan（老毛子）\"></a>4.1 padavan（老毛子）</h2><ul>\n<li>无线2.4GHz，无线桥接，AP 工作模式 “AP-Client + AP”，无线 AP-Client 角色 “WAN（Wireless ISP）”，选择 SSID，输入密钥</li>\n<li>外部网络（WAN），外网连接类型 “IPoE动态 IP”</li>\n</ul>\n<h2 id=\"4-2-openwrt\"><a href=\"#4-2-openwrt\" class=\"headerlink\" title=\"4.2 openwrt\"></a>4.2 openwrt</h2><ul>\n<li><a href=\"https://www.ravenxrz.ink/archives/2c9084de.html\">openwrt 无线桥接</a>，master 向外发射信号，client 接收信号。<a href=\"https://einverne.github.io/post/2017/03/openwrt-settings-and-tips.html\">openwrt 接口名</a>、<a href=\"https://www.right.com.cn/forum/thread-4080096-1-1.html\">红米 ac2100 无线中继 client 模式</a></li>\n<li>红米 ac2100 的固件中，无线中继后会生成接口 apcli0 (对于 5G 是 apclii0)。在接口设置中，把这个接口设置成 wan 口的物理接口，替换调原来的 eth0.1</li>\n<li>apcli0 (wan 口) 的网关和 dns 设置成上级的 ip（如 192.168.0.1），接口 ip 设置成与上级同一网段（如 192.168.0.2）</li>\n<li>lan 口是 eth0.2、ra0、rai0 的桥接，ip 设置为内网要分配的网段，网关、dns 设为 wan 口的 ip（如 192.168.0.2）</li>\n<li>接口设置完后可能要在无线中“重启无线”，接下来 lan 口的桥接可能又把 apcli0、apclii0 加回来了，再去掉</li>\n</ul>\n<h1 id=\"5-HTTP-3-TLS-1-3\"><a href=\"#5-HTTP-3-TLS-1-3\" class=\"headerlink\" title=\"5 HTTP/3  TLS 1.3\"></a>5 HTTP/3  TLS 1.3</h1><ul>\n<li>TLS<ul>\n<li><a href=\"https://www.cloudflare.com/learning/ssl/what-happens-in-a-tls-handshake/\">握手流程</a></li>\n<li><a href=\"https://blog.cloudflare.com/rfc-8446-aka-tls-1-3/\">TLS 1.3 介绍</a>、<a href=\"https://www.davidwong.fr/tls13/\">TLS 1.3 详细介绍</a></li>\n<li><a href=\"https://blog.cloudflare.com/encrypted-sni/\">ESNI（目前只有 cloudflare 支持）</a>、<a href=\"https://blog.cloudflare.com/encrypted-client-hello/\">ECH</a></li>\n</ul>\n</li>\n<li>HTTP<ul>\n<li><a href=\"https://http3-explained.haxx.se/zh/why-quic\">QUIC</a></li>\n<li><a href=\"https://www.cloudflare.com/learning/performance/http2-vs-http1.1/\">HTTP2</a></li>\n<li><a href=\"https://www.cloudflare.com/learning/performance/what-is-http3/\">HTTP3</a></li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/windows/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/windows/",
            "title": "windows",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-清理旧文件\"><a href=\"#1-清理旧文件\" class=\"headerlink\" title=\"1 清理旧文件\"></a>1 清理旧文件</h1><p>删除没有权限的文件夹</p>\n<ol>\n<li>文件夹属性 -&gt; 安全 -&gt; 高级 -&gt; 更改所有者 -&gt; 输入自己的用户名 -&gt; 选择下面应用到子文件夹的勾 -&gt; 确定所有对话框</li>\n<li>文件夹属性 -&gt; 安全 -&gt; 高级 -&gt; 权限添加 -&gt; 主体为自己的用户名 -&gt; 勾选下面的继承权限</li>\n</ol>\n<h1 id=\"2-搭建\"><a href=\"#2-搭建\" class=\"headerlink\" title=\"2 搭建\"></a>2 搭建</h1><ol>\n<li>安装 PE 环境到 U 盘，PE 环境尽量不更新，否则 DG 版本更新后之前的系统备份是否还能兼容<ul>\n<li>用 Edgeless PE，<a href=\"https://wiki.edgeless.top/v2/guide/burn.html\">写入</a> 时选择预留分区，大小为 U 盘容量 - 1G，即给前面的 PE 留出 1G 空间</li>\n</ul>\n</li>\n<li>PE 环境下加载 ISO 镜像（镜像选择专业版），运行 source 下的 setup<ul>\n<li>对 Win11 用 Windows 安装器加载镜像安装，绕过 TPM 2.0</li>\n</ul>\n</li>\n<li>更新系统、自动装驱动</li>\n<li>关闭更新</li>\n<li>修改桌面、文档等路径</li>\n<li>激活系统，HEU_KMS_Activator 激活 Office 和 Windows</li>\n<li>安装字体，设置 npp、typora、obsidian、系统字体</li>\n<li>Win11<ul>\n<li><a href=\"https://www.youtube.com/watch?v=p72srXZgOmk\">让系统时钟显示秒数</a></li>\n<li>蓝牙丢失的情况，关机、断电源后，等一分钟，启动可恢复</li>\n<li>蓝牙音量无法调节，regedit 的 <code>计算机\\HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Bluetooth\\Audio\\AVRCP\\CT</code> 中 DisableAbsoluteVolume 改为 1，<a href=\"https://answers.microsoft.com/zh-hans/windows/forum/all/windows10%E6%9B%B4%E6%96%B01803/7fc4f1ca-46be-4b13-8133-0eb56ad9e44d\">参考</a></li>\n<li>修复引导后，在 msconfig 引导中删除旧引导</li>\n<li>导入 reg 目录下其它配置，如用图片查看器打开图片</li>\n<li><a href=\"https://www.elevenforum.com/t/disable-show-more-options-context-menu-in-windows-11.1589/\">使用传统右键菜单命令</a> <code>reg add &quot;HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\\InprocServer32&quot; /f /ve</code>，恢复 <code>reg delete &quot;HKCU\\Software\\Classes\\CLSID\\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}&quot; /f</code></li>\n</ul>\n</li>\n</ol>\n<h2 id=\"2-1-虚拟机安装精简版-Win10\"><a href=\"#2-1-虚拟机安装精简版-Win10\" class=\"headerlink\" title=\"2.1 虚拟机安装精简版 Win10\"></a>2.1 虚拟机安装精简版 Win10</h2><ul>\n<li>VMware 创建一个虚拟机，分配空白的硬盘</li>\n<li>插入 PE U 盘，启动，将 U 盘连接到虚拟机，重启后会从 U 盘启动<ul>\n<li>更改 vmvare BIOS 启动顺序，重启后直接按 ESC 选择 USB（连接到虚拟机），如不行再试下面的</li>\n<li>编辑虚拟机名称的 vmx 文件，添加 <code>bios.bootdelay=&quot;5000&quot;</code>，然后重启按 ESC</li>\n<li>ESC: 调整启动顺序，F2: 进入BIOS Setup</li>\n<li>要还原回去添加 <code>bios.forceSetupOnce = &quot;FALSE&quot;</code> 再重启一次，<a href=\"https://blog.51cto.com/u_15338523/3592954\">参考</a></li>\n</ul>\n</li>\n<li>从 uupdump.net 选择最新的 x64 Feature Update，<a href=\"https://github.com/uup-dump-dev/website-public/blob/master/FAQ.md\">参考</a>、<a href=\"https://docs.atlasos.net/getting-started/installation/\">参考2</a></li>\n<li>下载 <a href=\"https://ameliorated.io/\">AME Wizard</a> 和 ReviOS Playbook，运行</li>\n<li>也可用 VMwareHorizonOSOptimizationTool，<a href=\"https://www.youtube.com/watch?v=T-SuNdocch0\">相关介绍</a></li>\n</ul>\n<h1 id=\"3-软件安装\"><a href=\"#3-软件安装\" class=\"headerlink\" title=\"3 软件安装\"></a>3 软件安装</h1><ul>\n<li>没必要储存的大安装文件，一律以 0 字节的 <code>name.2big</code> 占位</li>\n</ul>\n<!-- DB start -->\n\n<h2 id=\"3-1-试用中\"><a href=\"#3-1-试用中\" class=\"headerlink\" title=\"3.1 试用中\"></a>3.1 试用中</h2><table>\n<thead>\n<tr>\n<th>试用中</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>BurpSuite</td>\n<td></td>\n</tr>\n<tr>\n<td>Fiddler</td>\n<td></td>\n</tr>\n<tr>\n<td>nodesCatch</td>\n<td>节点测延迟和测速，双内核，用来选机场节点和过滤免费节点。必要时改测速下载文件，因为机场可能封锁某些常用下载文件</td>\n</tr>\n<tr>\n<td>incontrol</td>\n<td>锁定 windows 版本，不更新</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-2-必装\"><a href=\"#3-2-必装\" class=\"headerlink\" title=\"3.2 必装\"></a>3.2 必装</h2><table>\n<thead>\n<tr>\n<th>必装</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>驱动</td>\n<td>使用联想驱动工具安装。驱动文件、主机编号、保修时间，见目录显卡驱动-IntelVideo、电源 ACPI-n2hku54w_x64、主板 intelchip-r0pch04w，两个蓝牙驱动<br />显示设置中缩放与布局设置为 125%，但偶尔会出现任务栏显示位置不正常的问题，通过设置分辨率为 1366X768 来放大显示</td>\n</tr>\n<tr>\n<td>字体与主题</td>\n<td></td>\n</tr>\n<tr>\n<td>Clash.for.Windows</td>\n<td>- 设置开机启动，节点切换自动断开<br/>- 手动调用 command.bat 里面的命令安装 service，及手动删除 service 解决“红色地球”问题，<a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/3412\">参见</a><br />- 可能对 clash 订阅的规则不满意，因此见下面 clash 自定义部分<br /><a href=\"https://merlinblog.xyz/wikipageguide.html\">所有平台客户端汇总</a></td>\n</tr>\n<tr>\n<td>Firefox</td>\n<td>- 参考 <a href=\"https://helgeklein.com/blog/2009/08/moving-the-firefox-cache-directory-and-profile-separately/\">这个方法</a> 改变 default-release 那个 profile 位置，cache 位置就不用改了。还原 profile，还原 profile 时扩展需要关闭一下重开，账户可能要重新绑定<br />- 临时使用 AHK 脚本支持欧路双击取词<br />- 如果需要隐藏顶部标签栏、标题栏、侧栏标题，<a href=\"https://medium.com/@Aenon/firefox-hide-native-tabs-and-titlebar-f0b00bdbb88b\">参照这个</a>，但不要添加 windows 按钮那个 CSS<br />- about:config 设置 browser.urlbar.openintab 为 true，搜索结果新 tab 打开<br />- favicons 不更新，手动删除 <a href=\"https://superuser.com/questions/1259660/wrong-favicons-in-firefox\">favicons.sqlite</a></td>\n</tr>\n<tr>\n<td>BANDZIP</td>\n<td>- 6.29 用 skin.data 覆盖，去掉启动的底部广告，关闭更新</td>\n</tr>\n<tr>\n<td>PotPlayer</td>\n<td>- 设置文件类型关联<br />- 设置打开新文件时在当前进程，不新建进程<br />- 字幕缓冲量设为 0 避免弹幕抖动（仅新版需要）<br />- 最新版会有广告，关闭更新<br />- 下载的 ass 弹幕避免占满整个屏幕，可修改 PlayResY，如 1080 分辨率高度占 0.8 高度为 1080&#x2F;0.8&#x3D;1350</td>\n</tr>\n<tr>\n<td>GoogleDrive</td>\n<td>土区年付 100G，替换 Dropbox<br />两种用法<br/>- 与 Dropbox 相同的用法。一般用云端硬盘，切换到“镜像文件”方式同步（非在线方式），点击“文件夹”，选择要同步的文件夹<br/>- 与百度云相同的用法。即只想备份到云，不想与其它设备同步使用“我的计算机”同步</td>\n</tr>\n<tr>\n<td>Cryptomator</td>\n<td></td>\n</tr>\n<tr>\n<td>Obsidian</td>\n<td>笔记管理软件，typora 作为它的外部编辑器</td>\n</tr>\n<tr>\n<td>typora</td>\n<td>- 打开主题文件夹放置 <code>base.user.css</code>  字体和界面宽度设置文件 ，见 <code>typora</code> 文件夹<br />- 其它偏好设置<br />- 目前两个 Bug，会在列表间加空行变成 lose list；被该用 tab 缩进，变成两个空格<br />  第一个用 lint 插件解决，第二个用搜索替换 “(^\\t*)  “ 替换为 “$1\t“</td>\n</tr>\n<tr>\n<td>HEU_KMS_Activator</td>\n<td>office 和 windows 激活工具<br />激活时关闭实时扫描，排除 System32\\kms-renewal.exe 和 SECOPatcher.dll</td>\n</tr>\n<tr>\n<td>Chrome</td>\n<td>第二浏览器</td>\n</tr>\n<tr>\n<td>火绒</td>\n<td>替换系统杀毒</td>\n</tr>\n<tr>\n<td>傲梅轻松备份</td>\n<td>一份安装版、一份 PE 版，尽量不升级<br />关机时备份需关闭 “快速启动”</td>\n</tr>\n<tr>\n<td></td>\n<td><strong>—下面开始是免安装软件—</strong></td>\n</tr>\n<tr>\n<td>wiztree</td>\n<td>显示磁盘空间占用</td>\n</tr>\n<tr>\n<td>SumatraPDF</td>\n<td>关联 PDF 格式</td>\n</tr>\n<tr>\n<td>KeePass</td>\n<td>为了安全设定自动锁定时间</td>\n</tr>\n<tr>\n<td>npp</td>\n<td>修改字体和字体大小<br />点 ？以管理员启动设置更新代理服务器，在插件中安装 compare<br />修改设置中的备份，简单备份改为冗余备份，设置自定义文件夹。每次保存都会在这里记录一份旧的</td>\n</tr>\n<tr>\n<td>OneCommander</td>\n<td>clover 的替代品，防火墙禁止联网防止总提示更新</td>\n</tr>\n<tr>\n<td>ContextMenuManager</td>\n<td>右键菜单，<a href=\"https://github.com/BluePointLilac/ContextMenuManager/releases\">官方下载</a>。清理显卡，添加 MSYS2 到 目录和目录背景，其中命令为 <code>D:\\soft\\msys64\\msys2_shell.cmd -msys -where %v</code></td>\n</tr>\n<tr>\n<td>Everything</td>\n<td>空格表示与，| 表示或，”” 中是真的空格。限定搜索范围，支持简单正则<br />简单的 FTP、HTTP 服务器</td>\n</tr>\n<tr>\n<td>calibre</td>\n<td>epub 等格式的电子阅读器<br />kindle 数据格式转换与管理。新版运行有问题，可能是多显示器的原因，总之维持旧版</td>\n</tr>\n<tr>\n<td>KopiaUI</td>\n<td>增量备份。额外添加 VSS 脚本和 kopiaignore 模板</td>\n</tr>\n<tr>\n<td>alist</td>\n<td>国内网盘转 webdav</td>\n</tr>\n<tr>\n<td>rclone</td>\n<td>webdav&#x2F;国外网盘 挂载、同步，给 KopiaUI 提供支持</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-3-虚拟机安装\"><a href=\"#3-3-虚拟机安装\" class=\"headerlink\" title=\"3.3 虚拟机安装\"></a>3.3 虚拟机安装</h2><table>\n<thead>\n<tr>\n<th>虚拟机安装</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>TIM</td>\n<td>查考<a href=\"https://www.zhihu.com/question/265963430/answer/2492603110\">这个</a>删除 QQProtect</td>\n</tr>\n<tr>\n<td>WeChat</td>\n<td></td>\n</tr>\n<tr>\n<td>百度网盘</td>\n<td></td>\n</tr>\n<tr>\n<td>阿里云盘</td>\n<td></td>\n</tr>\n<tr>\n<td>PikPak_By_Shimily</td>\n<td></td>\n</tr>\n<tr>\n<td>BitComet_v1.87_Stable_Mod</td>\n<td></td>\n</tr>\n</tbody></table>\n<h2 id=\"3-4-建议安装\"><a href=\"#3-4-建议安装\" class=\"headerlink\" title=\"3.4 建议安装\"></a>3.4 建议安装</h2><table>\n<thead>\n<tr>\n<th>建议安装</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>欧路词典与配置</td>\n<td>GoldenDict 和 欧路词典共用的词典</td>\n</tr>\n<tr>\n<td>欧路词典</td>\n<td>- 参考 环境-&gt; 词典软件 设置。词典在“Dictionary在用”<br />- 用 AutoHotkey 脚本，设置划词快捷键 Ctrl + F10</td>\n</tr>\n<tr>\n<td>SecureCRT</td>\n<td>见 linux 文档 SecureCRT 配置问题。配置备份在 VanDyke_Config.zip ，可直接覆盖</td>\n</tr>\n<tr>\n<td>vcxsrv</td>\n<td>替代 xming（有 bug、新版本收费），新建快捷方式 “D:\\soft\\VcXsrv\\vcxsrv.exe :0 -clipboard -multiwindow -dpi 108”<br />添加到 windows 启动中，C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp<br /> <a href=\"https://aufather.wordpress.com/2010/11/21/increasing-font-size-in-xming-server/\">指定 dpi</a> <code>-dpi 108</code> 来增加文字大小</td>\n</tr>\n<tr>\n<td>VMware-workstation</td>\n<td>ZF3R0-FHED2-M80TY-8QYGC-NPKYF <a href=\"https://www.ghxi.com/vmware15.html\">参考</a><br />- 安装时勾选自动安装 WHP（基于 Hyper-V）。解释见 <a href=\"https://www.jianshu.com/p/c02f776a65cd\">Hyper-V 和 VMWare 终于可以无缝共存</a>、<a href=\"https://zhuanlan.zhihu.com/p/381969738\">Windows 下各种虚拟化名词解释</a><br />- 创建虚拟机，不要勾选虚拟化引擎 Intel VT-x 这些，因为 Hyper-V 底层已经用到这些技术了</td>\n</tr>\n<tr>\n<td>office 2021（Office LTSC 专业增强版 2021（SPLA））</td>\n<td>1. 先卸载旧的 office，再用 OTP 工具的激活选项卡清除旧的激活信息，重启<br/>2. 用 OTP 通道： Office 2021 企业长期版，产品：Office LTSC 专业增强版 2021（SPLA）<br />3. 在 OTP 中设置 KMS 服务器激活，<a href=\"https://www.bilibili.com/read/cv19851359/\">参考</a></td>\n</tr>\n<tr>\n<td>Office Tool Plus</td>\n<td>用来选择安装哪些组件和激活管理</td>\n</tr>\n<tr>\n<td>pandoc</td>\n<td>配合 typora 导入、导出各种格式文档</td>\n</tr>\n<tr>\n<td>telegram</td>\n<td></td>\n</tr>\n<tr>\n<td>xmind</td>\n<td>比起 mindmaster 没有节点数限制，xmind 8 绿色版，免费导出 svg，适合画调用关系图<br />xmind 2020 适合画大纲，导出 markdown，图不大时截图配在文章中</td>\n</tr>\n<tr>\n<td>msys2</td>\n<td>建议这个代替 git</td>\n</tr>\n<tr>\n<td>Meld</td>\n<td>windows 版<a href=\"http://meldmerge.org/\">下载</a>，用于 git 或其它比较</td>\n</tr>\n<tr>\n<td>python</td>\n<td></td>\n</tr>\n<tr>\n<td>node</td>\n<td>博客搭建使用</td>\n</tr>\n<tr>\n<td>CLion</td>\n<td></td>\n</tr>\n<tr>\n<td>pycharm</td>\n<td></td>\n</tr>\n<tr>\n<td>ja-netfilter-all</td>\n<td>参考 <a href=\"https://www.jiweichengzhu.com/article/4bcb140d5035426f9da3dea46f564e4d\">这篇文章</a> 运行脚本激活，从这里 <a href=\"https://jetbra.in/s\">zhile 下载和激活码</a></td>\n</tr>\n<tr>\n<td>7z</td>\n<td>备用的解压缩软件，负责备份 firefox 时的命令行工具，提供 hash 右键菜单</td>\n</tr>\n<tr>\n<td>Wireshark</td>\n<td>抓包。更新到 3.2.3 安装 usbpcap 后可以识别 USB 网卡</td>\n</tr>\n<tr>\n<td>spacedesk</td>\n<td>平板做显示器，支持多台，无线连接<br />不要改安装路径，否则触摸屏不好用，<br />防火墙要放开 C:\\Windows\\System32\\spacedeskService.exe</td>\n</tr>\n<tr>\n<td>DeskPins</td>\n<td>窗口置顶软件</td>\n</tr>\n<tr>\n<td>逍遥模拟器</td>\n<td>下载国际版，广告少一些<br />支持微信平板登陆，分辨率修改为 1600X900，dpi 修改为 240<br />雷电模拟器出现开启 AMD VT 后无法启动<br /><a href=\"https://www.cnblogs.com/jsubaron/p/16230491.html\">虚拟机里跑模拟器</a>，可以试试</td>\n</tr>\n<tr>\n<td>喵喵机</td>\n<td>喵喵机 PC 打印程序</td>\n</tr>\n<tr>\n<td>IDM</td>\n<td>破解版，用于下载 Youtube 视频</td>\n</tr>\n<tr>\n<td>CP2102六合一</td>\n<td>win 10 可用</td>\n</tr>\n<tr>\n<td>MouseWithoutBorders</td>\n<td>取消一些快捷键，避免冲突<br />如果改了 dns，可能需要设置 ip mapping</td>\n</tr>\n<tr>\n<td>Microsoft.WindowsTerminal</td>\n<td>可启用透明效果的 github 版本</td>\n</tr>\n<tr>\n<td>wireguard</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td><strong>—下面开始是免安装软件—</strong></td>\n</tr>\n<tr>\n<td>WinSCP</td>\n<td>FTP、SFTP 等，在 session 的 高级设置中 UTF-8 encoding for filename 用来支持中文名</td>\n</tr>\n<tr>\n<td>调试助手</td>\n<td>串口调试助手&#x2F;网络调试助手</td>\n</tr>\n<tr>\n<td>ADB</td>\n<td>adb 工具和 usb 驱动</td>\n</tr>\n<tr>\n<td>IntelliJ IDEA</td>\n<td></td>\n</tr>\n<tr>\n<td>jdk</td>\n<td>JDK、JDK Docs</td>\n</tr>\n<tr>\n<td>VSCode</td>\n<td>创建 data 文件夹，开启 <a href=\"https://code.visualstudio.com/docs/editor/portable\">portable mode</a><br />其它参照 IDE 文档配置</td>\n</tr>\n<tr>\n<td>gtags</td>\n<td></td>\n</tr>\n<tr>\n<td>PDF处理工具</td>\n<td>操作见“电子书处理”文档</td>\n</tr>\n<tr>\n<td>DeDRM_tools</td>\n<td>DRM 移除插件，租借书籍 <a href=\"https://www.reddit.com/r/Piracy/comments/ezenaa/how_to_remove_drm_from_an_amazon_kindle_rented/\">注释掉 rented 两行代码</a> 后可以用，已经加入改后版本</td>\n</tr>\n<tr>\n<td>cmake</td>\n<td>只使用 gui 程序，命令行用 msys2 的</td>\n</tr>\n<tr>\n<td>AutoHotkey</td>\n<td>用于，推 gal 翻页笔映射脚本，欧路词典取词脚本</td>\n</tr>\n<tr>\n<td>Bulk Rename Utility</td>\n<td></td>\n</tr>\n<tr>\n<td>哔哩下载姬</td>\n<td>B 站视频、弹幕下载<br />ass 弹幕的 PlayResY 乘以 2 实现半屏弹幕播放<br />同时搭配 MPC-HC，避免 potplayer 引起的闪屏</td>\n</tr>\n<tr>\n<td>Dism++</td>\n<td><a href=\"https://github.com/Chuyu-Team/Dism-Multi-language\">下载</a>，清理系统空间、引导修复</td>\n</tr>\n<tr>\n<td>Hourglass</td>\n<td>倒计时软件，<a href=\"https://chris.dziemborowicz.com/apps/hourglass/\">官网帮助文档</a></td>\n</tr>\n<tr>\n<td>硬盘</td>\n<td>坏道检查、分区、<a href=\"https://www.bilibili.com/video/BV1ev4y1v7wY\">硬盘信息查看</a>，CrystalDiskInfo 原始值十进制显示<br />DiskGenius <a href=\"https://www.diskgenius.cn/bbs/forum.php?mod=forumdisplay&fid=5\">官方论坛</a> 有 PE 版，即单文件版</td>\n</tr>\n<tr>\n<td>galgame</td>\n<td>翻译器、全屏 Magpie、提取文字 MisakaHookFinder</td>\n</tr>\n<tr>\n<td>Image-Anti-OCR-main</td>\n<td>图片加干扰对抗百度贴吧 OCR</td>\n</tr>\n<tr>\n<td>bilinovel2epub</td>\n<td>哔哩轻小说转 epub</td>\n</tr>\n<tr>\n<td>Umi-OCR</td>\n<td>离线 OCR 软件</td>\n</tr>\n<tr>\n<td>Simple-Web-Server</td>\n<td>给 obsidian media extended 提供一个简易的 http 服务器</td>\n</tr>\n<tr>\n<td>Snipaste</td>\n<td>截图、贴图工具，配合 obsidian 使用</td>\n</tr>\n<tr>\n<td>yt-dlp</td>\n<td>youtube 视频下载</td>\n</tr>\n<tr>\n<td>PortableWinCDEmu</td>\n<td>替代 DAEMON Tools Lite 挂载 galgame 常见的 mds、mdf 文件</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-5-不常安装\"><a href=\"#3-5-不常安装\" class=\"headerlink\" title=\"3.5 不常安装\"></a>3.5 不常安装</h2><table>\n<thead>\n<tr>\n<th>不常安装</th>\n<th>配置</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Arm Keil MDK</td>\n<td>包含 STM32F1 pack</td>\n</tr>\n<tr>\n<td>Git</td>\n<td>可用 msys2 里的 git 替代</td>\n</tr>\n<tr>\n<td>kindle-for-pc</td>\n<td>DeDRM 推荐的版本</td>\n</tr>\n<tr>\n<td>sshfs</td>\n<td>先装 winfsp (Cryptomator 也装了 winfsp)，然后装 <a href=\"https://github.com/billziss-gh/sshfs-win\">sshfs</a> 64位</td>\n</tr>\n<tr>\n<td>Beyond Compare</td>\n<td>windows 防火墙高级设置，添加出站规则，禁止 BC 主程序联网防止过期</td>\n</tr>\n<tr>\n<td>KindleMate</td>\n<td>kindle 单词与笔记管理</td>\n</tr>\n<tr>\n<td>Proxifier</td>\n<td>代替 netch，给 GoogleDrive 用<br />不要用 Portable 即 PE 版，功能不全，会导致 chrome 挂掉<br />5EZ8G-C3WL5-B56YG-SCXM9-6QZAP<br />先创建 Proxy Servers，然后创建 rule 匹配规则<br />为了保险，name resolution 中通过代理解析</td>\n</tr>\n<tr>\n<td>VirtualBox</td>\n<td></td>\n</tr>\n<tr>\n<td>WIFI-FC-5</td>\n<td>Blink USB 无线网卡驱动</td>\n</tr>\n<tr>\n<td>BTSync</td>\n<td>分布式同步软件，下载书籍</td>\n</tr>\n<tr>\n<td>串口工具</td>\n<td>SerialPortMonitor 串口通信数据监控 <br />Virtual Serial Port Driver，串口转发工具<br />破解有14天时间限制，尝试 windows 虚拟机快照<br />串口桥接、虚拟串口、多虚一、一虚多<br />使用 Complex 模式，IN 和 OUT 各创建一个虚口用来监控和发送流量<br />最后 IN 和 OUT 各两个口。也可用 redirect 模式，然后用串口监听软件</td>\n</tr>\n<tr>\n<td>device-monitoring-studio</td>\n<td>串口通信数据监控</td>\n</tr>\n<tr>\n<td>PL23XX_Prolific_DriverInstaller</td>\n<td>PL2303 串口驱动</td>\n</tr>\n<tr>\n<td>CH341SER</td>\n<td>ch340 串口驱动</td>\n</tr>\n<tr>\n<td>DualMonitorTools</td>\n<td>多显示器设置不同壁纸</td>\n</tr>\n<tr>\n<td>函数调用生成</td>\n<td>doxygen graphviz htmlhelp，生成项目文档，生成函数调用图 call graph</td>\n</tr>\n<tr>\n<td>vs_Community</td>\n<td><a href=\"https://blog.lindexi.com/post/VisualStudio-2019-%E5%A6%82%E4%BD%95%E7%A6%BB%E7%BA%BF%E4%B8%8B%E8%BD%BD.html\">VisualStudio 2019 如何离线下载</a><br />下载<br/>vs_Community.exe –layout d:\\vslayout  ^<br/>–add Microsoft.VisualStudio.Workload.ManagedDesktop  ^<br/>–add Microsoft.VisualStudio.Workload.NativeCrossPlat  ^<br/>–add Microsoft.VisualStudio.Workload.NativeDesktop  ^<br/>–add Microsoft.VisualStudio.Workload.VisualStudioExtension –includeOptional ^<br/>–add Component.GitHub.VisualStudio ^<br/>–lang zh-CN –addProductLang en-US<br />下载命令添加 –fix 用于断点续传，有个 arm 包速度很慢挂代理<br/>安装，进入前面指定的 layout 文件夹，输入前面的下载命令去掉 –layout 和 –lang 的部分。取消再选择可以节省空间，可以不全部选择。但要保留下载缓存文件夹，否则以后无法修改功能</td>\n</tr>\n<tr>\n<td>get_iplayer</td>\n<td>BBC 下载，无 DRM，自动转 mp4、srt 字幕<br /><code>C:\\Users\\user_name\\.get_iplayer\\options</code> 中添加，只下载有字幕的视频，设置默认保存路径<br />output D:\\Videos\\BBC<br/>subtitles 1<br/>subsrequired 1</td>\n</tr>\n<tr>\n<td>All Netflix Categories</td>\n<td>netflix 隐藏类别 chrome 插件，解压缩后安装</td>\n</tr>\n<tr>\n<td>Thunderbird</td>\n<td>用来替代 foxmail 的邮件客户端<br />备份与恢复与 firefox 一样，配置文件是 <code>%userprofile%\\appdata\\roaming\\thunderbird\\profiles.ini</code><br />配置储存在 <code>%userprofile%\\appdata\\roaming\\thunderbird\\profiles\\XXXXXX.default-release</code><br />删除旧的用新的覆盖即可</td>\n</tr>\n<tr>\n<td>TortoiseSVN</td>\n<td></td>\n</tr>\n<tr>\n<td>EaseUS BitWiper</td>\n<td>擦除磁盘数据，500G 需 1h</td>\n</tr>\n<tr>\n<td>K-Lite_Codec_Pack</td>\n<td>MPC-HC 播放 B 站视频弹幕不闪屏（不像 potplayer）<br />不要装 mediainfo 会有右键菜单，也可装后再次运行安装文件卸载掉<br />用来显示视频文件缩略图，可只勾选 Explorer Shell Extensions 里面的两个</td>\n</tr>\n<tr>\n<td>字幕查找-生成-处理工具</td>\n<td>查找在线字幕，繁简转换<br />autosub（包括讯飞的配置文件）、aegisub、剪映</td>\n</tr>\n<tr>\n<td>W28Pro</td>\n<td>苹果<a href=\"https://www.bilibili.com/video/BV1JN4y127zm\">电池容量检测</a>软件</td>\n</tr>\n<tr>\n<td></td>\n<td><strong>—下面开始是免安装软件—</strong></td>\n</tr>\n<tr>\n<td>cover 字幕遮挡软件</td>\n<td></td>\n</tr>\n<tr>\n<td>tftpd</td>\n<td></td>\n</tr>\n<tr>\n<td>rufus</td>\n<td>将系统镜像烧录到U盘</td>\n</tr>\n<tr>\n<td>TextEditor</td>\n<td></td>\n</tr>\n<tr>\n<td>星号查看</td>\n<td></td>\n</tr>\n<tr>\n<td>硬件检测</td>\n<td>cpu-z<br />thphn 内存颗粒检测<br />AIDA64，软硬件检测，可以定时生成日志<br />内存超频后的测试</td>\n</tr>\n<tr>\n<td>ComHub</td>\n<td>通过启用 telnet 共享本地 com 口</td>\n</tr>\n<tr>\n<td>PacketSender</td>\n<td>发包软件，偏上层，不关心构造包</td>\n</tr>\n<tr>\n<td>xcap</td>\n<td>发包软件，手动构造包</td>\n</tr>\n<tr>\n<td>ostinato</td>\n<td>发包软件，开源，支持协议多，linux 和 windows 都可用</td>\n</tr>\n<tr>\n<td>GoldenDict</td>\n<td>参考 环境-&gt; 词典软件设置</td>\n</tr>\n<tr>\n<td>Ditto</td>\n<td>剪贴板管理和共享，使用介绍 <a href=\"https://www.playpcesor.com/2011/02/ditto.html\">https://www.playpcesor.com/2011/02/ditto.html</a><br />如果要局域网共享，去掉禁止接收选项，双方填入对方的计算机名和相同的网络密码，接收密码没有填，远程文件选择主机名方式，下面的发送列表添加对方主机名并选择发送全部</td>\n</tr>\n<tr>\n<td>bLend</td>\n<td>窗口透明化</td>\n</tr>\n<tr>\n<td>Glass2k</td>\n<td>窗口置顶与透明</td>\n</tr>\n<tr>\n<td>WinHex</td>\n<td>十六进制编辑器，正常已注册，user.txt 为注册信息</td>\n</tr>\n<tr>\n<td>鼠大侠鼠标连点器</td>\n<td></td>\n</tr>\n<tr>\n<td>EV录屏</td>\n<td>可以录制系统声音</td>\n</tr>\n<tr>\n<td>Bandicam</td>\n<td>另一个录屏软件</td>\n</tr>\n<tr>\n<td>FastStone Capture</td>\n<td>屏幕截图与录像</td>\n</tr>\n<tr>\n<td>音频提取</td>\n<td><a href=\"https://www.zhihu.com/question/266085808/answer/768016788\">怎样将视频中的音频提取出来？</a><br />mkvtoolnix &#x2F; gMKVExtractGUI<br />Pazera_Free_Audio_Extractor 比 mkvtoolnix 支持的多一些</td>\n</tr>\n<tr>\n<td>SQLiteSpy</td>\n<td>sqlite 查看工具</td>\n</tr>\n<tr>\n<td>Folder2Iso</td>\n<td>将文件夹制作成 ISO</td>\n</tr>\n<tr>\n<td>PSTools</td>\n<td>PsExec，用来以 SYSTEM 用户执行命令</td>\n</tr>\n<tr>\n<td>WinCryptHashers</td>\n<td>给 7z 添加 hash 算法。解压到 7zip 目录，新建 Codecs 文件夹<br />用法，右键 CRC SHA 选择 * 或添加到压缩文件，选 hash 算法，<a href=\"https://www.tc4shell.com/en/7zip/wincrypthashers/\">参考</a></td>\n</tr>\n<tr>\n<td>VeraCrypt</td>\n<td>用在 U 盘上</td>\n</tr>\n<tr>\n<td>foobar2000</td>\n<td>音乐转换，如 wav + cue 转 flac 分轨</td>\n</tr>\n<tr>\n<td>sdr-Cleaner_win</td>\n<td></td>\n</tr>\n<tr>\n<td>Quick_Any2Ico</td>\n<td>提取程序图标 ICO、png</td>\n</tr>\n<tr>\n<td>Scrcpy</td>\n<td>手机控制，打开USB 调试、USB 调试（安全）、无线调试，重启手机，输入 IP，.\\scrcpy.exe  –stay-awake –prefer-text –tcpip&#x3D;192.168.x.x<br />目前息屏 –turn-screen-off 和 stayawake 似乎不好用</td>\n</tr>\n<tr>\n<td>gui-inspect-tool</td>\n<td>pywinauto 推荐的工具，也可配合 AHK 用<br />spyplusplus 可用来查看 windows message</td>\n</tr>\n</tbody></table>\n<h2 id=\"3-6-淘汰备份\"><a href=\"#3-6-淘汰备份\" class=\"headerlink\" title=\"3.6 淘汰备份\"></a>3.6 淘汰备份</h2><table>\n<thead>\n<tr>\n<th>淘汰备份</th>\n<th>淘汰原因</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>迅雷 X</td>\n<td>来源 <a href=\"https://axutongxue.com/\">阿虚储物间</a>，用 IDM</td>\n</tr>\n<tr>\n<td>迅雷 5.8</td>\n<td></td>\n</tr>\n<tr>\n<td>HEVC 视频扩展(windows store)</td>\n<td>目前这样设置后会卡，先不用<br /><a href=\"https://zhuanlan.zhihu.com/p/516579045\">看 Netflix 4k</a><br />显示设置，3840×2160，60HZ<br />edge:&#x2F;&#x2F;gpu 搜索 HEVC，以下为 true<br />HEVC installed&#x2F;HEVC activable&#x2F;HDCP 2.2 support&#x2F;HEVC - 4K support</td>\n</tr>\n<tr>\n<td>SyncFolders</td>\n<td>U 盘与电脑同步软件。同步方式选择 PC 到 U 盘的 备份方式</td>\n</tr>\n<tr>\n<td>AllDRMRemoval</td>\n<td>移除 DRM，不支持租借书籍</td>\n</tr>\n<tr>\n<td>NetLimiter</td>\n<td>破解<br />设置最小化和关闭到托盘，关闭更新</td>\n</tr>\n<tr>\n<td>手心输入法</td>\n<td></td>\n</tr>\n<tr>\n<td>Shadowsocks</td>\n<td></td>\n</tr>\n<tr>\n<td>ShadowsocksR</td>\n<td></td>\n</tr>\n<tr>\n<td>sourceinsight</td>\n<td>需要破解</td>\n</tr>\n<tr>\n<td>Sublime Text</td>\n<td>需要使用 patch 破解</td>\n</tr>\n<tr>\n<td>Wub</td>\n<td>Windows Update Blocker，关闭 windows 更新 服务，同时也可用于关闭其它服务，并阻止其它软件开启，设置步骤见官网<br />如果要使用系统更新，可以开启 SSR 全局代理，加快下载</td>\n</tr>\n<tr>\n<td>翻墙工具备份</td>\n<td>对常用翻墙工具的备份</td>\n</tr>\n</tbody></table>\n<!-- DB end -->\n\n<h1 id=\"4-网络\"><a href=\"#4-网络\" class=\"headerlink\" title=\"4 网络\"></a>4 网络</h1><h2 id=\"4-1-windows-store\"><a href=\"#4-1-windows-store\" class=\"headerlink\" title=\"4.1 windows store\"></a>4.1 windows store</h2><p>对于 windows store 设置代理，先设置 ie 代理，然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 导入 ie 代理</span><br><span class=\"line\">netsh winhttp import proxy source=ie</span><br><span class=\"line\"># 取消代理</span><br><span class=\"line\">netsh winhttp reset proxy</span><br></pre></td></tr></table></figure>\n\n<p>对于 windows store 无法联网，错误代码 0x80072F7D。打开IE浏览器工具（注意不是Edge）—— 点击”Internet选项“ —— 选择“高级”选项卡 —— 在“使用TLS1.2”前面打上勾</p>\n<h2 id=\"4-2-命令行\"><a href=\"#4-2-命令行\" class=\"headerlink\" title=\"4.2 命令行\"></a>4.2 命令行</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># http 代理。只对当前 cmd 生效</span><br><span class=\"line\">set http_proxy=http://127.0.0.1:8118</span><br><span class=\"line\">set https_proxy=http://127.0.0.1:8118</span><br><span class=\"line\"># socks 代理。使用 setx 可以添加到 高级系统设置 - 环境变量当中，删除变量只能通过图形界面删除</span><br><span class=\"line\">setx http_proxy socks5://127.0.0.1:10800</span><br><span class=\"line\">setx https_proxy socks5://127.0.0.1:10800</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4-3-添加环回网卡\"><a href=\"#4-3-添加环回网卡\" class=\"headerlink\" title=\"4.3 添加环回网卡\"></a>4.3 添加环回网卡</h2><ul>\n<li>运行 <code>hdwwiz.exe</code> 手动选择硬件 网络适配器 – Microsoft – Microsoft KM-TEST环回适配器</li>\n</ul>\n<h2 id=\"4-4-Clash-自定义\"><a href=\"#4-4-Clash-自定义\" class=\"headerlink\" title=\"4.4 Clash 自定义\"></a>4.4 Clash 自定义</h2><ul>\n<li><p>Clash 修改 profile 路径为其它盘</p>\n</li>\n<li><p>Clash 的 <a href=\"https://www.codein.icu/clashtutorial/\">基本介绍</a>、<a href=\"https://dreamacro.github.io/clash/configuration/configuration-reference.html\">官方配置参考</a>、<a href=\"https://docs.cfw.lbyczf.com/\">参考一</a>、<a href=\"https://lancellc.gitbook.io/clash/\">参考二</a></p>\n</li>\n<li><p>关于 Clash for Windows 的 DNS，关于 DNS 见 <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/wiki/DNS%E6%B1%A1%E6%9F%93%E5%AF%B9Clash%EF%BC%88for-Windows%EF%BC%89%E7%9A%84%E5%BD%B1%E5%93%8D\">一</a>、<a href=\"https://blog.rssins.net/archives/1379\">二</a></p>\n</li>\n<li><p>为防止 DNS 泄露</p>\n<ul>\n<li>组策略，禁用 智能多宿主名称解析</li>\n<li>firefox 设置 socks5 代理，并开启 socks5 DNS 解析</li>\n<li>clash 不添加匹配 IP 的规则，牺牲一些性能</li>\n</ul>\n</li>\n<li><p>Break When Proxy Change 改成 <a href=\"https://docs.cfw.lbyczf.com/contents/breakconn.html\">chain</a>，来切代理时自动断连接</p>\n</li>\n<li><p>用 proxy-provider + rule-provider 的方法，参考 <a href=\"https://www.youtube.com/watch?v=IVlnvBQXEgE\">视频</a>、<a href=\"https://www.920.im/clash-rule-providers-configuration/\">这个</a></p>\n<ul>\n<li>最终采用白名单模式，将直连域名、IP 排除，其它一律走代理，配置文件备份到 asset 文件夹</li>\n<li>参考 <a href=\"https://yattazen.com/tutorial/clash-custom-config.html\">分流原则</a>，重要直连分流规则 &gt; 去广告规则 &gt; 小分流 &gt; 国内外大分流 &gt; 补充规则</li>\n<li>用到的在线 <a href=\"https://github.com/Loyalsoldier/clash-rules\">规则一</a>（用于决定国内 IP）、<a href=\"https://github.com/ACL4SSR/ACL4SSR/tree/master\">规则二</a>（用于细化应用流量）</li>\n<li>以后有新要求可以添加在线或自定义规则</li>\n</ul>\n</li>\n<li><p>另一种方法是，在 profiles 的 parsers 中可加入自定义内容修改原订阅</p>\n<ul>\n<li><p>可参考 <a href=\"https://chenjuefei.com:444/117.html\">这个</a> 和 <a href=\"https://github.com/Dreamacro/clash/wiki/configuration\">官方配置文件写法</a>，更全的 <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/2193\">这个</a> 和 <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/2729\">这个</a></p>\n</li>\n<li><p>调试可用 <code>console.log</code> 打印到文件，下面的代码给 <code>anycast</code> 节点增加 <code>skip-cert-verify</code> 配置</p>\n  <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">parsers:</span> <span class=\"comment\"># array</span></span><br><span class=\"line\"><span class=\"bullet\">-</span> <span class=\"attr\">reg:</span> <span class=\"string\">xxx.com/.+$</span> <span class=\"comment\"># 正则匹配域名</span></span><br><span class=\"line\">\t<span class=\"attr\">code:</span> <span class=\"string\">|</span></span><br><span class=\"line\">\t\t\t<span class=\"string\">module.exports.parse</span> <span class=\"string\">=</span> <span class=\"string\">async</span> <span class=\"string\">(raw,</span> &#123; <span class=\"string\">axios</span>, <span class=\"string\">yaml</span>, <span class=\"string\">notify</span>, <span class=\"string\">console</span> &#125;<span class=\"string\">,</span> &#123; <span class=\"string\">name</span>, <span class=\"string\">url</span>, <span class=\"string\">interval</span>, <span class=\"string\">selected</span> &#125;<span class=\"string\">)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"string\">const</span> <span class=\"string\">obj</span> <span class=\"string\">=</span> <span class=\"string\">yaml.parse(raw);</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">//</span> <span class=\"string\">注意</span> <span class=\"string\">code</span> <span class=\"string\">部分使用</span> <span class=\"string\">JS</span> <span class=\"string\">注释语法</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">//</span> <span class=\"string\">对</span> <span class=\"string\">anycast</span> <span class=\"string\">跳过证书验证</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">obj.proxies.forEach((e)</span> <span class=\"string\">=&gt;</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">if</span> <span class=\"string\">(e.name.startsWith(&#x27;Anycast&#x27;))</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t\t\t<span class=\"string\">e</span>[<span class=\"string\">&#x27;skip-cert-verify&#x27;</span>] <span class=\"string\">=</span> <span class=\"literal\">true</span><span class=\"string\">;</span></span><br><span class=\"line\">\t\t\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"string\">return</span> <span class=\"string\">e;</span></span><br><span class=\"line\">\t\t\t\t&#125;<span class=\"string\">);</span></span><br><span class=\"line\">\t\t\t\t<span class=\"string\">return</span> <span class=\"string\">yaml.stringify(obj);</span></span><br><span class=\"line\">\t\t\t&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>题外话，clash 正则 <a href=\"https://stackoverflow.com/questions/38933898/error-parsing-regexp-invalid-or-unsupported-perl-syntax\">不支持 lookarounds</a>，但如果支持，正常用正则排除掉一组词，应该这样写 <code>^(?!.*(dollar|euro|pound)).*</code>，匹配不包含 (dollar|euro|pound) 的词，<a href=\"https://regexland.com/regex-match-all-except/\">参考</a></p>\n</li>\n<li><p>开启 TUN，用 script 模式，默认程序走 DIRECT 直连</p>\n<ul>\n<li>选中的程序进行流量规则匹配，但对于手动跳过某条匹配规则的情况，如 chrome 浏览器需要临时转给流量分析程序，暂时用接入 clash 的方式区分</li>\n<li>HTTP&#x2F;Socks5 进行流量匹配，TUN 则手动选择代理，见 asset 中 clash_rule.yml</li>\n<li>此时配合 SwitchyOmega 开启快速切换，在 HTTP 和 直连（即 TUN 接入）间切换</li>\n</ul>\n</li>\n<li><p>如果需要开启多个监听端口可用 clash core</p>\n<ul>\n<li><p>在终端中启动 <code>clash-win64.exe -f 配置文件路径 </code></p>\n</li>\n<li><p>配置文件设置控制端口，如 9090，然后 <code>https://clash.razord.top/#/proxies?host=127.0.0.1&amp;port=9090&amp;secret=</code> 来控制和切换</p>\n  <figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mixed-port:</span> <span class=\"number\">17891</span></span><br><span class=\"line\"><span class=\"attr\">mode:</span> <span class=\"string\">global</span></span><br><span class=\"line\"><span class=\"attr\">log-level:</span> <span class=\"string\">debug</span></span><br><span class=\"line\"><span class=\"attr\">external-controller:</span> <span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">:9090</span></span><br><span class=\"line\"><span class=\"attr\">proxies:</span></span><br><span class=\"line\"><span class=\"comment\"># 代理服务器节点</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n</li>\n<li><p>clash 的 api 也可实现一些自定义功能，如 <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/2605\">这个</a></p>\n</li>\n<li><p>选机场</p>\n<ul>\n<li>测速，自己用 stairspeed 注册临时账号买便宜套餐晚高峰测</li>\n<li>经历，经营时间、过去评价、目前跑路风险</li>\n<li>审计，哪些端口被封，或只允许哪些端口，哪些网站被封</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-5-VPN-转-代理\"><a href=\"#4-5-VPN-转-代理\" class=\"headerlink\" title=\"4.5 VPN 转 代理\"></a>4.5 VPN 转 代理</h2><ul>\n<li>VPN 为全局，在某些场景下不够灵活，因此需要转成代理 Socks5&#x2F;HTTP</li>\n<li>例子：Google one vpn，连接前先进行地区校验，然后才开始连接，每隔一段时间还要再次校验，<a href=\"https://bbs.yummy.best/t/topic/467\">详情参考</a><ul>\n<li>所以要<ul>\n<li>将校验流量走代理</li>\n<li>由于 VPN 是全局的，不方便使用，要将其转换为 socks&#x2F;http 代理，集成到 clash 分流管理中</li>\n<li>只有安卓使用了没有被封 UDP 2153 端口，而其它平台用了被封的 443，因此只有安卓可以不套代理直连，其它平台还要再套一层转发 UDP 比较快的代理（这样做仅是为了获得纯净的落地 IP，要消耗机场流量）</li>\n</ul>\n</li>\n<li>方法<ul>\n<li><a href=\"https://www.techkoala.top/google_one_vpn/\">方法1</a>：将 android 手机设置代理走 Windows clash，代理校验流量，再将手机 VPN 共享出来。以后试试 光速 虚拟机<ul>\n<li>widows clash 开启 Allow LAN，设置检测流量的国家。匹配规则 <code>meta[&#39;host&#39;].endswith(&#39;cloud.cupronickel.goog&#39;) or meta[&#39;host&#39;].endswith(&#39;googleapis.com&#39;)</code></li>\n<li>手机<ul>\n<li>设置 wifi 代理为 windows clash 的端口</li>\n<li>开启 VPN</li>\n<li>开启 Every Proxy 共享</li>\n</ul>\n</li>\n<li>windows clash 分流给共享出的端口</li>\n</ul>\n</li>\n<li>方法2：不借助手机、软路由，只用 Windows 作为主设备的使用方式。思路可以，但实际不能用，可能是节点不支持 UDP？<ul>\n<li>参考 <a href=\"https://www.youtube.com/watch?v=GjhetHGIKLg\">局域网共享网络视频</a>，能代理 VPN 底层流量，只能是网关共享或路由共享（配置系统 socks&#x2F;http 代理取决于 VPN 软件是否遵守，有可能可以），由于 Windows Clash <a href=\"https://github.com/Fndroid/clash_for_windows_pkg/issues/1865\">不支持网关共享</a>，因此只能路由共享</li>\n<li>由于只用一台设备，那么运行 VPN 客户端的要是虚拟的 android&#x2F;windows 设备，虚拟 android（像下面一样桥接到环回网卡）类似方法 1，下面考虑虚拟 windows</li>\n<li>新建环回网卡，将 windows 虚拟机桥接到该网卡，宿主机共享 clash 网卡流量给环回网卡，网卡右键 – 属性 – Internet 连接共享（好像每次系统重启要重新配置一下共享），而且可能要设置虚拟机中网卡的 DNS 1.1.1.1、8.8.8.8</li>\n<li>宿主机 clash 配置分流策略，代理校验流量，还要代理 UDP 2153 流量</li>\n<li>虚拟机连接 VPN，同时装 clash 开启局域网共享，不开 TUN，策略 DIRECT，仅将 clash 作为 socks&#x2F;http 服务器把网络共享出去，给宿主机 clash 或局域网设备使用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>题外话：多个网卡都配置网关，根据跃点数，选择路由，可以这样改<ul>\n<li>网卡 IPv4 属性 – 高级 – 取消自动跃点，要是固定 IP 有两处配置，一处网关，一处接口，最终跃点看起来是两者相加，跃点越低优先级越高，通过 route print 查看</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-6-多重代理\"><a href=\"#4-6-多重代理\" class=\"headerlink\" title=\"4.6 多重代理\"></a>4.6 多重代理</h2><ul>\n<li>链式代理：通过不断添加前置代理，如报文按 A –&gt; B –&gt; C 转发，C 配前置代理为 B，B 配前置代理为 A，报文封装与转发顺序相反，为 CBA。以下几种前置代理方法，按灵活性递减列出<ul>\n<li>软件内设置，或设置系统代理&#x2F;环境变量（并被软件使用），如 Tor、浏览器</li>\n<li>代理软件内，设置命中转发规则后使用链式代理，如 clash relay、v2ray proxySettings、Proxifier&#x2F;ProxyChains 中的链式代理</li>\n<li>TUN 模式&#x2F;VPN，成为上层软件的前置代理。用于不支持设置代理或不使用系统代理的软件</li>\n<li>宿主机，作为虚拟机的前置代理，网关共享&#x2F;路由共享&#x2F;设置系统代理三种模式。好处是网关共享&#x2F;路由共享时，不会漏掉没代理的流量</li>\n<li>路由器作网关，成为局域网设备的前置代理。万能但笨重，可以一直叠加上级路由器作为前置代理</li>\n<li>限制：clash 不支持 UDP relay（可用 meta core 的 UoT），代理节点不允许国外 IP 入站，不允许不常用端口出站</li>\n</ul>\n</li>\n<li>典型应用：住宅 IP<ul>\n<li>vmess + socks5 链式代理，测试 clash relay 无法用 http，只能用 socks5，并且配置时要 <code>tls: false, skip-cert-verify: true</code><ul>\n<li>有些网站用直连住宅代理可以，但像 Google 就无法直连，必须链式</li>\n</ul>\n</li>\n<li>如只提供 http 代理<ul>\n<li>不好用的方法<ul>\n<li>不能用 vmess + http 链式，clash 不通，v2ray 没找到配置的地方，怀疑与 http 代理无法处理 dns (udp) 报文有关</li>\n<li>不能用 clash tun + 浏览器代理</li>\n</ul>\n</li>\n<li>临时用 SSH 作 socks5 服务器，clash 配置 socks5 + 住宅 http 链式来用</li>\n<li>用 wireguard + 设置系统代理 或 firefox 自带代理设置（HTTP 的用户密码会在访问时弹出提示），wireguard + firefox 也适用于 linux</li>\n</ul>\n</li>\n<li>测试：<code>curl -x socks5://USER:PASS@IP:PORT ipinfo.io</code></li>\n<li>socks5 UDP <a href=\"https://github.com/txthinking/brook#testsocks5\">支持测试</a> <code>./brook_linux_amd64 testsocks5 -s=&quot;127.0.0.1:17890&quot; -u=&quot;XXX&quot; -p=&quot;XXX&quot;</code></li>\n<li>测试网站<ul>\n<li><a href=\"https://ipinfo.io/\">IP 信息</a> type:isp 为住宅</li>\n<li>欺诈值 <a href=\"https://scamalytics.com/ip\">https://scamalytics.com/ip</a> <a href=\"https://www.ipqualityscore.com/free-ip-lookup-proxy-vpn-test/lookup/11.22.33.44\">https://www.ipqualityscore.com/free-ip-lookup-proxy-vpn-test/lookup/11.22.33.44</a></li>\n<li>伪装度 <a href=\"https://whoer.net/\">https://whoer.net/</a>  <a href=\"https://ipfighter.com/\">https://ipfighter.com/</a></li>\n<li>dns 泄露 <a href=\"https://browserleaks.com/webrtc\">https://browserleaks.com/webrtc</a> <a href=\"https://ipleak.net/\">https://ipleak.net/</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"5-命令行\"><a href=\"#5-命令行\" class=\"headerlink\" title=\"5 命令行\"></a>5 命令行</h1><h2 id=\"5-1-msys2\"><a href=\"#5-1-msys2\" class=\"headerlink\" title=\"5.1 msys2\"></a>5.1 msys2</h2><ul>\n<li><p>为了使用最新的 gcc，安装一套编译工具。<strong>安装时卡在 66% “Updating trust database” ，一定用任务管理器杀掉进程，重新再运行一遍安装</strong></p>\n</li>\n<li><p>打开 MSYS 命令行</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 更新软件数据库和已安装软件</span></span><br><span class=\"line\">pacman -Syu</span><br><span class=\"line\"><span class=\"comment\"># 安装 mingw-w64 GCC</span></span><br><span class=\"line\">pacman -S --needed base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake</span><br><span class=\"line\"><span class=\"comment\"># 前一条命令会装 python，这里装 pip，似乎只装 mingw 的 pip 就行</span></span><br><span class=\"line\">pacman -S python3-pip</span><br><span class=\"line\">pacman -S mingw-w64-x86_64-python-pip</span><br><span class=\"line\">pacman -S vim git</span><br><span class=\"line\"><span class=\"comment\"># 用 windows 下的 meld 安装包，不用下面的，太大了</span></span><br><span class=\"line\"><span class=\"comment\"># windows 下的 meld 只能在 MSYS2 下启动，不能在 mingw64，不清楚原因</span></span><br><span class=\"line\"><span class=\"comment\"># pacman -S mingw-w64-x86_64-meld3</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑 bash.bashrc</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 参考 ANSI Escape Sequences https://gist.github.com/fnky/458719343aabd01cfb17a3a4f7296797</span></span><br><span class=\"line\">PS1=<span class=\"string\">&#x27;\\[\\033]0;\\W\\007\\]&#x27;</span> <span class=\"comment\"># set window title</span></span><br><span class=\"line\">PS1=<span class=\"string\">&quot;<span class=\"variable\">$PS1</span>&quot;</span><span class=\"string\">&#x27;\\[\\033[32m\\]&#x27;</span>       <span class=\"comment\"># change to green</span></span><br><span class=\"line\">PS1=<span class=\"string\">&quot;<span class=\"variable\">$PS1</span>&quot;</span><span class=\"string\">&#x27;[\\! \\A \\w] &#x27;</span>        </span><br><span class=\"line\">PS1=<span class=\"string\">&quot;<span class=\"variable\">$PS1</span>&quot;</span><span class=\"string\">&#x27;\\[\\033[0m\\]&#x27;</span>        <span class=\"comment\"># change color</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PS1</span><br><span class=\"line\"><span class=\"comment\"># 为了使用 Python 包</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PYTHONPATH=<span class=\"string\">&quot;D:\\soft\\msys64\\usr\\lib\\python3.9\\site-packages&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># 右键启动时使用默认配色，SecureCRT 使用 dircolors.256dark</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> [ <span class=\"string\">&quot;<span class=\"variable\">$TERM_PROGRAM</span>&quot;</span> != <span class=\"string\">&quot;mintty&quot;</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">\t<span class=\"built_in\">eval</span> <span class=\"string\">&quot;<span class=\"subst\">$(dircolors -b /etc/dircolors.256dark)</span>&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> <span class=\"built_in\">ls</span>=<span class=\"string\">&#x27;ls --color=auto&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">&#x27;ls --color=auto -alF&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> vi=vim</span><br><span class=\"line\"><span class=\"built_in\">alias</span> grep=<span class=\"string\">&quot;/bin/grep --color&quot;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置<a href=\"https://github.com/njzhangyifei/msys2-mingw-shortcut-menus\">右键菜单</a>，reg 已放到资源目录 <code>右键菜单Bash.reg</code></p>\n</li>\n<li><p>cmake-gui 要装 Qt5，太大了，直接用官网的包中的 cmake-gui 替换掉 <code>D:\\soft\\msys64\\mingw64\\bin</code> 中的</p>\n</li>\n<li><p>以下几条针对 SecureCRT，添加到 login 执行中</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export MSYS2_PATH_TYPE=inherit</span><br><span class=\"line\">export MSYSTEM=MINGW64</span><br><span class=\"line\">source /etc/profile</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置为 True Color</p>\n</li>\n<li><p>允许输入中文，<code>\\msys64\\home\\username\\.inputrc</code> 中 <code>Allow 8-bit input/output</code> 下面 4 行去掉注释，即 set meta-flag on 到 set output-meta on</p>\n</li>\n</ul>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pacman -S package_name  #安装软件包</span><br><span class=\"line\">pacman -R package_name  #删除软件包</span><br><span class=\"line\">pacman -Rs package_name #顺便删除软件包相关依赖</span><br><span class=\"line\">pacman -Syu             #升级系统中的所有包</span><br><span class=\"line\">pacman -Ss package      #查询软件包</span><br><span class=\"line\">pacman -Qs package      #查询已安装的包</span><br><span class=\"line\">pacman -Qi package      #显示查找的包的信息</span><br><span class=\"line\">pacman -Ql package      #显示你要找的包的文件都安装的位置</span><br><span class=\"line\">pacman -Sw package      #下载但不安装包</span><br><span class=\"line\">pacman -U  /path/package.pkg.tar.gz #安装本地包</span><br><span class=\"line\">pacman -Scc             #清理包缓存，下载的包会在/var/cache 这个目录</span><br><span class=\"line\">pacman -Sf pacman       #重新安装包</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/windows/../IDE/#Clion\">Clion</a> 中指定环境目录为  <code>D:\\soft\\msys64\\mingw64\\</code></li>\n<li>参考 1 <a href=\"https://www.chenshaowen.com/blog/correct-way-to-use-vim-on-windows.html\">Windows 下正确使用 Vim 的方式</a></li>\n<li>参考 2 <a href=\"https://creaink.github.io/post/Computer/Windows/win-msys2.html\">MSYS2 和 mintty 打造 Windows 下 Linux 工具体验</a></li>\n</ul>\n<h2 id=\"5-2-git-bash\"><a href=\"#5-2-git-bash\" class=\"headerlink\" title=\"5.2 git bash\"></a>5.2 git bash</h2><p>openssh 方式不论用 cmd 还是 powershell 都没法正确显示长命令，两个办法，git bash (mintty) 或 SecureCRT 的 local shell。不考虑 windows 商店中的 terminal</p>\n<ul>\n<li><p>字体、透明度、主题 dracula</p>\n</li>\n<li><p>修改 PS1，<code>D:\\MySoftware\\Git\\etc\\profile.d\\git-prompt.sh</code>，与 msys2 的配置相同</p>\n</li>\n<li><p>查找之前输出 Alt + F3，Shift + Enter &#x2F; Enter 上一个和下一个匹配</p>\n</li>\n<li><p>Python 代码中设置标准输出编码，否则为 GBK</p>\n  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\">sys.stdout.reconfigure(encoding=<span class=\"string\">&#x27;utf-8&#x27;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>python -u 运行脚本，以便立刻输出到命令行。进入 python -i ，退出 exit()</p>\n</li>\n<li><p>对于 SecureCRT 集成 git bash，选择 <code>D:\\soft\\Git\\bin\\bash.exe</code> 而非 <code>\\user\\bin\\bash.exe</code>。进入后 <code>source /etc/profile</code> 来设置 locale 的中文和 TERM 变量</p>\n</li>\n<li><p>如有 SecureCRT，修改 PS1 同上，字体可指定 Jetbrains 的，颜色为 24 位</p>\n</li>\n<li><p>如有 SecureCRT，配置文件夹颜色，来自 <a href=\"https://github.com/seebi/dircolors-solarized\">dircolors-solarized</a> 中的 dircolors.256dark，改  <code>/etc/bash.bashrc</code> 靠近文档最后的地方为 <code>eval &quot;$(dircolors -b /etc/dircolors.256dark)&quot;</code></p>\n</li>\n</ul>\n<h2 id=\"5-3-shell\"><a href=\"#5-3-shell\" class=\"headerlink\" title=\"5.3 shell\"></a>5.3 shell</h2><ul>\n<li>使用 powershell，输入 <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code> 允许执行脚本</li>\n<li>在 <code>F:\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1</code> 中添加，自定义颜色</li>\n</ul>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># https://superuser.com/questions/1259900/how-to-colorize-the-powershell-prompt</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">prompt</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$ESC</span> = [<span class=\"built_in\">char</span>]<span class=\"number\">27</span></span><br><span class=\"line\">\t\t<span class=\"string\">&quot;<span class=\"variable\">$ESC</span>[35m<span class=\"variable\">$</span>(Get-Date -Format &quot;</span>HH:mm<span class=\"string\">&quot;) <span class=\"variable\">$</span>(<span class=\"variable\">$executionContext</span>.SessionState.Path.CurrentLocation)<span class=\"variable\">$</span>(&#x27;&gt;&#x27; * (<span class=\"variable\">$nestedPromptLevel</span> + 1))<span class=\"variable\">$ESC</span>[0m &quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对于 cmd，添加系统变量 PROMPT 值为 <code>$T$H$H$H$H$H$H$S$P$G$S</code></li>\n</ul>\n<h2 id=\"5-4-openssh\"><a href=\"#5-4-openssh\" class=\"headerlink\" title=\"5.4 openssh\"></a>5.4 openssh</h2><p>参照 <a href=\"https://winscp.net/eng/docs/guide_windows_openssh_server\">Installing SFTP&#x2F;SSH Server on Windows using OpenSSH</a>，1803 之后用系统直接安装，之前版本步骤如下</p>\n<ol>\n<li>下载 <a href=\"https://github.com/PowerShell/Win32-OpenSSH/releases\">OpenSSH for Windows binaries</a> OpenSSH-Win64.zip 解压到 C:\\Program Files\\OpenSSH</li>\n<li>管理员权限 powershell <code>powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1</code></li>\n<li>开启防火墙，管理员权限 powershell <code>New-NetFirewallRule -Name sshd -DisplayName &#39;OpenSSH SSH Server&#39; -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22 -Program &quot;C:\\Program Files\\OpenSSH\\sshd.exe</code></li>\n<li>services.msc 开启 OpenSSH SSH Server 服务</li>\n<li>对于 <code>Administrators</code> 用户组用户，将生成的公钥存到 <code>C:\\ProgramData\\ssh\\administrators_authorized_keys</code> 中（原理是 SSH 客户端保存私钥，服务器端放公钥）<br> - 文章中用的 PuTTYgen 来生成公私密钥对，这里用的 <a href=\"https://www.vandyke.com/support/tips/publickeyauth.html\">SecureCRT 方式</a> 生成，生成格式选的 OpenSSH Key format (new)，将 Identity.pub 的内容放入 administrators_authorized_keys<br>  - 这种方式的 Key 用到 WinSCP 上也可以，但会提示转换，新生成 Identity.ppk 进行 SFTP 连接</li>\n</ol>\n<ul>\n<li>对于 ssh 客户端，把 key 放到 <code>C:\\Users\\用户名\\.ssh</code> 下，即可连接</li>\n</ul>\n<h1 id=\"6-系统问题\"><a href=\"#6-系统问题\" class=\"headerlink\" title=\"6 系统问题\"></a>6 系统问题</h1><h2 id=\"6-1-端口占用\"><a href=\"#6-1-端口占用\" class=\"headerlink\" title=\"6.1 端口占用\"></a>6.1 端口占用</h2><ul>\n<li>cmd 管理员运行，<code>netstat -ano |findstr &quot;PORT&quot;</code></li>\n<li>查看排除端口范围，<code>netsh int ip show excludedportrange protocol=tcp</code><ul>\n<li>释放占用范围 <code>net stop winnat &amp;&amp; net start winnat</code></li>\n<li><a href=\"https://superuser.com/questions/1784776/my-ports-are-always-occupied-and-no-software-shows-why-netstat-tcpview\">参考</a></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"7-其它\"><a href=\"#7-其它\" class=\"headerlink\" title=\"7 其它\"></a>7 其它</h1><h2 id=\"7-1-mbr-转-gpt\"><a href=\"#7-1-mbr-转-gpt\" class=\"headerlink\" title=\"7.1 mbr 转 gpt\"></a>7.1 mbr 转 gpt</h2><ol>\n<li>用 diskgenius 转换分区表</li>\n<li>在系统盘前面分出 500MB 空余空间，用 diskgenius 建立 ESP 和 MBR 分区</li>\n<li>使用 PE 工具修复引导</li>\n</ol>\n<h2 id=\"7-2-Google\"><a href=\"#7-2-Google\" class=\"headerlink\" title=\"7.2 Google\"></a>7.2 Google</h2><ul>\n<li>Google 搜索可在设置中指定地区，避免结果随 IP 而变化；也可通过 <a href=\"https://10wontips.blogspot.com/2018/07/always-search-google-in-english-by.html\">在 URL 指定的方式</a><ul>\n<li>如 US，<code>https://www.google.com/search?q=%s&amp;pws=0&amp;gl=us&amp;gws_rd=cr</code></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"8-备份与还原\"><a href=\"#8-备份与还原\" class=\"headerlink\" title=\"8 备份与还原\"></a>8 备份与还原</h1><ul>\n<li>见备份策略文档</li>\n</ul>\n<h1 id=\"9-U-盘系统\"><a href=\"#9-U-盘系统\" class=\"headerlink\" title=\"9 U 盘系统\"></a>9 U 盘系统</h1><ul>\n<li>使用移动硬盘盒 + 固态硬盘的方案，而非固态 U 盘，因为<ul>\n<li>固态硬盘以后可以给 PC 用</li>\n<li>移动硬盘盒 USB type A 和 type C 只要换线就可支持不同接口，作为 U 盘或随身系统</li>\n</ul>\n</li>\n<li>装系统软件使用 WTG(win to go) 辅助工具，默认选项增加分区配置即可，方法参考 <a href=\"https://post.smzdm.com/p/a5dx4507/\">教大家制作 “随身携带” 的 Windows 11 系统</a> 和 <a href=\"https://bbs.luobotou.org/forum-88-1.html\">萝卜头IT论坛</a>。傲梅也有 WinToGo 工具，可以试试 <a href=\"https://www.disktool.cn/wintogo.html\">口袋系统WinToGo</a>。另外按照这个<a href=\"https://www.bilibili.com/read/cv15813796/\">教程</a>，Rufus 也可以</li>\n</ul>\n<p><a href=\"https://github.com/2-3-5-7/2-3-5-7.github.io/tree/main/虚拟环境/2. 处理平台/windows\"><i class=\"fa-solid fa-download fa-2xl\" style=\"color: gray;\"></i></a></p>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/docker/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/docker/",
            "title": "docker",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<h1 id=\"1-安装\"><a href=\"#1-安装\" class=\"headerlink\" title=\"1 安装\"></a>1 安装</h1><ul>\n<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-on-ubuntu-20-04\">ubuntu 20.04 安装</a>、<a href=\"https://phoenixnap.com/kb/install-docker-on-ubuntu-20-04\">参考二</a></li>\n<li>避免每次输入 sudo  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo groupadd docker</span><br><span class=\"line\">sudo usermod -aG docker <span class=\"variable\">$USER</span></span><br><span class=\"line\"><span class=\"comment\"># 激活新修改</span></span><br><span class=\"line\">newgrp docker</span><br><span class=\"line\"><span class=\"comment\"># 提示没权限的话重启</span></span><br><span class=\"line\">docker version</span><br></pre></td></tr></table></figure></li>\n<li>compose <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04\">安装</a>，这里下载的 github 地址要去 GitHub 看一下来改</li>\n</ul>\n<h2 id=\"1-1-windows-wsl2\"><a href=\"#1-1-windows-wsl2\" class=\"headerlink\" title=\"1.1 windows-wsl2\"></a>1.1 windows-wsl2</h2><ul>\n<li>wsl –update 用 wsl2</li>\n<li>在 resource - proxies 设置代理</li>\n<li>按 <a href=\"https://devops.tutorials24x7.com/blog/how-to-change-docker-data-path-on-windows-10\">Configure WSL 2 Data Location</a> 修改文件路径到其它盘</li>\n<li>wsl 其它 distro 也可以这样改路径</li>\n<li>相关命令  <figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 装 kali</span></span><br><span class=\"line\">wsl <span class=\"literal\">--list</span> <span class=\"literal\">--online</span></span><br><span class=\"line\">wsl <span class=\"literal\">--install</span> <span class=\"literal\">-d</span> kali<span class=\"literal\">-linux</span></span><br><span class=\"line\">wsl <span class=\"literal\">-s</span> kali<span class=\"literal\">-linux</span></span><br><span class=\"line\"><span class=\"comment\"># 修改路径</span></span><br><span class=\"line\">wsl <span class=\"literal\">--export</span> kali<span class=\"literal\">-linux</span> kali<span class=\"literal\">-linux</span>.tar</span><br><span class=\"line\">wsl <span class=\"literal\">--export</span> docker<span class=\"literal\">-desktop-data</span> docker<span class=\"literal\">-desktop-data</span>.tar</span><br><span class=\"line\">wsl <span class=\"literal\">--unregister</span> docker<span class=\"literal\">-desktop-data</span></span><br><span class=\"line\">wsl <span class=\"literal\">--unregister</span> kali<span class=\"literal\">-linux</span></span><br><span class=\"line\">wsl <span class=\"literal\">--import</span> kali<span class=\"literal\">-linux</span> E:\\wsl\\kali kali<span class=\"literal\">-linux</span>.tar <span class=\"literal\">--version</span> <span class=\"number\">2</span></span><br><span class=\"line\">wsl <span class=\"literal\">--import</span> docker<span class=\"literal\">-desktop-data</span> E:\\wsl\\docker<span class=\"literal\">-data</span> docker<span class=\"literal\">-desktop-data</span>.tar <span class=\"literal\">--version</span> <span class=\"number\">2</span></span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://gist.github.com/ilbunilcho/4280bd55a10cefef75e74986b6bff936\">设置 </a><code>appendWindowsPath = false</code>，需要 <code>wsl --shutdown</code></li>\n</ul>\n<h1 id=\"2-镜像\"><a href=\"#2-镜像\" class=\"headerlink\" title=\"2 镜像\"></a>2 镜像</h1><ul>\n<li><p>拉取镜像，替换源速度没有提升，建议 <a href=\"https://note.qidong.name/2020/05/docker-proxy/\">设置代理</a>，只设置前 http 和 https 两处就可以了</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull cdrx/pyinstaller-linux</span><br><span class=\"line\"><span class=\"comment\"># 使用  </span></span><br><span class=\"line\">docker pull ubuntu@sha256:4b114761663a63948fcd36ef36315b31370c52e59546cf32fee60a8fb16aeddf</span><br><span class=\"line\">docker pull --platform linux/arm64 alpine:latest</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>保存和加载镜像</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker save -o &lt;path <span class=\"keyword\">for</span> generated tar file&gt; &lt;image name&gt;</span><br><span class=\"line\">docker load -i &lt;path to image tar file&gt;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"3-容器\"><a href=\"#3-容器\" class=\"headerlink\" title=\"3 容器\"></a>3 容器</h1><ul>\n<li>生成容器  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 指定容器名字方便操作</span></span><br><span class=\"line\"><span class=\"comment\"># -v 是绑定，docker run 见 https://docs.docker.com/engine/reference/commandline/run/</span></span><br><span class=\"line\">docker run --<span class=\"built_in\">rm</span> -it --name table_bot -v /home/zack/code/table_bot:/src/ cdrx/pyinstaller-linux /bin/bash</span><br><span class=\"line\"><span class=\"comment\"># 改成豆瓣源</span></span><br><span class=\"line\">pip config <span class=\"built_in\">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure></li>\n<li>列出容器  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -s 占用大小，-a 所有，包括停止的容器</span></span><br><span class=\"line\">docker ps -a -s</span><br></pre></td></tr></table></figure></li>\n<li>运行命令  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start table_bot</span><br><span class=\"line\"><span class=\"comment\"># -d: Detached mode: run command in the background</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -d table_bot bash -c <span class=\"string\">&#x27;/root/.pyenv/shims/pyinstaller -F bot.py &amp;&amp; cp dist/b .&#x27;</span></span><br></pre></td></tr></table></figure></li>\n<li>进入 docker  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker start table_bot -i</span><br><span class=\"line\"><span class=\"comment\"># 如果已启动</span></span><br><span class=\"line\">docker <span class=\"built_in\">exec</span> -it &lt;mycontainer&gt; /bin/sh</span><br></pre></td></tr></table></figure></li>\n<li><a href=\"https://stackoverflow.com/questions/19335444/how-do-i-assign-a-port-mapping-to-an-existing-docker-container\">修改端口映射</a></li>\n</ul>\n<h1 id=\"4-API\"><a href=\"#4-API\" class=\"headerlink\" title=\"4 API\"></a>4 API</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 用 curl 和 jq 测试</span></span><br><span class=\"line\"><span class=\"comment\"># 用法参考 https://stackoverflow.com/questions/41960751/docker-remote-api-filters-filter-out-network-by-name</span></span><br><span class=\"line\"><span class=\"comment\"># https://stackoverflow.com/questions/28054203/docker-remote-api-filter-exited</span></span><br><span class=\"line\">sudo curl -gG -XGET -v -H <span class=\"string\">&#x27;User-Agent:&#x27;</span> -H <span class=\"string\">&#x27;Accept:&#x27;</span> -s --unix-socket /var/run/docker.sock <span class=\"string\">&#x27;http://localhost/v1.41/containers/json?limit=10&#x27;</span> --data-urlencode <span class=\"string\">&#x27;filters=&#123;&quot;status&quot;: [&quot;running&quot;]&#125;&#x27;</span> | jq <span class=\"string\">&#x27;.[] | &#123;Id, Names&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>对于想通过 nginx 的 path 来区分不同应用的，可以这样配置，<a href=\"https://serverfault.com/questions/1091572/nginx-reverse-proxy-with-subpath\">参考</a>  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /app1/ &#123;</span><br><span class=\"line\">\tproxy_set_header    X-Real-IP  $remote_addr;</span><br><span class=\"line\">\tproxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">\tproxy_set_header    Host $http_host;</span><br><span class=\"line\">\tproxy_redirect      off;</span><br><span class=\"line\">\tproxy_pass          http://127.0.0.1:3000/;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">location /app1 &#123;</span><br><span class=\"line\">\treturn 301 /app1/;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h1 id=\"5-制作镜像\"><a href=\"#5-制作镜像\" class=\"headerlink\" title=\"5 制作镜像\"></a>5 制作镜像</h1><ul>\n<li><p>如何编出更小的镜像 <a href=\"https://jpetazzo.github.io/2020/02/01/quest-minimal-docker-images-part-1/\">系列文章</a></p>\n</li>\n<li><p>制作镜像</p>\n  <figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker build -t iebs .</span><br><span class=\"line\"><span class=\"comment\"># 要是网络不通可以试试 --network=host</span></span><br><span class=\"line\">docker build --network=host -t iebs .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以用 <a href=\"/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/docker/../linux%E8%BD%AF%E4%BB%B6%E7%BC%96%E8%AF%91%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E8%BF%90%E8%A1%8C/#%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5-libc\">静态链接 libc</a> 的方式编出单文件程序，Dockerfile 参考</p>\n  <figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> scratch</span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> iiot_sdk /</span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;./iiot_sdk&quot;</span>]</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/LFS/",
            "url": "https://synrst.de/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/2.%20%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/LFS/",
            "title": "LFS",
            "date_published": "1970-01-01T00:00:00.000Z",
            "content_html": "<ul>\n<li>书的由来：按自己的喜好搭建，写自己的软件，有一个自己的系统。这本书还可用来理解系统<ul>\n<li>定制化，尤其是小型嵌入式系统</li>\n<li>安全</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}